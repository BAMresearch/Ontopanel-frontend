"use strict";self.webpackHotUpdatedrawio_test(179,{51:(e,t,n)=>{let o=new class{constructor(){this.mesoNamespace=["base:https://purl.matolab.org/mseo/methods/example/","mid:https://purl.matolab.org/mseo/mid/","cco:http://www.ontologyrepository.com/CommonCoreOntologies/","obo:http://purl.obolibrary.org/obo/","pt:http://www.daml.org/2003/01/periodictable/PeriodicTable#","geo:http://www.opengis.net/ont/geosparql#"],this.ontoBank={"entityfinderold-onto-extra-btn-MSEO":{}},this.currentCategoriesContent={title:"none",categories:{Class:{name:"Class",content:null},ObjectProperty:{name:"ObjectProperty",content:null},DatatypeProperty:{name:"DatatypeProperty",content:null},Individual:{name:"Individual",content:null},AnnotationProperty:{name:"AnnotationProperty",content:null},Datatype:{name:"Datatype",content:null}}}}modifyOntoBank=(e,t)=>{switch(t){case"reset":this.ontoBank={"entityfinderold-onto-extra-btn-MSEO":{}};break;case"add":this.ontoBank[e[0]]=e[1];break;case"delete":delete this.ontoBank[e[0]]}};modifyCurrentCategoriesContent=(e,t,n)=>{switch(n){case"reset":this.currentCategoriesContent={title:"none",categories:{Class:{name:"Class",content:null},ObjectProperty:{name:"ObjectProperty",content:null},DatatypeProperty:{name:"DatatypeProperty",content:null},Individual:{name:"Individual",content:null},AnnotationProperty:{name:"AnnotationProperty",content:null},Datatype:{name:"Datatype",content:null}}};break;case"selected":this.currentCategoriesContent.title=e,Object.keys(this.currentCategoriesContent.categories).forEach((e=>{this.currentCategoriesContent.categories[e].content=t[e]}))}};loadCurrentTable=(e,t="selected")=>{switch(t){case"selected":let n=e.onto_table.tree;this.modifyCurrentCategoriesContent(e.title,n,t);break;case"reset":this.modifyCurrentCategoriesContent(null,null,t)}document.getElementById("entityfinderold-tree-title").innerHTML=`selected: ${this.currentCategoriesContent.title}`,document.getElementById("entityfinderold-tree-class-btn").click()}};const l="https://ontopanel.herokuapp.com/",i=class{constructor(e,t){this.app=e,this.data=t,this.init()}init(){this.btn=document.createElement("button"),this.btn.innerHTML='<div class="onto-button"> <div name="button-name" style="border:none">buttonname</div> <div class="ontopanel-menu" style="display:none"> <div class="menu-tag">Info</div> <div class="menu-tag">Update</div> <div class="menu-tag">Delete</div> </div> <div class="ontopanel-box" style="display:none"> <div class="box-inner"> <span class="box-close-span">&times;</span> <div name="info-detail" style="overflow:auto;font-size:15px;text-align:left;white-space:nowrap"></div> </div> </div> </div> ';let e=this.data.title;this.btn.querySelector('div[name="button-name"]').textContent=e;const t="entityfinderold-onto-extra-btn-"+e;this.btn.id=t,o.modifyOntoBank([t,this.data],"add"),this.btn.onclick=e=>{e.preventDefault();let t=this.btn.id,n=o.ontoBank[t];o.loadCurrentTable(n)},this.btn.addEventListener("contextmenu",(e=>{e.preventDefault(),this.triggerMenu()})),this.btn.onmouseleave=e=>{e.preventDefault(),this.btn.querySelector(".ontopanel-menu").style.display="none"}}triggerMenu=()=>{let e=this.btn.querySelector(".ontopanel-menu"),t=e.children[0],n=e.children[1],o=e.children[2];e.style.display="block",n.onclick=t=>{t.preventDefault(),t.stopPropagation(),e.style.display="none";let n=new r(this.app);n.updateTigger(this.btn.id),n.ontoForm.querySelector('input[name="formName"]').value=this.data.title},t.onclick=t=>{t.preventDefault(),t.stopPropagation(),e.style.display="none",this.showOntoInfo()},o.onclick=t=>{t.preventDefault(),t.stopPropagation(),e.style.display="none",this.deleteOnto()}};showOntoInfo=()=>{let e=this.btn.id,t=o.ontoBank[e].title,n=o.ontoBank[e].onto_source,l=o.ontoBank[e].date_created,i=this.btn.querySelector(".ontopanel-box");i.onclick=e=>{e.stopPropagation()};let r=this.btn.querySelector('div[name="info-detail"]');this.btn.querySelector(".box-close-span").onclick=()=>{i.style.display="none"},r.innerHTML=`\n      <h4>Info about this ontology:</h4>\n      <ul style="padding-left:20px">\n        <li><b>title</b>: ${t}</li>\n        <li><b>source</b>: ${n}</li>\n        <li><b>updated date</b>: ${l}</li>\n      </ul>\n      `,i.style.display="block"};deleteOnto=()=>{let e=this.btn.id,t=localStorage.getItem("loginUser"),n=o.ontoBank[e].id;t?(t=JSON.parse(t),fetch(l+"api/v1/ontos/change/"+n,{method:"DELETE",headers:new Headers({Authorization:`Token ${t.token}`})}).then((t=>{t.ok?(o.ontoBank[e].title==o.currentCategoriesContent.title&&o.loadCurrentTable(null,"reset"),o.modifyOntoBank([e,null],"delete"),this.btn.remove(),this.handleInfoToggle("Deleted in your databank!","green")):t.json().then((e=>{let t=Object.keys(e)[0];this.handleInfoToggle(e[t],"red")}))})).catch((e=>{this.handleInfoToggle(e,"red")}))):(o.ontoBank[e].title==o.currentCategoriesContent.title&&o.loadCurrentTable(null,"reset"),o.modifyOntoBank([e,null],"delete"),this.btn.remove(),this.handleInfoToggle("Deleted locally","green"))};handleInfoToggle=(e,t)=>{let n=this.app.querySelector("#entityfinderold-onto-menu-info");n.innerText=e,n.style.color=t,n.style.display="block",setTimeout((()=>{n.style.display="none"}),8e3)}},r=class{constructor(e){this.app=e,this.init()}init(){this.uploaderBox=document.createElement("div"),this.uploaderBox.innerHTML='<div class="ontopanel-box"> <div class="box-inner"> <span class="box-close-span">&times;</span> <form enctype="multipart/form-data" class="ontopanel-form"> <h3 style="margin:0">Uploader</h3> <br/> <div> <p>Please upload a file</p> <input type="file" name="formFile"/> </div> <div> <p>Or <br>Enter URL of raw data</p> <input type="url" name="formURL" placeholder="https://example.com"/> </div> <div> <p>And enter the ontology name</p> <input type="text" name="formName" placeholder="mseo" style="width:80px" maxlength="5" required="true"> </div> <div> <button type="submit" name="upload">Submit</button> <button type="submit" name="update" style="display:none">Update</button> <span name="form-info" style="display:none"></span> </div> </form> </div> </div>',this.uploaderBox.style.display="none",this.app.appendChild(this.uploaderBox);let e=this.uploaderBox.querySelector(".box-close-span"),t=this.uploaderBox.querySelector("form");this.ontoForm=t,e.onclick=()=>{this.ontoForm.reset(),this.uploaderBox.style.display="none"}}addTrigger=()=>{this.uploaderBox.style.display="block",console.log(this.uploaderBox);let e=this.ontoForm.querySelector('button[name="upload"]');this.updateOrAddBtn("add"),e.onclick=e=>{e.preventDefault(),this.ontoForm.checkValidity()?this.ontoAddFormToggle(this.ontoForm):this.ontoForm.reportValidity()}};updateTigger=e=>{this.uploaderBox.style.display="block";let t=this.ontoForm.querySelector('button[name="update"]');this.updateOrAddBtn("update"),t.onclick=t=>{t.preventDefault(),this.ontoForm.checkValidity()?this.ontoUpdateFormToggle(this.ontoForm,e):this.ontoForm.reportValidity()}};updateOrAddBtn=e=>{let t=this.ontoForm.querySelector('button[name="upload"]'),n=this.ontoForm.querySelector('button[name="update"]');t.style.display="add"===e?"block":"none",n.style.display="add"===e?"none":"block"};ontoAddFormToggle=e=>{let t=new FormData(e),n=t.get("formName").trim(),l=t.get("formFile"),i=t.get("formURL").trim(),r=this.ontoForm.querySelector('span[name="form-info"]');if(l.size||i)if(Object.keys(o.ontoBank).includes("entityfinderold-onto-extra-btn-"+n))this.handleInfoToggle("this name is taken, use another one!","red");else{r.innerText="In process, please wait.",r.style.color="green",r.style.display="block";let e=localStorage.getItem("loginUser");e?this.ontoAddDB(t,e):this.ontoAddUpdateLocal(t)}else this.handleInfoToggle("Please enter File or URL!","red")};ontoAddUpdateLocal=(e,t=null,n="add")=>{fetch(l+"api/v1/ontos/owltable/",{method:"POST",body:e}).then((e=>{e.ok?e.json().then((e=>{switch(n){case"add":let n=new i(this.app,e);this.app.querySelector("#entityfinderold-onto-extra-btn").prepend(n.btn),this.handleInfoToggle("Succssfully added locally!","green");break;case"update":this.updateOntoBtn(e,t),this.handleInfoToggle("Succssfully updated locally!","green")}this.ontoForm.reset()})):e.json().then((e=>{let t=Object.keys(e)[0];this.handleInfoToggle(e[t],"red")}))})).catch((e=>{this.handleInfoToggle(e,"red")}))};ontoAddDB=(e,t)=>{t=JSON.parse(t),fetch(l+"api/v1/ontos/lists/",{method:"POST",body:e,headers:new Headers({Authorization:`Token ${t.token}`})}).then((e=>{e.ok?e.json().then((e=>{let t=new i(this.app,e);this.app.querySelector("#entityfinderold-onto-extra-btn").prepend(t.btn),this.handleInfoToggle("Succssfully added to your database!","green"),this.ontoForm.reset()})):e.json().then((e=>{let t=Object.keys(e)[0];this.handleInfoToggle(e[t],"red")}))})).catch((e=>{this.handleInfoToggle(e,"red")}))};ontoUpdateFormToggle=(e,t)=>{let n=this.ontoForm.querySelector('span[name="form-info"]'),l=new FormData(e),i=l.get("formName").trim(),r=l.get("formFile"),a=l.get("formURL").trim();if(r.size||a)if(Object.keys(o.ontoBank).filter((e=>e!==t)).includes("entityfinderold-onto-extra-btn-"+i))this.handleInfoToggle("this name is taken, use another one!","red");else{n.innerText="In process, please wait.",n.style="color: green; display:block;";let e=localStorage.getItem("loginUser");e?this.ontoUpdateDB(l,t,e):this.ontoAddUpdateLocal(l,t,"update")}else this.handleInfoToggle("Please enter File or URL!","red")};updateOntoBtn=(e,t)=>{let n=this.app.querySelector("#"+t),l=e.title;n.innerText=l;const i="entityfinderold-onto-extra-btn-"+l;n.id=i,o.modifyOntoBank([t,null],"delete"),o.modifyOntoBank([i,e],"add"),o.loadCurrentTable(e)};ontoUpdateDB=(e,t,n)=>{n=JSON.parse(n);let i=o.ontoBank[t].id;fetch(l+"api/v1/ontos/change/"+i,{method:"PUT",body:e,headers:new Headers({Authorization:`Token ${n.token}`})}).then((e=>{e.ok?e.json().then((e=>{this.updateOntoBtn(e,t),this.handleInfoToggle("Succssfully updated in your databank!","green"),this.ontoForm.reset()})):e.json().then((e=>{let t=Object.keys(e)[0];this.handleInfoToggle(e[t],"red")}))})).catch((e=>{this.handleInfoToggle(e,"red")}))};handleInfoToggle=(e,t)=>{let n=this.uploaderBox.querySelector('span[name="form-info"]');n.innerText=e,n.style.color=t,n.style.display="block",setTimeout((()=>{n.style.display="none"}),8e3)}},a=(e,t,n,o)=>{let l=document.createElement("ul");return t.forEach((t=>{let i=n.cloneNode(!0),r=i.firstElementChild,c=r.children[0],h=r.children[1],u=r.children[2],m=r.children[3],y=h.children[0];y.innerHTML=t[0];let g="li-term-"+y.innerText;if(y.id=g,y.onclick=e=>{e.preventDefault();let t=h.children[1],n=s(g,t);t.replaceWith(n),t.style.display="block",t.scrollIntoView({block:"nearest",inline:"center"})},u.onclick=t=>{d(g,e,o,t)},m.onclick=t=>{p(g,e)},l.appendChild(i),t[1].length){c.innerText="⊖",c.style="cursor:pointer; margin-right:1px;",c.setAttribute("name","li-collapse-btn");let l=a(e,t[1],n,o);i.appendChild(l),c.onclick=e=>{let t=e.target,n=e.target.parentElement.nextElementSibling;"⊖"===e.target.innerText?(n.style.display="none",t.innerText="⊕"):(n.style.display="block",t.innerText="⊖")}}else c.innerHTML="--",c.style="color:grey;margin-right:1px;",r.prepend(c)})),l},s=(e,t)=>{let n=e.replace("li-term-",""),l="entityfinderold-onto-extra-btn-"+o.currentCategoriesContent.title,i=JSON.parse(o.ontoBank[l].onto_table.table)[n];return t.querySelector('div[name="entity-label"]').innerText=i.RDFLabel,t.querySelector('div[name="entity-color"]').innerText=i.Color,t.querySelector('div[name="entity-annos"]').innerHTML=c(i.Annotations).innerHTML,t.querySelector('div[name="entity-special"]').innerHTML=c(i.SpecialInfo).innerHTML,t.onclick=e=>{e.stopPropagation()},t.onmouseleave=e=>{e.preventDefault(),t.style.display="none"},t},d=(e,t,n,l)=>{let i=e.replace("li-term-",""),r=0,a=o.ontoBank["entityfinderold-onto-extra-btn-"+o.currentCategoriesContent.title],s=JSON.parse(a.onto_table.table)[i],d=s.BelongsTo,p=s.Color,c=i;switch(d){case"Class":let e;e="none"===p?"rounded=0;whiteSpace=wrap;html=1;":`rounded=0;whiteSpace=wrap;html=1;fillColor=${p};`;var h=new mxCell(c,new mxGeometry(0,0,90,26),e),u=c.length,m=t.editor.graph.getPreferredSizeForCell(h);h.geometry.width=m.width+u,h.vertex=!0,r=m.width+u+30;break;case"ObjectProperty":h=new mxCell(c,new mxGeometry(0,0,90,26),"endArrow=classic;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;endSize=8;arcSize=0;"),u=c.length,h.geometry.setTerminalPoint(new mxPoint(0,0),!0),h.geometry.setTerminalPoint(new mxPoint(8*u+20,0),!1),h.edge=!0,r=8*u+20+30;break;case"DatatypeProperty":case"AnnotationProperty":h=new mxCell(c,new mxGeometry(0,0,0,0),"edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;fontSize=12;"),u=c.length,h.geometry.setTerminalPoint(new mxPoint(0,0),!0),h.geometry.setTerminalPoint(new mxPoint(8*u+20,0),!1),h.edge=!0,r=8*u+20+30;break;case"Individual":h=new mxCell("<u>"+c+"</u>",new mxGeometry(0,0,90,26),"rounded=0;whiteSpace=wrap;html=1;"),u=c.length,m=t.editor.graph.getPreferredSizeForCell(h),h.geometry.width=m.width+u,h.vertex=!0,r=m.width+u+30;break;case"Datatype":h=new mxCell(`"value"^^${c}`,new mxGeometry(0,0,90,26),"rounded=0;whiteSpace=wrap;html=1;fillColor=#FF8C00;"),u=c.length,m=t.editor.graph.getPreferredSizeForCell(h),h.geometry.width=m.width+u,h.vertex=!0,r=m.width+u+30}let y=t.editor.graph,g=mxUtils.convertPoint(y.container,n.getX(),n.getY()),f=mxUtils.convertPoint(y.container,mxEvent.getClientX(l),mxEvent.getClientY(l)),b=y.view.translate,v=y.view.scale,x=g.x/v-b.x-r,w=f.y/v-b.y;const P=[h];y.importCells(P,x,w)},p=(e,t)=>{let n=e.replace("li-term-",""),l=o.ontoBank["entityfinderold-onto-extra-btn-"+o.currentCategoriesContent.title],i=JSON.parse(l.onto_table.table)[n],r=i.BelongsTo,a=i.Color,s=n;var d=t.editor.graph.getSelectionCells();d&&d.forEach((e=>{let n;switch(console.log(r),r){case"Individual":t.editor.graph.model.setValue(e,"<u>"+s+"</u>");break;case"Class":t.editor.graph.model.setValue(e,s),"none"!==a?(n=`rounded=0;whiteSpace=wrap;html=1;fillColor=${a};`,t.editor.graph.model.setStyle(e,n)):(n="rounded=0;whiteSpace=wrap;html=1;",t.editor.graph.model.setStyle(e,n));break;case"Datatype":t.editor.graph.model.setValue(e,`"value"^^${s}`),n="rounded=0;whiteSpace=wrap;html=1;fillColor=#FF8C00;",t.editor.graph.model.setStyle(e,n);break;default:t.editor.graph.model.setValue(e,s)}}))},c=e=>{let t=document.createElement("div");return e&&Object.keys(e).forEach((n=>{if(e[n].length){let o=document.createElement("div"),l=document.createElement("div"),i=document.createElement("hr");l.innerText=n,l.style.color="steelblue",l.style.marginBottom="3px";let r=document.createElement("div");r.innerText=e[n].join("\n"),i.style.borderTop="1px dotted #333",i.style.margin="5px 0px 5px 0px",o.append(l,r,i),t.appendChild(o)}})),t};n(354);let h=new class{constructor(){this.mesoNamespace=["base:https://purl.matolab.org/mseo/methods/example/","mid:https://purl.matolab.org/mseo/mid/","cco:http://www.ontologyrepository.com/CommonCoreOntologies/","obo:http://purl.obolibrary.org/obo/","pt:http://www.daml.org/2003/01/periodictable/PeriodicTable#","geo:http://www.opengis.net/ont/geosparql#"],this.ontoBank={"ontopanel-onto-extra-btn-MSEO":{}},this.setting=URI,this.currentCategoriesContent={title:"none",categories:{Class:{name:"Class",content:null},ObjectProperty:{name:"ObjectProperty",content:null},DatatypeProperty:{name:"DatatypeProperty",content:null},Individual:{name:"Individual",content:null},AnnotationProperty:{name:"AnnotationProperty",content:null},Datatype:{name:"Datatype",content:null}},table:null}}modifyOntoBank=(e,t)=>{switch(t){case"reset":this.ontoBank={"ontopanel-onto-extra-btn-MSEO":{}};break;case"add":this.ontoBank[e[0]]=e[1];break;case"delete":delete this.ontoBank[e[0]]}};modifyCurrentCategoriesContent=(e,t,n)=>{switch(n){case"reset":this.currentCategoriesContent={title:"none",categories:{Class:{name:"Class",content:null},ObjectProperty:{name:"ObjectProperty",content:null},DatatypeProperty:{name:"DatatypeProperty",content:null},Individual:{name:"Individual",content:null},AnnotationProperty:{name:"AnnotationProperty",content:null},Datatype:{name:"Datatype",content:null}},table:null};break;case"selected":this.currentCategoriesContent.title=e,Object.keys(this.currentCategoriesContent.categories).forEach((e=>{this.currentCategoriesContent.categories[e].content=t[e]}));let n="ontopanel-onto-extra-btn-"+e;this.currentCategoriesContent.table=JSON.parse(h.ontoBank[n].onto_table.table)}};loadCurrentTable=(e,t="selected")=>{switch(t){case"selected":let n=e.onto_table.tree;this.modifyCurrentCategoriesContent(e.title,n,t);break;case"reset":this.modifyCurrentCategoriesContent(null,null,t)}document.getElementById("ontopanel-tree-title").innerHTML=`selected: ${this.currentCategoriesContent.title}`,console.log("load data"),document.getElementById("ontopanel-tree-class-btn").click()}};const u=class{constructor(e,t){this.app=e,this.data=t,this.init()}init(){this.btn=document.createElement("button"),this.btn.innerHTML='<div class="onto-button"> <div name="button-name" style="border:none">buttonname</div> <div class="ontopanel-menu" style="display:none"> <div class="menu-tag">Info</div> <div class="menu-tag">Update</div> <div class="menu-tag">Delete</div> </div> <div class="ontopanel-box" style="display:none"> <div class="box-inner"> <span class="box-close-span">&times;</span> <div name="info-detail" style="overflow:auto;font-size:15px;text-align:left;white-space:nowrap"></div> </div> </div> </div> ';let e=this.data.title;this.btn.querySelector('div[name="button-name"]').textContent=e;const t="ontopanel-onto-extra-btn-"+e;this.btn.id=t,h.modifyOntoBank([t,this.data],"add"),this.btn.onclick=e=>{e.preventDefault();let t=this.btn.id,n=h.ontoBank[t];h.loadCurrentTable(n)},this.btn.addEventListener("contextmenu",(e=>{e.preventDefault(),this.triggerMenu()})),this.btn.onmouseleave=e=>{e.preventDefault(),this.btn.querySelector(".ontopanel-menu").style.display="none"}}triggerMenu=()=>{let e=this.btn.querySelector(".ontopanel-menu"),t=e.children[0],n=e.children[1],o=e.children[2];e.style.display="block",n.onclick=t=>{t.preventDefault(),t.stopPropagation(),e.style.display="none";let n=new m(this.app);n.updateTigger(this.btn.id),n.ontoForm.querySelector('input[name="formName"]').value=this.data.title},t.onclick=t=>{t.preventDefault(),t.stopPropagation(),e.style.display="none",this.showOntoInfo()},o.onclick=t=>{t.preventDefault(),t.stopPropagation(),e.style.display="none",this.deleteOnto()}};showOntoInfo=()=>{let e=this.btn.id,t=h.ontoBank[e].title,n=h.ontoBank[e].onto_source,o=h.ontoBank[e].date_created,l=this.btn.querySelector(".ontopanel-box");l.onclick=e=>{e.stopPropagation()};let i=this.btn.querySelector('div[name="info-detail"]');this.btn.querySelector(".box-close-span").onclick=()=>{l.style.display="none"},i.innerHTML=`\n      <h4>Info about this ontology:</h4>\n      <ul style="padding-left:20px">\n        <li><b>title</b>: ${t}</li>\n        <li><b>source</b>: ${n}</li>\n        <li><b>updated date</b>: ${o}</li>\n      </ul>\n      `,l.style.display="block"};deleteOnto=()=>{let e=this.btn.id,t=localStorage.getItem("loginUser"),n=h.ontoBank[e].id;t?(t=JSON.parse(t),fetch(l+"api/v1/ontos/change/"+n,{method:"DELETE",headers:new Headers({Authorization:`Token ${t.token}`})}).then((t=>{t.ok?(h.ontoBank[e].title==h.currentCategoriesContent.title&&h.loadCurrentTable(null,"reset"),h.modifyOntoBank([e,null],"delete"),this.btn.remove(),this.handleInfoToggle("Deleted in your databank!","green")):t.json().then((e=>{let t=Object.keys(e)[0];this.handleInfoToggle(e[t],"red")}))})).catch((e=>{this.handleInfoToggle(e,"red")}))):(h.ontoBank[e].title==h.currentCategoriesContent.title&&h.loadCurrentTable(null,"reset"),h.modifyOntoBank([e,null],"delete"),this.btn.remove(),this.handleInfoToggle("Deleted locally","green"))};handleInfoToggle=(e,t)=>{let n=this.app.querySelector("#ontopanel-onto-menu-info");n.innerText=e,n.style.color=t,n.style.display="block",setTimeout((()=>{n.style.display="none"}),8e3)}},m=class{constructor(e){this.app=e,this.init()}init(){this.uploaderBox=document.createElement("div"),this.uploaderBox.innerHTML='<div class="ontopanel-box"> <div class="box-inner"> <span class="box-close-span">&times;</span> <form enctype="multipart/form-data" class="ontopanel-form"> <h3 style="margin:0">Uploader</h3> <br/> <div> <p>Please upload a file</p> <input type="file" name="formFile"/> </div> <div> <p>Or <br>Enter URL of raw data</p> <input type="url" name="formURL" placeholder="https://example.com"/> </div> <div> <p>And enter the ontology name</p> <input type="text" name="formName" placeholder="mseo" style="width:80px" maxlength="5" required="true"> </div> <div> <button type="submit" name="upload">Submit</button> <button type="submit" name="update" style="display:none">Update</button> <span name="form-info" style="display:none"></span> </div> </form> </div> </div>',this.uploaderBox.style.display="none",this.app.appendChild(this.uploaderBox);let e=this.uploaderBox.querySelector(".box-close-span"),t=this.uploaderBox.querySelector("form");this.ontoForm=t,e.onclick=()=>{this.ontoForm.reset(),this.uploaderBox.style.display="none"}}addTrigger=()=>{this.uploaderBox.style.display="block",console.log(this.uploaderBox);let e=this.ontoForm.querySelector('button[name="upload"]');this.updateOrAddBtn("add"),e.onclick=e=>{e.preventDefault(),this.ontoForm.checkValidity()?this.ontoAddFormToggle(this.ontoForm):this.ontoForm.reportValidity()}};updateTigger=e=>{this.uploaderBox.style.display="block";let t=this.ontoForm.querySelector('button[name="update"]');this.updateOrAddBtn("update"),t.onclick=t=>{t.preventDefault(),this.ontoForm.checkValidity()?this.ontoUpdateFormToggle(this.ontoForm,e):this.ontoForm.reportValidity()}};updateOrAddBtn=e=>{let t=this.ontoForm.querySelector('button[name="upload"]'),n=this.ontoForm.querySelector('button[name="update"]');t.style.display="add"===e?"block":"none",n.style.display="add"===e?"none":"block"};ontoAddFormToggle=e=>{let t=new FormData(e),n=t.get("formName").trim(),o=t.get("formFile"),l=t.get("formURL").trim(),i=this.ontoForm.querySelector('span[name="form-info"]');if(o.size||l)if(Object.keys(h.ontoBank).includes("ontopanel-onto-extra-btn-"+n))this.handleInfoToggle("this name is taken, use another one!","red");else{i.innerText="In process, please wait.",i.style.color="green",i.style.display="block";let e=localStorage.getItem("loginUser");e?this.ontoAddDB(t,e):this.ontoAddUpdateLocal(t)}else this.handleInfoToggle("Please enter File or URL!","red")};ontoAddUpdateLocal=(e,t=null,n="add")=>{fetch(l+"api/v1/ontos/owltable/",{method:"POST",body:e}).then((e=>{e.ok?e.json().then((e=>{switch(n){case"add":let n=new u(this.app,e);this.app.querySelector("#ontopanel-onto-extra-btn").prepend(n.btn),this.handleInfoToggle("Succssfully added locally!","green");break;case"update":this.updateOntoBtn(e,t),this.handleInfoToggle("Succssfully updated locally!","green")}this.ontoForm.reset()})):e.json().then((e=>{let t=Object.keys(e)[0];this.handleInfoToggle(e[t],"red")}))})).catch((e=>{this.handleInfoToggle(e,"red")}))};ontoAddDB=(e,t)=>{t=JSON.parse(t),fetch(l+"api/v1/ontos/lists/",{method:"POST",body:e,headers:new Headers({Authorization:`Token ${t.token}`})}).then((e=>{e.ok?e.json().then((e=>{let t=new u(this.app,e);this.app.querySelector("#ontopanel-onto-extra-btn").prepend(t.btn),this.handleInfoToggle("Succssfully added to your database!","green"),this.ontoForm.reset()})):e.json().then((e=>{let t=Object.keys(e)[0];this.handleInfoToggle(e[t],"red")}))})).catch((e=>{this.handleInfoToggle(e,"red")}))};ontoUpdateFormToggle=(e,t)=>{let n=this.ontoForm.querySelector('span[name="form-info"]'),o=new FormData(e),l=o.get("formName").trim(),i=o.get("formFile"),r=o.get("formURL").trim();if(i.size||r)if(Object.keys(h.ontoBank).filter((e=>e!==t)).includes("ontopanel-onto-extra-btn-"+l))this.handleInfoToggle("this name is taken, use another one!","red");else{n.innerText="In process, please wait.",n.style="color: green; display:block;";let e=localStorage.getItem("loginUser");e?this.ontoUpdateDB(o,t,e):this.ontoAddUpdateLocal(o,t,"update")}else this.handleInfoToggle("Please enter File or URL!","red")};updateOntoBtn=(e,t)=>{let n=this.app.querySelector("#"+t),o=e.title;n.innerText=o;const l="ontopanel-onto-extra-btn-"+o;n.id=l,h.modifyOntoBank([t,null],"delete"),h.modifyOntoBank([l,e],"add"),h.loadCurrentTable(e)};ontoUpdateDB=(e,t,n)=>{n=JSON.parse(n);let o=h.ontoBank[t].id;fetch(l+"api/v1/ontos/change/"+o,{method:"PUT",body:e,headers:new Headers({Authorization:`Token ${n.token}`})}).then((e=>{e.ok?e.json().then((e=>{this.updateOntoBtn(e,t),this.handleInfoToggle("Succssfully updated in your databank!","green"),this.ontoForm.reset()})):e.json().then((e=>{let t=Object.keys(e)[0];this.handleInfoToggle(e[t],"red")}))})).catch((e=>{this.handleInfoToggle(e,"red")}))};handleInfoToggle=(e,t)=>{let n=this.uploaderBox.querySelector('span[name="form-info"]');n.innerText=e,n.style.color=t,n.style.display="block",setTimeout((()=>{n.style.display="none"}),8e3)}},y=(e,t,n,o,l)=>{let i=document.createElement("ul");return t.forEach((t=>{let r=n.cloneNode(!0),a=r.firstElementChild,s=a.children[0],d=a.children[1],p=a.children[2],c=a.children[3],u=d.children[0];u.innerHTML=t[0];let m=u.innerText;if("RDFLabel"===h.setting){let e=h.currentCategoriesContent.table[m].RDFLabel;if(e.length){let n=t[0].replace(m,e);u.innerHTML=n}}let v="li-term-"+m;if(u.id=v,u.onclick=e=>{e.preventDefault();let t=d.children[1],n=g(v,t);t.replaceWith(n),n.style.display="block",n.scrollIntoView({block:"nearest",inline:"center"}),r.onmouseleave=e=>{n.style.display="none"}},p.onclick=t=>{let n=u.innerText;f(n,v,e,o,t)},c.onclick=t=>{try{let t=u.innerText;b(t,v,e)}catch(e){let t=l.querySelector(".match-error");t.innerText=e,t.style.display="block",setTimeout((()=>{t.style.display="none"}),8e3)}},i.appendChild(r),t[1].length){s.innerText="⊖",s.style="cursor:pointer; margin-right:1px;",s.setAttribute("name","li-collapse-btn");let i=y(e,t[1],n,o,l);r.appendChild(i),s.onclick=e=>{let t=e.target,n=e.target.parentElement.nextElementSibling;"⊖"===e.target.innerText?(n.style.display="none",t.innerText="⊕"):(n.style.display="block",t.innerText="⊖")}}else s.innerHTML="--",s.style="color:grey;margin-right:1px;",a.prepend(s)})),i},g=(e,t)=>{let n=t.cloneNode(!0),o=e.replace("li-term-",""),l=h.currentCategoriesContent.table[o];return n.querySelector('div[name="entity-IRI"]').innerText=o+" ("+l.EntityIRI+")",n.querySelector('div[name="entity-label"]').innerText=l.RDFLabel?l.RDFLabel:"none",n.querySelector('div[name="entity-color"]').innerText=l.Color,n.querySelector('div[name="entity-annos"]').innerHTML=v(l.Annotations).innerHTML,n.querySelector('div[name="entity-special"]').innerHTML=v(l.SpecialInfo).innerHTML,n.onclick=e=>{e.stopPropagation()},n},f=(e,t,n,o,l)=>{let i,r=t.replace("li-term-",""),a=0,s=h.currentCategoriesContent.table[r],d=s.BelongsTo,p=s.Color,c=e;switch(d){case"Class":let t;t="none"===p?"rounded=0;whiteSpace=wrap;html=1;":`rounded=0;whiteSpace=wrap;html=1;fillColor=${p};`;var u=new mxCell(c,new mxGeometry(0,0,90,26),t),m=c.length,y=n.editor.graph.getPreferredSizeForCell(u);u.geometry.width=y.width+m,u.vertex=!0,a=y.width+m+30,i={label:c,Type:d,IRI:s.EntityIRI};break;case"ObjectProperty":u=new mxCell(c,new mxGeometry(0,0,90,26),"endArrow=classic;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;endSize=8;arcSize=0;"),m=c.length,u.geometry.setTerminalPoint(new mxPoint(0,0),!0),u.geometry.setTerminalPoint(new mxPoint(8*m+20,0),!1),u.edge=!0,a=8*m+20+30,i={label:c,Type:d,IRI:s.EntityIRI};break;case"DatatypeProperty":u=new mxCell(c,new mxGeometry(0,0,0,0),"edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;fontSize=12;"),m=c.length,u.geometry.setTerminalPoint(new mxPoint(0,0),!0),u.geometry.setTerminalPoint(new mxPoint(8*m+20,0),!1),u.edge=!0,a=8*m+20+30,i={label:c,Type:d,IRI:s.EntityIRI};break;case"Individual":u=new mxCell("<u>"+c+"</u>",new mxGeometry(0,0,90,26),"rounded=0;whiteSpace=wrap;html=1;"),m=c.length,y=n.editor.graph.getPreferredSizeForCell(u),u.geometry.width=y.width+m,u.vertex=!0,a=y.width+m+30,i={label:"<u>"+c+"</u>",Type:d,IRI:s.EntityIRI};break;case"Datatype":c=`"value"^^${e}`,d="DataValue",u=new mxCell(c,new mxGeometry(0,0,90,26),"rounded=0;whiteSpace=wrap;html=1;fillColor=#FF8C00;"),m=c.length,y=n.editor.graph.getPreferredSizeForCell(u),u.geometry.width=y.width+m,u.vertex=!0,a=y.width+m+30,i={label:c,Type:d,IRI_DT:s.EntityIRI};break;case"AnnotationProperty":u=new mxCell(c,new mxGeometry(0,0,0,0),"rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;endArrow=diamond;endFill=1;strokeWidth=1;"),m=c.length,u.geometry.setTerminalPoint(new mxPoint(0,0),!0),u.geometry.setTerminalPoint(new mxPoint(8*m+20,0),!1),u.edge=!0,a=8*m+20+30,i={label:c,Type:d,IRI:s.EntityIRI}}let g=P(i),f=n.editor.graph;f.getModel().setValue(u,g);let b=mxUtils.convertPoint(f.container,o.getX(),o.getY()),v=mxUtils.convertPoint(f.container,mxEvent.getClientX(l),mxEvent.getClientY(l)),x=f.view.translate,w=f.view.scale,S=b.x/w-x.x-a,C=v.y/w-x.y;const k=[u];f.importCells(k,S,C)},b=(e,t,n)=>{let o=t.replace("li-term-",""),l=h.currentCategoriesContent.table[o],i=l.BelongsTo,r=l.Color,a=n.editor.graph.getSelectionCells();a&&a.forEach((t=>{if("object"==typeof t.value){let o=t.getAttribute("label",null),a=t.getAttribute("Type",null);if(a){let s=/(\(.*\))/g,d=t.style,p=w(t,r),c=a.replace(s,"").trim().toLowerCase();switch(i.toLowerCase()){case"datatype":if("datavalue"===c){let o={label:`"value"^^${e}`,Type:a,IRI_DT:l.EntityIRI},i=P(o);n.editor.graph.model.setStyle(t,p),n.editor.graph.model.setValue(t,i)}else if("datatype"===c){let o={label:e,Type:a,IRI:l.EntityIRI},i=P(o);n.editor.graph.model.setStyle(t,p),n.editor.graph.model.setValue(t,i)}else{if("datatypeproperty"!=c||d.includes("rhombus")|t.isEdge())throw"The selected shape is not a datavalue or datatype or datatypeproperty(asseration)!";{let i=t.getAttribute("IRI_DP",null),r=o.split("~")[0]+"~"+e;a=a.replace("NoRange","YesRange");let s={label:r,Type:a,IRI_DP:i,IRI_DT:l.EntityIRI},d=P(s);n.editor.graph.model.setValue(t,d)}}break;case"datatypeproperty":if("datatypeproperty"!==c)throw"The selected shape is not a datatypeproperty!";if(d.includes("rhombus")|t.isEdge()){let i={label:x(o,e),Type:a,IRI:l.EntityIRI},r=P(i);n.editor.graph.model.setStyle(t,p),n.editor.graph.model.setValue(t,r)}else{let i=o.split("~")[0],r=x(i,e),s=o.replace(i,r),d=t.getAttribute("IRI_DT",null),c={label:s,Type:a,IRI_DP:l.EntityIRI,IRI_DT:d},h=P(c);n.editor.graph.model.setStyle(t,p),n.editor.graph.model.setValue(t,h)}break;default:if(i.toLowerCase()!==c)throw`The selected shape is not a ${i}!`;{let i=x(o,e);"individual"===c&&(i="<u>"+i+"</u>");let r={label:i,Type:a,IRI:l.EntityIRI},s=P(r);n.editor.graph.model.setStyle(t,p),n.editor.graph.model.setValue(t,s)}}}}}))},v=e=>{let t=document.createElement("div");return Object.keys(e).length?Object.keys(e).forEach((n=>{if(e[n].length){let o=document.createElement("div"),l=document.createElement("div"),i=document.createElement("hr");l.innerText=n,l.style.color="steelblue",l.style.marginBottom="3px";let r=document.createElement("div");r.innerText=e[n].join("\n"),i.style.borderTop="0.5px dotted #333",i.style.margin="5px 0px 5px 0px",o.append(l,r,i),t.appendChild(o)}})):t.innerText="none",t},x=(e,t)=>{let n=document.createElement("div");n.innerHTML=e,console.log(e);let o=n.textContent||n.innerText||"";console.log(o);let l=o.replace(/([<<|\(].*[>>|\)])/g,"").trim(),i=o.replace(l,t),r=document.createElement("div");return r.innerText=i,r.innerHTML},w=(e,t)=>{let n="none"===t?"#FFFFFF":t;return e.style.split(";").filter((e=>!e.includes("fillColor"))).join(";")+`fillColor=${n};`},P=e=>{let t=mxUtils.createXmlDocument().createElement("object");for(let[n,o]of Object.entries(e))t.setAttribute(n,o);return t};n(28),n(524);let S=new class{constructor(){this.errors=null,this.result=null,this.mappingData=null}modifyData=e=>{this.errors=e.errors,this.result=e.result};resetData=()=>{this.errors=null,this.result=null,this.mappingData=null};uploadMappingData=e=>{this.mappingData=e}};const C=(e,t,n)=>{let o=document.createElement("li");return o.id=e,o.innerHTML=`\n    <div><b>ID: </b>${e}</div> \n    <div><b>Error: </b>${t}</div>\n    `,o.onclick=t=>{t.preventDefault();let o=n.editor.graph,l=o.getModel().getCell(e);o.clearSelection(),o.setSelectionCell(l),o.scrollCellToVisible(l,!0)},o},k=e=>{let t=mxUtils.createXmlDocument().createElement("object");for(let[n,o]of Object.entries(e))t.setAttribute(n,o);return t},T=e=>{let t=e.value;if(!t){let n=e.children;if(n)for(let e=0;e<n.length;e++){let o=n[e];if((o.style.includes("text")||o.style.includes("edgeLabel"))&&o.value){t="string"==typeof o.value?o.value:"";break}}}return t},I=e=>{var t=document.createElement("div");t.id="convertor-app",t.style="height: 400px; width: 380px; font-size: 15px; padding: 5px; ",t.innerHTML='<div class="convertor-container"> <div class="transformer"> <div>If you used the chowlk libary, please transform first.</div> <input type="button" name="transform" value="transform"/> </div> <div class="convertor-bar"> <select name="rdf-format"> <option value="application/rdf+xml">rdf/xml</option> <option value="turtle">turtle</option> </select> <input type="button" name="convert" value="Convert"/> <div class="convert-info"></div> </div> <div class="convertor-show"> <div class="convertor-btn-group"> <input type="button" name="mapping" value="Mapping"/> <input type="button" name="result" value="Result"/> <input type="button" name="show-error" value="ShowError"/> <input type="button" value="&#x2193;" style="width:30px;background-color:#dc143c" name="download"/> </div> <div class="convertor-content"> <div> <b>New Tool</b><br> 1. This tool can convert plot to ontology, check errors, map dataset(under development), and download file.<br> 2. It is designed with other ontopanel tools(library, entityFinder).<br> 3. If your files contains chowlk library shapes, please transform it first.<br> </div> </div> </div> </div> ',t.addEventListener("contextmenu",(e=>e.preventDefault())),mxUtils.br(t),mxResources.parse("convertor=Ontopanel-convertor");var n=new mxWindow(mxResources.get("convertor"),t,document.body.offsetWidth-420,140,390,420,!0,!0);n.destroyOnClose=!1,n.setMaximizable(!1),n.setResizable(!1),n.setClosable(!0),n.setVisible(!1);let o=t.querySelector('input[name="convert"]'),i=t.querySelector('input[name="transform"]'),r=t.querySelector('input[name="mapping"]'),a=t.querySelector('input[name="result"]'),s=t.querySelector('input[name="show-error"]'),d=t.querySelector(".convertor-content"),p=t.querySelector('input[name="download"]');return t.querySelector(".convert-info"),r.onclick=e=>{let t=(()=>{let e=document.createElement("div");return e.innerHTML='<div class="mapping-tool"> <form action="multipart/form-data"> <input type="file" id="myfile" name="myFile" required style="max-width:190px"/> <select name="filetype"> <option value="csv">csv</option> <option value="excel">excel</option> <option value="json">json</option> </select> <select name="decimal"> <option value=",">,</option> <option value=";">.</option> </select> <select name="csv-seperator"> <option value=",">,</option> <option value=";">;</option> </select> <input type="submit" name="submit"/> </form> <div>under development</div> </div> ',e})();d.firstElementChild.replaceWith(t)},a.onclick=e=>{let t=document.createElement("pre");t.textContent=S.result,d.firstElementChild.replaceWith(t)},s.onclick=t=>{if(S.errors){let t=((e,t)=>{let n=e.other_errors,o=e.edge_errors,l=e.node_errors,i=e.relation_errors,r=document.createElement("div");r.innerHTML='<div class="error-list"> <div name="noerror">No errors are found</div> <div name="other" style="display:none"> <div class="error-type">General Errors</div> <ul></ul> <hr/> </div> <div name="node" style="display:none"> <div class="error-type">Node Errors</div> <ul></ul> <hr/> </div> <div name="edge" style="display:none"> <div class="error-type">Edge Errors</div> <ul></ul> <hr/> </div> <div name="relation" style="display:none"> <div class="error-type">Relation Errors</div> <ul></ul> <hr/> </div> </div> ';let a=r.querySelector('div[name="noerror"]');if(n.length){let e=r.querySelector('div[name="other"]'),o=e.querySelector("ul");n.forEach((e=>{let n=e.id,l=e.message,i=C(n,l,t);o.appendChild(i)})),e.style.display="block",a.style.display="none"}if(o.length){let e=r.querySelector('div[name="edge"]'),n=e.querySelector("ul");o.forEach((e=>{let o=e.id,l=e.message,i=C(o,l,t);n.appendChild(i)})),e.style.display="block",a.style.display="none"}if(l.length){let e=r.querySelector('div[name="node"]'),n=e.querySelector("ul");l.forEach((e=>{let o=e.id,l=e.message,i=C(o,l,t);n.appendChild(i)})),e.style.display="block",a.style.display="none"}if(i.length){let e=r.querySelector('div[name="relation"]'),n=e.querySelector("ul");i.forEach((e=>{let o=((e,t,n)=>{let o=document.createElement("li"),l="["+e.join(",")+"]";return o.innerHTML=`\n    <div><b>ID List: </b>${l}</div> \n    <div><b>Error: </b>${t}</div>\n    `,o.onclick=t=>{t.preventDefault();let o=n.editor.graph,l=o.getModel(),i=e.map((e=>l.getCell(e)));o.clearSelection(),o.setSelectionCells(i),o.scrollCellToVisible(i[1],!0)},o})(e.id_list,e.message,t);n.appendChild(o)})),e.style.display="block",a.style.display="none"}return r})(S.errors,e);d.firstElementChild.replaceWith(t)}},p.onclick=e=>{if(S.result){let e=document.createElement("a");e.setAttribute("href","data:application/xml;charset=utf-8,"+encodeURIComponent(S.result)),e.setAttribute("download","file.xml"),t.appendChild(e),e.click(),t.removeChild(e)}},i.onclick=t=>{((e,t)=>{let n=e.editor.graph,o=n.getDefaultParent(),l=n.getGraphBounds(),i=n.getCells(l.x,l.y,l.width,l.height,o,null,null,null,!0),r={},a=i.filter((e=>e.isVertex())),s={node_errors:[],edge_errors:[],other_errors:[],relation_errors:[]};a.forEach((e=>{if("object"==typeof e.value);else{let t={},[o,l]=(e=>{let t=e.style,n=T(e),o=null,l=document.createElement("div");l.innerHTML=n;let i=l.innerText,r={"⨅":"IntersectionOf",intersectionOf:"IntersectionOf","⨆":"UnionOf",unionOf:"UnionOf","≡":"EquivalentClass","⊥":"DisjointClass"};return t.includes("shape=note")?o="Namespace":t.includes("shape=document")?o="Metadata":t.includes("shape=parallelogram")?o="CustomDatatype":t.includes("shape=hexagon")?i.includes("AllDifferent")&&(o="AllDifferent"):t.includes("ellipse")?Object.keys(r).forEach((e=>{i.includes(e)&&(o=r[e])})):t.includes("rhombus")?i.includes("owl:ObjectProperty")?o="ObjectProperty":i.includes("owl:DatatypeProperty")&&(o="DatatypeProperty"):t.includes("edgeLabel")||t.includes("text")?o="pass":t.includes("rounded=0")&&(n.includes("</u>")||t.includes("fontStyle=4")?o="Individual":i.includes("^^")||i.includes("@")?o="DataValue":t.includes("dashed=1")||(o="Class")),[o,n]})(e);if(o&&"pass"!==o){t={label:l,Type:o};let i=k(t);n.model.setValue(e,i),r[e.id]=o}else"pass"!==o&&s.node_errors.push({id:e.id,message:"not recongized, please use the ontopanel libary to repalce it."})}let o={result:"Transformer can wrongly convert the following:\nnodes: nodes in rectangle shapes, \nedges: edges without labels.\n\nYou cant click ShowError to check the errors, but maybe not all the errors are catched.\nPlease use the ontopanel-libary shapes to replace the errors.\nHowever, it usually will not be a problem if you could not correct all the errors, because convertor will check the errors again.",errors:s};S.modifyData(o),t.click()})),i.filter((e=>e.isEdge())).forEach((e=>{if("object"==typeof e.value);else{let t={},[o,l]=((e,t)=>{let n=e.style,o=e.target,l=e.source,i=T(e),r=null,a=document.createElement("div");a.innerHTML=i;let s=a.innerText,d={"rdfs:subClassOf":"SubClassOf","rdf:type":"RDFType","owl:equivalentClass":"EquivalentClass","owl:disjointWith":"DisjointClass","owl:complementOf":"ComplementOf","rdfs:subPropertyOf":"SubPropertyOf","owl:equivalentProperty":"EquivalentProperty","owl:inverseOf":"InverseOf","rdfs:domain":"Domain","rdfs:range":"Range","owl:sameAs":"SameAs","owl:differentFrom":"DifferentFrom"};return i&&0!==i.length||(i="",n.includes("endArrow=block")||n.includes("startArrow=block")?r="SubClassOf":(n.includes("endArrow=open")||n.includes("startArrow=open"))&&(r="Connector",l&&l.id in t)&&"Individual"===t[l.id]&&(r="RDFType")),Object.keys(d).forEach((e=>{s.includes(e)&&(r=d[e])})),!r&&(r="ObjectProperty",o&&o.id in t)&&"DataValue"===t[o.id]&&(r="DatatypeProperty"),[r,i]})(e,r);if(o&&"pass"!==o){t={label:l,Type:o};let i=k(t);n.model.setValue(e,i)}}}))})(e,a)},o.onclick=n=>{n.preventDefault(),S.resetData();let o=(e=>{let t=e.editor.graph,n=t.getDefaultParent(),o=t.getGraphBounds(),l=t.getCells(o.x,o.y,o.width,o.height,n,null,null,null,!0),i={},r={},a={node_errors:[],edge_errors:[],relation_errors:[],other_errors:[]};return l.forEach((e=>{let t=e.style;if("object"==typeof e.value){let n=e.getAttribute("Type",null);if(n){let o=e.id,l=e.source?e.source.id:"none",a=e.target?e.target.id:"none",s=e.geometry?{...e.geometry}:"none",d=e.value.attributes,p=d.label.value.trim(),c={};for(let e=0;e<d.length;e++){let t=d[e],n=t.name.trim();"label"!==n&&"Type"!==n&&(c[n]=t.value.trim())}let h=Object.keys(c).length?c:"none";if(e.isEdge()){if(!p){let t=e.children;if(t)for(let e=0;e<t.length;e++){let n=t[e];if((n.style.includes("text")||n.style.includes("edgeLabel"))&&n.value){p="string"==typeof n.value?n.value:"";break}}}r[o]={type:n,style:t,label:p,source:l,target:a,objectData:h}}else i[o]={type:n,style:t,label:p,geometry:s,objectData:h}}else{let t={id:e.id,message:"this shape is not from ontopanel-libary, please use libary or transform."};a.other_errors.push(t)}}else if(t.includes("text")||t.includes("edgeLabel"));else{let t={id:e.id,message:"this shape is not from ontopanel-libary, please use libary or transform."};a.other_errors.push(t)}})),JSON.stringify({nodes:i,edges:r,errors:a}),{nodes:i,edges:r,errors:a}})(e),i={format:t.querySelector("select").value,data:o};S.modifyData({result:"In process, please wait",errors:null}),a.click(),fetch(l+"api/v1/convertor/",{method:"POST",body:JSON.stringify(i),headers:new Headers({"Content-Type":"application/json"})}).then((e=>{e.ok?e.json().then((e=>{S.modifyData(e),a.click()})):e.json().then((e=>{let t={result:e,errors:null};S.modifyData(t),a.click()}))})).catch((e=>{let t={result:e,errors:null};S.modifyData(t),a.click()}))},n};Draw.loadPlugin((function(e){(e=>{e.loadLibrary(new LocalLibrary(e,'<mxlibrary>[{"xml":"zVbbUtswEP0aPybj2DTv4FCGmdIH4AcUW441kbWurJC4X9/dlW8JDqSFYfoAkXel1V7OHm0QJ+XhzoqqeIBM6iC+DeLEAji/Kg+J1DqIQpUF8SqIohD/guj7Ge2CtWElrDTukgORP/Ai9E56SRAtNR69yQEtRMsNrTtZXQmDu2vXaL97+WsH3eZZrX6j9Bo3LK6qw6A8tbLuBM+qqvmAl6OX61d7bSdZzNHwrdHCbiSuGtihKlxb2NeSVg7wXym2pBQcoysky0HX+MsH7fy14TckY0dnP9TaCtu84zDKfJbeM/6xXHI2ngpRUYi69QzLSpFaOSshU7mSGX7lFkr8SQvY6+3RZmFIX++Uo1N4K6BLUs84Y/MvDiji8oq0IBNtXMr0VRy8LgR5W8ALV13muUzdEEx7MhNOfHUE8bgk5AD9yFwZWQ9gbFgLOUu4Wq3LSR+DPDgrOPocbCmcAuPV9Y6zw/HfP96/AeWTiK/IsxX3c7iryYE92IzMpGDwAkPLvXJkfYjruen8wsv84kFUlTKbcey+SG03Tqb/s/PM0TxzOnNlawqqspjnQ+eMEaXEK1I5htJQg7XgFHBQvhKt95UGR7Z/gus3g2ErTlg3ShKZ+Ht4fXYipmkKiV+5BmGXUYP8H0Sl2ixTBgXD0LM1sVQzFKAvXO3hlhbCMNkrdwI0sGqjjNCMAS2JrcJHWSIpHEH4UOKDeu0LPoKs77PO+lKUFcrNuq6838NGPI+9MY758qa74Fk5fmr/NcNc9QQMEqIDO3qeJl2cetan4PExn7jq90PVkXWyyUco4b6TviWR90xNpNe19tDpvarlwzBlUK6ZzCwQJyX9bV7nme7VQ8HIqyUfLCR2uT3Dzq/po/PBxwLWokXdzOcTGDopAL9uiVbp1pMu1ap3NC0ky/2V0lqw9QneW2qavuZMVS+acN6HSHSEgsjh84TywlFrrRbED87CViagCXwrQ4yJKFFan4iEVhuDn1rmZIFSoFKhr1txqbKMLrnZF8rJJ+bveLXHyRhlFnbIZzSzhi0EnxiBq8VV7yQZlIezczCL2iH4TkIpHY8Te5UhpfOOb6GflcNCqk3RHovjVig8EUSb/uwwVuOinay7z2GCZ93RgP8H","w":500,"h":330,"aspect":"fixed"},{"xml":"fVLRboMwDPyavKJAtEl7XNu14mGrtO0HUrBI1kBQ4hb4+5lA6Fq1k0A4Z9+dcczEuu53Trbq3ZZgmHhjYu2sxSmq+zUYwzKuSyY2LMs4vSzbPsimIctb6aDBOwR7+IECqcLIw2i2CclnQ7WrUp8prMYwQocIND5CJLWgTLySlEJsQ7SlZ6udx9yvpIf8M08KWwd84d4x+c/XogIXxO+431iH2qSRNfhWFrB4i0XV3frcNjTO7ntoYRrMR5SaEnHG2Xi8Hr/Hwcwkr2TgNxbps+qURvgKImLT0TUTprAeR5+OLcniWDl7asr9CY1uYMZL6Y57YmkcCOEJf1r6O4ND6B9ed/qnux3YGtANVNLpEtXc/8u0ElyBrlSk8RmUfgKqhXvZHgrmX47HeZ/i8bK3ofRqrX8B","w":290,"h":100,"aspect":"fixed","title":"namespaces"},{"xml":"nVPBboMwDP2aXKtAtkk7tnStJq3bof2BQFxgTQgKbmn39XMCtFQqOywSwvbzy0tsh4nEnNdO1sXGKtBMvDGROGuxs8w5Aa1ZzEvFxJLFMaePxasJNAoor6WDCh8QbPoNGVKGlqkXWwbwRVPuQpUnMnNvDqF0CKiMiXnmQKJ1ZA047ZuOONLUZFRp43+rYzjZpzQwSn8g8peubemQ8xO4prTVe7W3k+Kcz/gs+r9SuCGWqGFaYgem1hLpPvyrQqttfpkS9F3YXWroSrwBlEqi7OJDs2Lv3vexwYvuOU0hA13Z7GhCNxdtUSJsa5n5eEszQ7ECje9j5O9ij5UC9ZEOgdDkhcwOufNQQid2YXOxD4tSGnT2ACOEh0XI3la4LX+8VBT3/qO8psvhs1jcr6drIah/COfJCY1GdViDNYCO6srbUmHRV+pZdLQCyrzoaa/dZHPZdH5+pd7mnYy+toPbv4DBvb20kHr3EH8B","w":253,"h":90,"aspect":"fixed","title":"metadata"},{"xml":"dZNRT8MgEIB/Da+GA+vco6267EFjdH+ArWTUtIUUZtt/LxRm24tL2oTv7oD7koPwohl2nTDqTZeyJvyF8KLT2sVVMxSyrgmjVUn4M2GM+p+w1xtZmLLUiE627p8N+vgtT85X1OIYLgsFrSX8qaiFtXHzYTQyZhbB/ec+xt4v4UK2uJMFXLdj3VinMzp9aUsZSinhea8qJ7+MOIVs7619TLkmdAJ+aVthDvpDV1PzIWLC2oajstx/9M4bFpRk/uhiYoaYI75HnCF+QLxB/Ih4u+ZAvqc1c8QZ4g3i7eL84AfID5AfID9AfoD8APkB8gPkNzMgP0B+gPwA+cHs5z+ex8n5kZ2Tw82JhcVA7aRupOtGX9JXpVOpIk01VbI6q7SNp5iwkc9/W+f594s0pFdML+KK88ubSlcP8xc=","w":120,"h":30,"aspect":"fixed","title":"named class"},{"xml":"7VdNc5swEP01HONBUsBwtHGS8aEf0+SQHolRDB0sUSHHuL++KwkMbOykk3bcTicee6y3Kz30VrtI8liyaW5UWuUfZMZLj115LFFSatfaNAkvS4/6ReaxhUepDz+PXp/wEuv1q1RxoY8MkA/f+EpDjzJ9MA9bWGdYQt95XaUCPLXel9x6wu9bM435oxT6oi5+gHUGHci0anontNb2/4p6s8iLgo4OnukYW7+d2N2+ctx0KTRXNUymkOLTo/N2KqiBY4H9rCgYiqoGMN/lhea3Vboynh3EEGy53hhdBJppXRmxbPFYNDw7zOGJK82bk/Eig4ffcLnhWu2hy955mQunvysynY9NOS/WuR7b0trh9YGoXwtotPI62K7OyZUSwDZLyrSuCQ6ntTrj8svS2T5uTeiGgWUvBlbJrchMoBb+68GtRVrdyc+ysHEzlsq0rd5gDl9/ApNMfC8A6sRiijBD+BLhAOEQ4SnCEcLxGBsEcxpjhnCA8BTheMBv9BGkjyB9BOkjSB9B+gjSR5A+gvT1mCB9BOkjSB9B+kivD76/VyztgGj6rFiI/xeqhb6tWi7fq+W9Ws5fLe1OEzzfac5YPLhiruyem0gh3JY9rpTg5Q1bZDOl5A6QrLgYV4Y5XCSylMr2ZT584hjsvCn0fdvHtL+2hWbai2YI9h0Q2XVhJFqUpXVuq9MSCAjI/aEfAEsH69vCntGiAeWtPfcsInOeUKsWGd+4/l08eLbmo9Wv5Vat+OBUQ32dqjXv1u6Xc2SQBcGRJOhsipepLp7GkziWGe0T3BvpkIIXhEZHk7CjcHraUcNzKCLqkvIEjYvBMxqbpgfRZ8nc8DyZS/63zL38xzI3CCahH4ZwOSHTaRyRKBglIIsnLGYsjmgENyISkeBteR2P39EU0fypvAbYXwHd6OEN8Sc=","w":187,"h":80,"aspect":"fixed","title":"intersection form 2"},{"xml":"7VdNc9owEP01PoaxpNjYRzBJhkM/pskhPSpYYHWM5MoiQH99V5KNbQFJJ+3QTicZMujtSiu9t7vIDki23t0pWhUfZM7KgNwEJFNSajda7zJWlgEOeR6QWYBxCP8Bvj3jRdYbVlQxoU8skE/f2ELDjJI+mc1m1hmXMHdaV1SAp9b7kllP/H1jjjHVbKevaMlXIiATs5YtdeeF0ar5pusKBuUxklvYa8KFZqqG/bkUn5aHGcPVLWqi3LpTtVsYcg/7yp0Pz72AuKcENnAoUscMg4FXNYDptuCa3Vd0YTxbyAPYCr022iAY0roygpHZku9YfjjDM1OgylnNUW/zOybXTKs9TNk7L3EpCbc818XQVDC+KvTQRmuHV4dAXT5h0NBrYZPhs9kWEG2SlbSukS+ntTrj/Mvc2T5ujHR9YcmLwiq5EbkRaha+Lm4taPUgP0tudTOWyowt32gKn3AEh8zCIILQmcXYw8TD1x6OPBx7eOzhxMPpEBsEZxpi4uHIw2MPp734hh/y+CGPH/L4IY8f8vghjx/y+CGPX4eRxw95/JDHD3n8UMcPPr/XLM2CZHzULCj8C92C39Yt1+/d8t4tl++W5qaJjm+aCzaP3zE39s7NpBDuyh52SvTyhS3yiVJyC0hWTAw7YymFzmQplZ1LQvhLU7CzHdePzRwz/to0mhnPdn2wb4HIb7mhaFFO68J2pw0gQJDHwzwANhzkt4FdRIt6Ie/5D0MjMc8TatEg4xv2v9OD5Ss2yH4tN2rBek81ONRUrVibu1+ukV4VRCeKoLUpVlLNn4eHOFUZzQ7uF+lQglcIJyeLsA3h+DSr+s+yXqC2KM+EcRochbFleiB9kcqNL1O56H+r3Ot/rHKjaBSHcRyiMRqP0wQl0aAASToiKSFpghN4q0IJit5W1+nwNxp7Yf5UXQPsXiPd6v5b5k8=","w":187,"h":80,"aspect":"fixed","title":"intersection form 1"},{"xml":"7Vffb5swEP5reGyF7ULgMSFp1Yf90NpJ3SMNTmAiNjNOQ/bX72xDgGvSTd2UTVOjRPF3Z3/2d77DxmPJprlRaZW/kxkvPbbwWKKk1K61aRJelh71i8xjc49SH34evT7hJdbrV6niQh8ZIB+/8qWGHmX6aCabW2dYQt9ZXaUCPLXel9x6wm9bs4zZSgp9URffwTqFDmRSNb0TWmv7v6DeNPKisKODOR1j67cLu99Xjpt+FoUUH1bO3C2fGjhW1i+HgqGoagCzXV5oflelS+PZQfDAluuNEUSgmdaVUcnmq6Lh2WHyJ640b04Gigwmv+Fyw7XaQ5e98zIXR39XZDofm3JerHM9tqW1w+sDUb8J0GjldbDdlpNbJIBtmpRpXRMcR2t1xttPt872fmtCNwwsezGwSm5FZgI1938e3Fqk1b38KAsbN2OpTNvqDWbw9S9hkYnvBUCdWEwRZghfIRwgHCI8QThCOB5jg2BNY8wQDhCeIBwP+I0+gvQRpI8gfQTpI0gfQfoI0keQvh4TpI8gfQTpI0gf6fXB9/eKpR0QTZ4VC/H/QrXQ11XL1Vu1vFXL+aulPWmC5yfNGYsHV8zCnrmJFAK6wpE9rpTg5QNbZFOl5A6QrLgYV4a5VSSylMr2ZT584hjsvCn0Q9vHtL+0hWba82YI9h0Q2XVhJFqUpXVuq9MSCAjIw6EfAEsH+9vCntGiAeWdvfDMI3OfUMsWGd+4/l08eLbmo92v5VYt+eBWQ32dqjXv9u6Xc2SQBcGRJOhsipepLp7GiziWGe0M7ol0SMELQqOjSdhROD3tqOEFFBF1SXmCxsXgGY1N04Pos2RueJ7MJf9b5l79Y5kbBJehH4bwVkImkzgiUTBKQBZfspixOKIRvAqRiASvy+t4/IymiOZP5TXA/t3PjR6+Gv4A","w":187,"h":80,"aspect":"fixed","title":"union form 2"},{"xml":"7Vffb9owEP5r8tgqtklIHiGUqg/7obWTukeXGOIp2JljCuyv39lJSGygm7qJTVMrKu67s8/+Pt/hJCDZeneraFW8kzkrA3ITkExJqRtrvctYWQY45HlAZgHGIfwHeH4mimw0rKhiQp+YIJ++soWGESV9MovNbDAuYey0rqiASK33JbOR+NvGbGOq2U5f0ZKvREAmZi5b6j4K1qr9pusKjPIYyS2sNdkILsWH5SHkTutQO33ebKfLbVg97KtmY/hzlwkPuGMDXVl6LhgcvKoBTLcF1+y+ogsT2YLy4Cv02qiBwKR1ZSQisyXfsfyw+DNToMNZldFg8Vsm10yrPQzZN1HSHEK45bkuXFfB+KrQro/WDV4dEvUnCEZLr4PtmZ49XwHZJllJ6xr5Olpv47z7dNf43m+MdENhyYvCKrkRuRFqFv5c3FrQ6kF+lNzqZjyVsS3faAqf8Bo2mYVBBKkzi7GHiYdHHo48HHt47OHEw6mLDYI9uZh4OPLw2MPpIL/hhzx+yOOHPH7I44c8fsjjhzx+yOPXY+TxQx4/5PFDHj/U84PP7zVLOyEZHzULCv9Ct+DXdcvorVveuuXy3dLeNNHxTXPB5vE75sbeuZkUAobCle12SvTyhS3yiVJyC0hWTLidsZRCZ7KUyo4lIfylKfjZjuvHdoyxv7SNZuzZbgj2HRD5nBuKFuW0Lmx32gQCBHk8jANg08H5trDPaNEg5T3/bmgk5nlCLVpkYm7/N3qwfMWc06/lRi3Y4KkGh5qqFevO7pdrZFAF0Yki6HyKlVTzZ3cTpyqjXaH5RTqU4BXCycki7FI0fNpZw6dXL1FXlGfSNBocpbFleiB9kcqNL1O56H+r3NE/VrlRdB2HcRyiMRqP0wQlkVOAJL0mKSFpghN4j0IJil5X16n7G429NH+qrgH2L47N7OF75Q8=","w":187,"h":80,"aspect":"fixed","title":"union form 1"},{"xml":"7ZZNc9owEIZ/jY9lJAtDOCamyeTQjyk5NEeBFexWWB5ZBLu/vqsPsLWENNOZ9hSPmdGzklZ6V7vCCct33Z3mTflJFUIm7GPCcq2U8a1dlwspk5RURcKWSZoS+CXp7YVe6npJw7WozQsT1PqH2BgYIfnaLrZ0nXbKQ98Iz6v9Ope8bb88+Z6jbzcwXrY1vQyzRF1ca60OQGupNj8TdlOanV2CQvNJ1SZXUmk3mBF4Fguwi64y38FGJlmgR0uhvezG0B+hLm4rKU9kdD9yYfExrOpgcOJo5GVV/bKbvwLiehPI9mm1rwtRBPJREMVWRDFu1V5vgmnqTYbrrQhhZ+cnQUcBvBNqJ2A/MORQFab0IzJ/WKQU1bY0sU0LyU31HG+Ctx63J3enFb6qqrYn3fkRH8CTn9OHPZPYhdcTZo1TDDuazSfk9FAyW7zq1sfkzC00RkEYTC6xjhiy9WLm1rDGtctVipPYWb3x/tu9t33e26QdpzR7NaXjNDiUlRGrhrszP0DBxhne1rx5UF6ntzS27aKQ3cBLJrDJnCQZuM4dp4gZ4iniDPEM8RzxFeJFzJZgTzEzxBniOeLFyL/VR5E+ivRRpI8ifRTpo0gfRfoo0jcwRfoo0keRPor00UEfvMdr4FloI7qLl+2fS5ySF2qckcvlHFXMX5bH2R3/tvKYvpfHe3n8h/LoUWn8+3IBHL6x/H/R+BPsNw==","w":100,"h":130,"aspect":"fixed","title":"subclass form 2"},{"xml":"7VZNc5swEP01zLSHeCRk7PgY4zqTQz+mzqE5ykY2dGREhRxDf31XSDZiHaczmWlPYTDetys96S27QMTSfXOveZV/VpmQEfsUsVQrZZy1b1IhZRSTIovYIopjAr8oXl6J0i5KKq5FaV6YoNY/xcbACMnXdrFFF5xIGDuvK15CpDatFF1k8utgtzHfKKl0xO4gqHfrD0AIZwrXwPpoTTaH61aV5qYufgs3g8ZV01OBtfP/fF+BIS+RzrY1zK0P61Tyuv66PYeHU0/IUyzd/k/8Ng2PbeWUxKuALA7yFVs4TGWvPxZldqe1OgJSlSiBNzd7mzUKptWZuszAWEbgmM3AL5rC/AAfGSUePVnk7UUTgvYEymxZSOlRxutcZH4ZuI+6DfgsfApjPWOHAspVdxMWt4C43nhkY1odyqxbgZxzJbKdGNRQrQ56411j5zJc74QvK3ZZaTRI5r1QewH7gSHHIjO5G5G4YiS5KHa5Gfq0kNwUz8NN8NrB3ZnuvMI3VZS2khs34gaY3JzW75kMKZwePytsIUw0mY7I+aBkMnuV1uXkghaMIAm9qyuyE/TdeLUzS9sHXd1SXNCd1zkfvj8435eDLeCwvNmr5T0sg2NeGLGqeHfPj/BAGpZ7XfLqUTmdzlNZu8tCMoeTjGCTKYmShX0kWBwjzBAeI5wgPEF4ivAtwrMhtgj2NMQM4QThKcKzgN/qo0gfRfoo0keRPor0UaSPIn0U6esxRfoo0keRPor00V4fnKfHwLPQRjRXXyZ/b3FKXuhxRq6386Bj3tge8dvaY/zeHu/t8R/ao0Wt8e/bBWD/DeneReEn5h8=","w":100,"h":130,"aspect":"fixed","title":"subclass form 1"},{"xml":"7VdNc9owEP01vnYsGQd8BEMyObTTaXJojgpWsDrGcmUBpr++qy9sCUjadMpwCAMzeiu9ld7y1oIoydfdnSBN+ZkXtIqSRZTkgnNpRusup1UV4ZgVUTKPMI7hE+HbM7NIz8YNEbSWJwj8+QddSlhRkWe1mVoQLXA0yaKp5T7uG2omFj83bEsqyJRXpG3NtNsJK+gfopX7ylIhwJoWwGxXMkkfGrJUMzvQCbFSrtXeCIakbdSBkvkL6yiknr3wWj6wX2o1GgM2u26pkLQ7qxENDnNH+ZpKsYcljhCbGsQ7VsjSxBIbKilbldKPkdbg1SFTX0AYWL0O2pKeLW8N2aa6gEcFHpT1/tu9iX3ZqFoOK528WmnBN3WhKjeP3652W5PmkX/lTBdORRo11nrTGbzjT3DIPI5SSJ1rjAOcBHgU4DTANwEeB3gS4MzHCsGZfJwEOA3wOMDZIL/ShwJ9KNCHAn0o0IcCfSjQhwJ9KNDXYxToQ4E+FOhDgT7U64P3v3XL3symWGkM2uXQQpfsF/y+fhl99MtHv1ygXxzBtcGV9M/RLa5v4pzXNSxlvPabJX39Gq+LqRB8B4g3tPabQ93UOa+40GuTGF5ZBnEg3TJ1YN1hBWlL3W7ITNm7faIRiP2u1kHFLHyyNA3mnYf2DnVMDmiAnlx+GPckBRyHiKXdWSH/IWAqQosV9SzQ8o1Y0sGvHRxLIlbUfXt/bJSBD9ITNnAxQSsi2dY/xClv2B3MY6n3Yer7MDn40OUwgixt+CPSZbLM0RHT6D5ianMehF7ErzcX9us7Her7/Cr8Oroyv+I49fyKJ3/t14PzsZ9p/L/8C7D/a2bYw39uvwE=","w":230,"h":82.5,"aspect":"fixed","title":"equivalent form 1"},{"xml":"7VZNc5swEP01zLSHepBkbHO0cZzJoZ1Ok0N6lI1q6MiICNnG/fVdIT7EOs4hM+0pDMb7VquV3rIPCFhyqO81L7OvKhUyYHcBS7RSxlmHOhFSBjTM04CtA0pD+AV0c2OUNKNhybUozCsT1Pa32BmIkHxrF1s3gzMJsauq5AWMVOYiRTMyeznabax2SiodsCUM6v32EySEM4GrZ322JlvB9ZcqzJcq/yPcDELLekgF1r7954cSDHmN1Bk2thQvx/zEJdBIJK+qPmQ8vUNtmo3j0K1hS/F0KR0beoczUq9w1MJxTYdCUFGkS63VGZAqRQHJM3Ow5SNgWsKJKxHEshCOOAa/qHPz3MZY+yfY4SRq0bq2sAOXDhTpJpeyRSmvMpF2KQqjL899HAAvoYVDxgZ5KR+bu7Fe2JtsuDaIS+Pzlm2wN0erY5E2+wj7sop0L0YtV6mj3rWuqXNBmr1ou5BdNybxSn4v1EHAriHknKcmcxGR690wE/k+M2OfFpKb/DTeBK8c3Pfp+hW+q7ywjV+7iFnkZlzGsEvg2LRzfL2hNJTGk7g/FjEbZZ0vJqF3dEXoFnH1uVoEDK8gg6tpyw62Qr4p6gLWWDZ9TrEOvO5/+PHgfN+OtuV9QbA3BTFuiXOWG/FY8ub+n+FZNhZIVfDySTmezlNau6lCtIIznMD9S8IgWtunicUUYYbwFOEI4RnCc4QXCMdjbBHsaYwZwhHCc4RjL7/lRxA/gvgRxI8gfgTxI4gfQfwI4jdggvgRxI8gfgTxIwM/OLtHwkloI+qb76Ebcu+EFM/dFE/+JHxF/yy8LfWRgt4pF/I+uUw/5PIhl/8gl38vD4DD56d7F/lfp38B","w":397,"h":30,"aspect":"fixed","title":"equivalent form 2"},{"xml":"7VfBctowEP0aXzOWjAMcwZBMDu10mhyao4IVrIyxPLIIpl/flSVha4G0TadMDmHMjN5qd6W3fmvZUZJt2lvF6uKLzHkZJcsoyZSU2o42bcbLMqKxyKNkEVEawz+iN2dmSTcb10zxSp8IkE8vfKXBo2RPZjHjEC1pNJlFs9TGPuxrbicWonmRotJZyZrGTvp1qIHhFhq9L10gGETdAJjvCqH5fc1WZmYHLMFW6I1ZmcCQNbXZTrJ4Fi2H1PNnWel78dN4kzFgu+orV5q3ZxmSwWZuudxwrfbg4gNiW4F4J3JdWFviTAUX60KHNtZYvD5k6ssHA8fXQ1fQs8WtINusKyDB5R2U9e77nbV93ZpaDiudvFlpJbdVbiq3iH9f7aZi9YP8Zm6ps9Rm3PFN53DFV7DJLI5SSJ11mCKcIDxCOEX4GuExwhOEpyE2CPYU4gThFOExwtNBfsOPIH4E8SOIH0H8COJHED+C+BHEr8cE8SOIH0H8COJHen5w/Vu37O1sSq/So3Y5tNAl+4W+r19Gn/3y2S8X6Bcf4Nvgg/QPbppldxJnsqrAVcgqbJb07WO8ymdKyR0gWfMqbA5zUmeylKrzTWL4Tadgh6AbYTbcdVjOmqJrN2Kn3Nk+6RCQ/WH8oGIOPrqwDizaAO09aoUehAF69Plh3AcZ4GOYWrmVDQofArYiPF/zQAKN3KoVH7zt0Fgzteb+7v2xUAY6SE/IwNsUL5kWr+EmTmnDrWAfS70O01CHyUGHPocl5MKGr5A+k4scHUVa3keRnTgPRC+i1+sL6/WdCg11/iH0OvpgeqVxGuiVTv5arwfl0zDT+H/pF2D/YWajh99tvwA=","w":230,"h":82.5,"aspect":"fixed","title":"disjoint form 1"},{"xml":"7VZNb9swDP01BrbDAsmK0/iYOEvRw4ZhLbD2qMSa7cKxPFlpnP36UZI/ZKbZocB2quE4fCRF6VF6TgKWHNpbxev8i0xFGbDPAUuUlNpZhzYRZRmEpEgDtgnCkMAnCLdXotRGSc2VqPQrA+TuWew1ZJR8Zybb2OCihNx1U/MKIo0+l8JGFr+OZhnrvSylCtgKgirbfYCCcCfw9KyPxmRreP6Ulf7UFL+FG0HDuh1LgZV13/xQg1FeInmCha3SonmWRaV/FDof4tOxPepqbB2BfgLTh4dz7aiEm65cUvKmccG+Z6GB03aOPQhFla6UkidAshYVlM71wXSOgmm4Jq47kMsIXHEMftEW+rHLMfYT2GQWdWjTGtiDcw+qdFuUZYdS3uQi7UtUWp0fhzwAXkEDx4oWeSXv7UZslmZ/NVcacbE+b1qLvTFc7Ttkokoeq9SuigwtFmkmJmevkUe171xz54KimeiOI7s8odTbgFshDwI4QMqpSGHrbUbkDjHJRZHleupTouS6eJkugjcOZkO5YYZv5hhASusyFpEbcZ7CvoBj043xhYfKhGE8i4drGbNJ1ZvljHhX34R+Etefi0nA8Boyuuwh7WGn6KvqrmCOlT31IdaEp4W773fO9/VoBODLg/1VHtMjccoLLe5rbvf/BC+1qVyaitcP0vF0ntrYtgvRGm4yg/1LSBBtzGvF4BBhhvAc4QjhBcI3CC8RjqfYIFjTFDOEI4RvEI69+oYfRfwo4kcRP4r4UcSPIn4U8aOI34gp4kcRP4r4UcSPjvzg7l8JL0Jp0V79Qboi915I8cIN8eRPySv6Z+S61CcKeqNc6NvkMn+Xy7tc/oNc/r08AI7/Q91vkf839Q8=","w":396,"h":30,"aspect":"fixed","title":"disjoint form 2"},{"xml":"7VbLcpswFP0aZtpFGSSZ2CxtXGey6GOaLJKlbBSgIxAVcoz79b1CPCQ57iIz7SoMxvdciSOdi44gIGnV3UraFF9ExnhAPgcklUIoE1VdyjgPcFRmAdkGGEfwC/DuSivqW6OGSlarV24Q+5/soKAHp3s92LZvvOHQd9M2tIaWVp0561tufh31NDYHwYUMyBoaZb7/AIRwpnC1oo86JBu4PotafWrL38zcgXDTzVQQ5cM/rRoI+CUSJ5jY+iCqhrMKZHx7ntrde0c0cOyMgHEAXYeHc2Ok4NShw1bJsIZuNecSYFZnaynFCZBoWA3Mhap04RCEWmpqigN9SQRHkkCedaV6HPro+AniKIwHtO00HMF5BHW2KzkfUEbbgmUjRa3k+XHqB8Ai1HBm7JFFed8/h+0KEJWHAem2VlGpPGV9zppEjy0GKY511s8qmirMspw5S68VR3kYUguTApqcDauRXC5QZD2AWyYqBhqgy6nMVGF6xGYNRwUr80K5Ock4VeWLOwnaGphPdNMI30VZawN0psdqESbWsUoMwXmgW4TL2KU0+gYW24keMV4koc1LHGK8BOJoOgC7o5iSXYwCgVWjOdWv2xEOHr/q9xrGWKecti2+cInOmuTdjzuT+3rUnrAdQ/7qGHeVnIpSsfuG9kviBNuc66C2ps2DMDpNptFxX4V4A2cUwiNNoyDe6o1GY+xh4uGFh2MP33h46eGVhxMXawRzcjHxcOzhpYcTi1/rQ54+5OlDnj7k6UOePuTpQ54+5OmbMfL0IU8f8vQhTx+a9cE57hIvTCrWXX1FXdkBRietknAwobUnoOiVTYFE1/3veOiNhkFvM8zi3TDvhvkPhvn39gA4f5uat5H96foH","w":389.5,"h":30,"aspect":"fixed","title":"complement of"},{"xml":"7VZRb5swEP41lrqHRTYOafKYkK3Lw7Zqrabu0QUvMBHMjElgv35n7AS4Jmu1aW9FRPF35zvfZ31nQ3i0a260KNOPKpE54e8Ij7RSxo12TSTznAQ0SwhfkyCg8CPB+wte1nlpKbQszJkA9fhDxgZm5OLRLmYnFBXhy02RZPssqUXuU9y3pXT+3uU8my8b5/hU5950XD6wcFxZZdrcJ9KqLhJpp1LCV4c0M/KuFLH1HmADwJaanS2KwbAqRHmvblXW8bCW0o4rmypcwUsnUGlESQipow4HCHOEpwiHCM8QvkZ4jvBijC2CmsaYIxwifI3wYpDf8mOIH0P8GOLHED+G+DHEjyF+DPHrMUP8GOLHED+G+LGeH7x89V0V5s6LY+pktJfayOaiktlAXTdS7aTRLUzxAdwrnR6yxKQ+gnpbKrNt6tNwbxOVw9tTqr5PYOAVfIS+cy52EQlmubG6LUUxkv3sZ22bueP7tsp+gXUJE1hQNr0TRlv7f5WK6qvIa/kGpnSN6da61aqEzWmPq0BBbiEXhlv28yjo6kOf9JkG5n9sYFkkS63VAVCci6rK4nHPyiYzD4PxN9vqIAmH1o3v/A60R1DA1j8MwSDKwj6sQ31cctdt5noOSOjYI+sbHzSOoUy2cqSsStU69iavPyP0VprBUfYi/Q30Fp6R29GmZS5Mth8XcU6DfgV39J3kzWjoQlqPp5PF4JnPZ+OMjp5PMrwxUN5gQcd553RCBw8q1G3Rk7Rdv5z25C9bqNN7ZIX15A7qrM+qd/p6/bxePy+8fv7lxvn/NwzA/hvQNdfwE/E3","w":420,"h":30,"aspect":"fixed","title":"has value"},{"xml":"7ZZRb9MwEMc/TSR4AMVJ07WPbUqnPQATG2g8eolpgpw42O6a8Ok5x04T31pAleBpUqv6d/ad/U/uzg3itGqvJW2K9yJnPIjfBXEqhdB2VLUp4zyIwjIP4k0QRSF8g2h7Zpb0s2FDJav1CQfx+J1lGlZw+mg2MwtqFcSrlFOlIut93zXMTvVWa7z5dGNtH/Zmx2iyae/mn0fpjrsYUuzrnJmlYRCvD0Wp2V1DMzN7ANlgK3RljkJgqGra3ItbUfanN5bGjJUJlazhE74FiWkYJBA67TlCHCOeIU4QzxFfIV4gXvpsCM7kc4w4QXyFeDmJb/QRpI8gfQTpI0gfQfoI0keQPoL0jUyQPoL0EaSPIH1k1AefeG0z54lJzdqzKUsmCXXNRMW07GCJc4iWNqXDQ5nrwnmEzlawcle4MLGzUWV5dww1FgQMXNIO6ErkbLkE0ZzD9Dovn7xEn//Ym6JdfxO1fqPKn2BdwQISNe04CaOd+6WVyX3+nMQBdlpRzr9QvmdqK0V1XOA7D+SCbPsjzT2ramh9+TH71mAfwq0UDby1brKdjT3s53eOj57Tq891Ce9cUf76j90k/m03YXW+klIcgDLTnMrMbyCsLfXDZPzV9B3IT0ub1rWhHroBakiKhylMvAyObj2Nfvld/wA3CyAqM0dmzu96ViHLd8zLeSX2MnOmmTVpKndMT/rqX1XGpBKSE4Uw2CTjVMOL8A5xqjrcDrYPHwuPhIl16RwnfgQrxzlNLykU51jAQ5wFKlT7EJ4F6mv1qPrC8h1vO3LZbTd7ue1ebrv/cNv9+9sNcPyjaYtr+j/0Fw==","w":390,"h":30,"aspect":"fixed","title":"universal restriction (OP) form 3"},{"xml":"7Vbfb5swEP5rLLUPmzCElD4mpKsibV21dlP36IAbmAhmxllgf/3OPxLMLdmqSNtTJVD83fk++3PuzpAo3XS3kjXFB5HzikQ3JEqlEMqONl3Kq4qEQZmTaEHCMICXhO9OeKnxBg2TvFZHAsTqG88UzKjYSi+mJ9QtiWZpxdo2tNGPfcOty1itcflpaW13W71i6C1qwsb7aVVfOQ4ptnXO9dSARPNdUSr+0LBMe3cgG2yF2uitUBi2NWsexb0oze61pdHjVlPFc3iCtyAxDUgM1KnBIcIRwhOEY4SnCF8hnCB8PcYawZ7GOEI4RvgK4WuPX+ujSB9F+ijSR5E+ivRRpI8ifRTpGzBF+ijSR5E+ivTRQR880dxmzg8uFe9Opiz1EuqWiw1XsocpLiC8tikd7MpcFS4icLaCl+vC0UTOxlqL1weqoSBg4JJ2D12JnCwXEk4rpVO1YfUo06fft7pq58+iVm/a8idYZzCBhk03OGG01r8XexpY0TJZO2LPTAH67Mv3z9svObjuZtNV7ROfuxVyE5IkIUnwsi2ducoleEynsWd6L0UDSdCfXHPciD6Ogi4+1yWkUMuqy782p+iPzYnX+UxKsQNkjrrMxv2Id6V68sZfdRuDdLdo0bmuZkC/BzXk2JMPvCgNhzCDhrj8wRziIgHEZOaQ9o2bqFXI8zUflVArtjJzpok1KSbXXHlt+kWF5hVWfKSu9jbJK6bgjxht4lixuRVsWz/UMQ1iG9I7HI8ZrBwX5N95iOfQD/Y8Cap7ewi/EZnSP6g+sxsMlyc97/KcvF6er5fnf7g8//1lCXD4brXF5X/W/gI=","w":390,"h":30,"aspect":"fixed","title":"universal restriction (OP) form 2"},{"xml":"7VZRb9MwEP41lsYDKI6brn1sU5j2AExsSNujl5gmyI2D49KEX885dhrnaNk0CZ4mtaq/O9+dP/e+XAhLd+2V5nXxUeVCEvaesFQrZdxq16ZCShJHZU7YhsRxBF8Sfzjjpb03qrkWlTkRoB6/i8zADskfbTG7oWoIW6WSN03sou+6WjhXb3XG6y/XzvZpbyvGQdE+bHqexnTS59BqX+XCbo0IWx+K0ojbmmfWewDaYCvMzh6FwrKpeH2nblTZn95aartubKpkDZ/oHVBMI5JA6rTHMcIM4RnCCcJzhC8RXiC8nGKL4ExTzBBOEL5EeBnkt/wo4kcRP4r4UcSPIn4U8aOIH0X8RkwRP4r4UcSPIn505Acftnad81NoI9qzLUuDhroSaieM7mCLD4iXrqWjQ5mbwkdE3laIclv4NMzbeOPw9phqFAQsfNMO0EvkrFxIPJfGtmrNq0mnz3/srWrX31Rl3jblL7CuYAON63Z0wmprfy+4lG/A24vPlbnRqoZ76YYCcBZXw0VgbX6eBF18rUq41YbbrE/olf1Vr6LKV1qrA6DMyr/MphIVbWnug/WDVTZ0gEOb1gu9B90AKrj2+xAEURaOYT0a4/Lb/iI3C0BcZx5Z3/S54hiKfCsmXdWovc68aeZMhuutMMGT61m9F/RacqLVBpsWkhv4IyaHONV/voJ70h1bm0aJC+k8TqYZHB0fFI4BlOcokSHPAknBXcIfiXo1HFm/UCDjPKEvmyez13nyOk/+wzz59/MD4Pgq58QVvun9Bg==","w":390,"h":30,"aspect":"fixed","title":"universal restriction (OP) form 1"},{"xml":"7ZZRb5swEMc/DdL2sAlDSJPHhDZVH7ZVazV1jy54wRNgZjsJ7NPvjE3A12SbIm1PlRLFv7Pv7D+5OxPEadXeStoUH0TOyiC+CeJUCqHtqGpTVpZBFPI8iK+DKArhG0SbM7Oknw0bKlmtTziI5+8s07CipM9mM7OgVkG8SkuqVGS9H7uG2aneao13n++s7ePO7BhNNu3d/PMo3ZUuhhS7OmdmaRjE60PBNXtoaGZmDyAbbIWuzFEIDFVNm0dxL3h/emNpzFiZUMkaPuF7kJiGQQKh054jxDHiGeIE8RzxFeIF4qXPhuBMPseIE8RXiJeT+EYfQfoI0keQPoL0EaSPIH0E6SNI38gE6SNIH0H6CNJHRn3widc2c/ZMataeTVkySahbJiqmZQdLnEO0tCkdHniuC+cROlvB+LZwYWJno8ry9hhqLAgYuKQd0JXI2XIJonkJ0+uc771En//YmaJdfxO1fqf4T7CuYAGJmnachNHW/dLK5H75ksQBdlopOOsXWu6Y2khRHVf43gO5KJv+THPPqhpaX37OvjfYp3AvRQN/WzfZzsYe9vNbxyfP6c1Ny5WGP5jT8u0fG0r824bC6nwlpTgAZaY/8czvIazl+mky/mpaD6SopevWdaIeugFqyIunKUy8DI5uPY1++UP/CK8XQFRmjsyc3/isQpZvmZf2Suxk5kwza9JUbpmetNa/Ko5JMSQnamGwSVZSzff+IU4ViNvBtuJj7ZEwsS6d48SPYOU4p+k9heIca3iIs0C1ah/Ci0B9uR5VX1jB44VHLrvwZq8X3uuF9x8uvH9/wQGO75q2uKavor8A","w":390,"h":30,"aspect":"fixed","title":"existential restriction (OP) form 3"},{"xml":"7VZdb9owFP01ltqHTXFMKDxCYBXS1lVrNXWPJnFJphBnjinJfv2uY0OcO9gqpO2pUhA+9/oe+0T3I4TF2+ZW8Sr7JFNRELYkLFZSarvaNrEoChIGeUrYgoRhAD8SfjjjpZ03qLgSpT4RINffRaJhR8HX5jCzoawJm8UFr+vQRj+2lbCuzmqNqy8ra7vbmRND79AubHifWreF41ByV6bCbA0Im++zXIuHiifGuwfZYMv01lyFwrIuefUo72Xe3d5YKrOuDVU0hyd4DxLjgERAHXc4RJghPEI4QniM8A3CE4SnQ2wQ3GmIGcIRwjcITz1+o48ifRTpo0gfRfoo0keRPor0UaSvxxTpo0gfRfoo0kd7ffCwuc2cF6G0aM6mLPUS6lbIrdCqhS0uIJzalA72eaozFxE4WybyTeZomLPx2uLNkaovCFi4pD1AVyJny4WE40KbVK14Ocj08Y+dqdr5syz1uzr/CdYZbKBh1fROWG3M/9WBBk60TNaO2JOuAH321cfn3dcUXHez8br0iS+9ClmGZDIhE/a6K114yjV4uk5j3+m9khUkQXv2zGEj+jwIulo2ea0hXXJeXP+1PbE/tidRpjOl5B5Q97LzZNiRRJPrJ2/9zTQySHiLFo3rax1oD6CELHvygRdlYB/WoT4ufehe42ICiKvEIeMbtlGrUKQbMSiiWu5U4kwja9JcbYT2GvWrSs0rrehEZR1sShRc5y/DS5wqN3eCbezHSqZBZENah6Mhg5Xjgvyph3iOHeHAM0GVb1/Cb0Rd8R9VX9gP+vFJLxufo7fx+TY+/8P4/PfjEmD/5WqLy/+w/QU=","w":390,"h":30,"aspect":"fixed","title":"existential restriction (OP) form 2"},{"xml":"7VZdb5swFP01ltqHTRiHNHlMSFf1YVu19qF9dMELnghmttPAfv2usQlwl2xTpe2pElF8rn0/jnUPF8LSXXOjeV18VLkoCbsmLNVKWb/aNakoSxJHMidsQ+I4gh+JP5zZpd1uVHMtKnvCQT1/E5mFEyV/dsncgcoQtkpLbkzsvR/aWvitzuqNt19uve3T3mWMR0k7t2k9xrZliKHVvsqFOxoRtj4U0or7mmdu9wC0wVbYnSuFwtJUvH5Qd0p21TtL7dbGhUrW8ETvgWIakQRCpx2OEWYIzxBOEJ4jfIXwAuHlFDsENU0xQzhB+Arh5Si+40cRP4r4UcSPIn4U8aOIH0X8KOI3YIr4UcSPIn4U8aMDP3jY2nfOi9BWNGdblo4a6kaonbC6hSPBIV76lo4OMrdF8IiCrRByW4QwLNi48Xh7DDUIAhahaXsYJHJWLiSel9a1as2rSafPv++datdfVWXfGfkDrCs4QOO6GTZhtXX/FwZquYTtTn0+z51WNVxM22eAYnwS74LF+XnidHHdSGPhCiUvL/8oWfZbyYoqX2mtDoAy9waQ2VSlopH2cbR+cuKGJvBo0wStd6DtQQU3/zgGIy8HB7cODX75fXeXmwUgrrOA3N701eIZinwrJo1l1F5nwTTzJsv1VtjRy+uv2m/UbsmJbuttWpTcypdpEadaMGTwL7tjd9Mo8S5twMk0gqcTnMaTAMU5qqSPs0Bq8JfwS6BOEEfWr9TIMFLo60bK7G2kvI2U/zBS/v0IATh8zXlxjT/2fgI=","w":390,"h":30,"aspect":"fixed","title":"existential restriction (OP) form 1"},{"xml":"7VbRbpswFP0aS+3DImyHNHlMyFb1YVm19qF7dMELnghmxmlgX79r7AS4S7ap0vZUiSg+177XPugcXwhPds2tEVX+UWeyIPw94YnR2vrRrklkURAWqYzwNWEsgh9hHy7M0m42qoSRpT2ToJ+/ydTCikI8u83cgrImfJkUoq6Zz35sK+mnuqgP3n2+87HN3u3IBpt2aePz1LYtQg2j92Um3dKI8NUhV1Y+VCJ1swegDbHc7txRKAzrUlSP+l6r7vQuUrlx7UrFK3iiCVBMIhJD6aTDDGGO8BThGOEZwjcIzxFejLFDcKYx5gjHCN8gvBjUd/wo4kcRP4r4UcSPIn4U8aOIH0X8ekwRP4r4UcSPIn605wcPX3nlvEhjZXNRsnQgqFupd9KaFpaEBLbwko4OKrN5yIhCLJdqm4cyPMRE7fH2VKo3BAyCaI8wWOSiXQibFdZJtRLlSOmz73vn2tVXXdp3tfoB0SUsoKxq+kkYbd1/Zzpf/t7oCt6HY3i1oZPJhl0f94Dj+G18Erbnp1H+VSJMpkpRKNte/9G0/LemlWW2NEYfAKXuDlDp2KeyUfZpMP7i7A0y8GjdBLd3oD2CEt790xAMshzs0zrU52UP3dtczwEJkwbk5saXi2cos60cSavWe5OG0NSHrDBbaQfX118JcCC4+IzejjEjC2HVy/gQ50QYdvDX3UnfNIp9ShtwPK7g6YSkYS9AdU4+OdaZIz/4l/BLoc4SJ9avdEnfVOjrmsr0ram8NZX/0FT+fRMB2H/PeXMNP/d+Ag==","w":390,"h":30,"aspect":"fixed","title":"cardinality restriction (OP)"},{"xml":"7VZNc5swEP01zLSHeJDkj/ho4yaTQ91MkkN6VEAFOhhRIdvQX9/VBwa2Tuv20F7C2GO9lfZJT94nFLBo19wqXmUfZSKKgH0IWKSk1K61ayJRFAEN8yRgm4DSEL4BvXmll9jesOJKlPpMgnz5KmINIwr+YiYzA8o6YKuo4HVNXfZTWwnXZaMuePdw52LbvZmRDia1aeP11LotPIeS+zIRZmgYsPUxy7V4rHhseo8gG2KZ3pmlEGjWJa+e5L3M7epNpDLt2lDN1vAJJyAxCoMZUEcWU4QZwlOEZwjPEV4gfI3wcowNgjWNMUN4hvAC4eWA3+gjSB9B+gjSR5A+gvQRpI8gfQTp6zFB+gjSR5A+gvSRXh982NpVzkEoLZpXS5YMCupWyJ3QqoUhPoEupi7lmCc68xmhK/MwE3maeRrmY7x2OD1R9YaAhi/aDnqLXGAX8nd2YW92ebPLP7DL/7FHQOeFNqVZ8XJU2fNve/NSW3+Rpb6q8+8QXcEAQqum74RWan6tyRz9vZIV6G87YliD43YjsQc/jZLebeVG7nhebuUDL1Px/rfunP7SnaJMVkrJI6DYmD2Px4YUTa6fB+3Pxsfwfzu0abytLWg7UMKmPw/BIMvAPs2iPi95tNu4uQaU8Dqzx4Y9FzRXuluoPPCii93k5q+06VzFPt2g8bHjtkQkqRgVXS33KhaDU4yGQJoKPbgH/Glpzs5UZhdTouA6P4wXca5c/QzuIDy9KK783SdsPQG5njC67B82ZnTyPMnwkoV4yZJOwsHT7cWF07gt+2kaa7XTHl3gPoD9PdFlD6+RPwA=","w":374,"h":30,"aspect":"fixed","title":"no domain no range (OP) form 1"},{"xml":"7VbLcpswFP0azbSLePTwc2njNpNF3UySRbJUQAU6GFEhx9Cvr4SEEbdO63bRbuLBY52r+9CR7xFCLNo314pX2SeZiAKxD4hFSkrtRvsmEkWBKM4TxLaIUmy+iH58ZZZ0s7jiSpT6TIB8/ipibTwK/myLWYeyRmwdFbyuqYt+aCvhpjqrM97c3Tjb7mAr0qBoFzZeT63bwudQ8lAmwrpixDbHLNfivuKxnT0a2saW6b1dCjHDuuTVg7yVebd6a6nsuLapZhvz4ImhGGE0M6mjDlOAGcBTgGcAzwFeALwEeDXGFpk1jTEDeAbwAuBVkN/yI4AfAfwI4EcAPwL4EcCPAH4E8BswAfwI4EcAPwL4kYGfedjGdc6LUFo0r7YsCRrqWsi90Ko1Lj6ALqYu5JgnOvMR2LU5zkSeZj4N8zZeO5yeUg2CMAPftD30ErlALuTv5MLe5PIml38gl/8jD0TnhbatWfFy1Nnzbwf7Utt8kaW+qvPvxro2DoRWzTBpRqn97UTm0t8qWRn+bZ/YrMHldp5Qg59HQe92civ3PC938o6XqXj/W3VOf6lOUSZrpeTRoNiKPY/HghRNrh+D8ZPVsfm/Hdo2XtYdaHtQmk1/DEEQZeEQ1qEhLrnvtnG7NCjhddYdG7Y0V7Gfso7jI8XRFUkqRg1Vy4OKRXBCUay5SoUO3vF/2nazM13X25QouM5fxos414q+gjvkTi+BK3+vwa1PQJYTRlfDh40zOno+SXiBAnnJik5w8On34sIybst+KtPJ6LRHFyjLwOEO6KLDK+IP","w":374,"h":30,"aspect":"fixed","title":"no domain no range (OP) form 2"},{"xml":"7VbRbpswFP0aS9tDJ2yHNHlMyFb1YVvV9qF9dMEDJsDMOA3s63eNTYC7ZJsqrU+ViOJz7XvtY53DhfCobK+0qLPPKpEF4R8Jj7RSxo3KNpJFQViQJ4TvCGMB/Aj7dGaW9rNBLbSszIkE9fRdxgZWFOLJbmYXVA3hm6gQTcNc9n1XSzfVR13w+vbaxb7s7Y5ssmmfNj9PY7rC19BqXyXSLg0I3x6y3Mi7WsR29gC0IZaZ0h6FwrCpRH2vblTen95GajtubKlwC0/wAShGAQmhdNRjhjBHeIFwiPAS4UuEVwiv59giONMcc4RDhC8RXk/qW34U8aOIH0X8KOJHET+K+FHEjyJ+I6aIH0X8KOJHET868oOHb51ynqU2sj0rWToR1JVUpTS6gyU+ga2dpINDnpjMZwQ+lsk8zXwZ7mOicTg9lhoNAQMv2gF6i5y1C2HLwlip1qKaKX35Y29du/2mKnPR5D8huoEFlNXtOAmj1P73pnPlb7Sq4T66oTCcwdV2K7Env86S3j3KZqdKkVcwuBVVKt//1a/8j36VVbLRWh0Axdb+eTy3qGxz8zAZP1pngwIc2rXe6D3oBlDBtT9MwSTLwjGtR2Nectdf5G4FSOjYIzs3f684hjJJ5UxVjdrr2IcWLmSETqWZvLn+SXsTrYUnpDbEtCyEyZ/nhzilP7+De9MdpU2D0KV0HofzCo6OT5q2AVTnaJGhzgpZwV3Cb4V6NxxZv9AgYz+hL+sni7d+8tZPXqGf/P/+AXD8lHPmmn7p/QI=","w":390,"h":30,"aspect":"fixed","title":"domain and range (OP) form 1"},{"xml":"7VZRb5swEP41lraHTRiHNHlMyFr1YVvV9qF9dMEDTwQz4ySwX78zNgGuyVZV6p4qEeW+s+98n3UfB2HxtrnSvMq/qlQUhH0hLNZKGWdtm1gUBQkDmRK2IWEYwI+El2dWabcaVFyL0pwIUE8/RWJgR8Gf7GF2Q1kTtooLXtehi75vK+GWOq9zXt9eO9+3nT0xHB3ahU3rqU1b+Bxa7cpU2K0BYetDLo24q3hiVw9AG3y52dpSKJh1yat7daNkV731VNaubapoDU/wGSjGAYkgddzhEGGG8AzhCOE5whcILxBeTrFFUNMUM4QjhC8QXo7yW34U8aOIH0X8KOJHET+K+FHEjyJ+A6aIH0X8KOJHET868IOHrV3n7IU2ojnbsnTUUFdCbYXRLWzxAeHStXRwkKnJfUTgfbmQWe7TMO/jtcPZMdUgCDB80/bQS+SsXEg4L4xt1YqXk06f/9pZ1a5/qNJ8quVv8K5gAw2rZlgEK7P/nehc+hutKriPtk8MNbjcbifW5PdJ0IdHUW/UlssSjFteZuLjP/XK/qpXUaYrrdUBUGLlL5OpREUjzcPIfrTKhg5waNN4oXeg7UEJ1/4wBqMoC4ewDg1x6V13kZuFvXHDtelrU3te9L5LWfTVcZ34CBs/ffe4WxBpJiadV6udTrxr5lyQNBNm9HZ7UX+O+jE60Y69T4uCG7mfFnGqR/0J7m14bH8aRC6k9TiaZnB0fNB4VKA8Rxn1eRZILu4SniXqFHNk/UoRDTOHvm7mzN5nzvvM+Q8z5+1nDMDhc8+Ja/w1+Ac=","w":390,"h":30,"aspect":"fixed","title":"domain and range (OP) form 2"},{"xml":"7VZLc5swEP41mmkP8ejhR3y0cZPJoWkmySE5KqACHYyokG3or69eGNg4rdtDewmDx/pW2tV+y34gxKJtc614lX2WiSgQ+4RYpKTUfrRtIlEUiOI8QWyDKMXmh+jVG7PEzeKKK1HqEw7y5ZuItVlR8Be7mV1Q1oitooLXNfXej20l/JSzeuPN/Y233e7sjnSwqXMb51PrtggxlNyVibBLMWLrQ5Zr8VDx2M4eDG1jy/TWpkLMsC559SjvZO6yt5bKjmsbarY2N54YihFGMxM6cpgCzACeAjwDeA7wAuBLgJdjbJHJaYwZwDOAFwAvB/EtPwL4EcCPAH4E8COAHwH8COBHAL8eE8CPAH4E8COAH+n5mZutfefshdKiebNlyaChroXcCq1asyQ40MXUuxzyRGfBA/s2x5nI0yyEYcHGa4/TY6heEGYQmraDQSJnyIX8nVzYu1ze5fIP5PJ/5IHovNC2NStejjp7/n1nP2rrr7LUF3X+w1hXZgGhVdNPmlFq/53IfPg7JSvDv+0Cmxx8bL8SavDLyOnDrdzILc/LZ1Hf8zIVH38rz+kv5SnKZKWUPBgUW7Xn8ViRosn102D8bIVsHrhHmybo2oG2A6Wp+tMQDLws7N0c6v2SB1fHzaUtuOZKd7nJPS8621VuH5/z4CoOHhaNXzW+CiJJxajRarlTsRi8uSg2QVOhB9/+P23H2Ylu7GxKFFzn+3ESp1o07OBffsePw0U47+A2BCCXE0aX/cXGET29EGR4sAJxyZJO8ODqanHmNr5kr7Zx8jrW6AzFGdifDb338Oj4Ew==","w":374,"h":30,"aspect":"fixed","title":"no domain and yes range (OP)"},{"xml":"7VbLcpswFP0azbSLePTwI17auMlk0TSTZJEsFVCBDkZUkm3o11dCwsCN07pdtJt48FjnSvdx5HuEEIu29bXiVfZZJqJA7BNikZLS+NG2jkRRIIrzBLENohTbL6JXb8ySdhZXXInSnHCQL99EbOyKgr+4ZG5BqRFbRQXXmnrvx6YSfqq1euPN/Y233e5cRjpI2rqN69GmKUIMJXdlItxSjNj6kOVGPFQ8drMHS9vaMrN1pRA71CWvHuWdzNvqnaVyY+1Czdb2wRNLMcJoZkNHLaYAM4CnAM8AngO8APgS4OUYO2RrGmMG8AzgBcDLQXzHjwB+BPAjgB8B/AjgRwA/AvgRwK/HBPAjgB8B/AjgR3p+9mFr3zl7oYyo32xZMmioayG3wqjGLgkOdDH1Loc8MVnwwL7NcSbyNAthWLBx7XF6DNULwg5C03YwSOQMuZC/kwt7l8u7XP6BXP6PPBCdF8a1ZsXLUWfPv+/cS239VZbmQuc/rHVlFxBa1f2kHaXutxWZD3+nZGX5N11gW4OP7VdCDX4ZOX14Fnojtzwvb+U9L1Px8bfynP5SnqJMVkrJg0WxU3sejxUp6tw8DcbPTsj2D/doUwddt6DpQGl3/WkIBl4O9m4t6v2Sh3YfN5duww1XpqtN7nnR2a7yoqsu4TprzxYHuIqDuws2Pnf8logkFaOu03KnYjE4xii2GVJhBheBP+3N2YnW7GxKFNzk+3ERp/o1ZPAn4fFNcREuP7gJAcjlhNFl/2HjiJ5eCDK8ZYG4ZEknePDp9uLMNH7LXqVptXbcozPkZ2F/UfTew3vkTw==","w":374,"h":30,"aspect":"fixed","title":"yes domain and no range (OP)"},{"xml":"dVPBboMwDP0apPawCYJa7drCWvWwrWorbTumxINMgbAkrLCvn0OggLYeAn5+frbjJF4Y5fVW0TJ7kgyEFz56YaSkNM7K6wiE8IjPmRfGHiE+Lo9sbrBBy/olVVCYfwTy/AmJwQhBz7ZY3JJLgbFrXdICGW0aAS2z/KpsG+sPWZg7zX/Qu8KAgJT1QKKV2v9s45FoZz8nXEdcK/s5WO9hjrJCo9zV3ytZgjJNXxnbc8VdKreHU1O6NsjLRDR75SaLMqpoYkBxbXii506yO+yc4rmyUyGjwRALpzMbNkqgYCul5AVRIqjWPME2MpPbCQVo4jBV84bA78G7BfeLHsb1mIybK2LHdm7xAyKqkg5ZTsmqYMA65LoFlsLNgwxGW9iCzAErYciFM5O5iIU7az8DnmZm6lMgqOHf0/RUO5he010r7CUvzChEy0ol0HnHN7APrLtBL/1pbkNVCuaPEI3RNgZXezg97K5rD4dn4dTjV/ML","w":260,"h":1,"aspect":"fixed","title":"OP with characteristics"},{"xml":"7VVNb9swDP01ArpLYVpNP46zsxY9tAjWbNdBjbXYmywZkrrEPey3j5SdpCYaYJcCPdSwAb5HivaT+SAhy3Z741VX37lKGyG/CFl65+IQtdtSGyPyrKmEnIs8z/AR+fWRLKRs1imvbXxlgXv8pVcRK4x6pJdRwYky5hNSNgj5uVJRxb7TC+867WMPfyf00H5JUVo7Z+Un32zzR/ugqCOV3n69/TFfDMX3T/Ste3bJ2Z2InOBUX4i9GV/p3ZOtNJVmQhabuon6oVMrym5wG5GrY0vSAMNgVbd0C9ek3SCmozhQq1mBd3aKW1ZmYoaty4RzhiXDZwzPGD5n+ILhS4avppgQftMUS4ZnDF8wfPWiP+kDpg+YPmD6gOkDpg+YPmD6gOk7YGD6gOkDpg+YPjjow1sWlQp1Ggb6t2moC7X6vU5DUjrjPKasszgdxU9n47VqG9Mj9137Slk10g/NM80P5CPerRS5zNKF/DCjONxRb4+aDV6M7o12rY6+x5J+yMrBi9mmqWI9zvr5yNW6WddxWqfCgNf7TgcnYzC6YwdHbx/1eTJyaVQIwG2c2L01j/lSfvjyw5f/6ct3a8W39x7Cw/mdSifH+z8=","w":260,"h":60,"aspect":"fixed","title":"universal restriction (DP) form 1"},{"xml":"7VZNb9swDP01AtLDBkuq0/Q4223Rw4ZgzXYtlFizvdmSJytLvMN++0jZiWtiAXYZsEMDJ+EjqY9H8QlmMm2OD0615Xub65rJOyZTZ60frOaY6rpmIqpyJjMmRARfJu4vRHmIRq1y2vg/DLDbr3rnIaNWW1wMExZMLGtITrpWGQh1vq91CC2/73EfyVbtvhXO7k3+Zmdr65h8B3mu2C5EHDNcIYVfYl9N48Eqwv+dYKsVW0WnFWFfw6JDHIZEpoPZc+WV71u9drbVzvf818w9kNygFRhkJH3xyVQ/tOtUfTWkPn58fM7WQ/KHPVbs7N1Q76mUAuG8ylNlRKiGxtQINn4oK6+fWrXD6AEOE3ylb7DAHAtrVLuxa1uFM0FPi3aHU8UJPNFbOLg0YnGG5UMsCJYEXxMcE7wk+IbgFcG3c4wI9jTHkuCY4BuCb1/Mj/w44ccJP074ccKPE36c8OOEHyf8JswJP074ccKPE3584gePTHLVlaEZ8GyDtJKzZNJBMZmxBroj+WKNv1dNVffg+6xdrowa3U/VT+wfLkZ8GsmEjMInKAZ7FJrb6+NFyfMXrfugbaO96yGlH6JyuBGiQ5X7cuz169FX6qoo/TxPdQMuzjNN9wkYozpOcLxhLt42QchprbqOUxkH71mal3QpX3X5qsu/1OV/K8V/rz2A01tESJ29ZPwG","w":240,"h":60,"aspect":"fixed","title":"universal restriction (DP) form 2"},{"xml":"7ZVBT+MwEIV/jSW4rDIxpcuRpIA4LKqg2ityG9N417Ej29BmD/z2HTtpS0ZUQkLcqFLJ3/PYyXPmKYyXzfbGibb+ZSupGb9ivHTWhn7UbEupNcszVTE+Y3me4Z/l10dmIc1mrXDShHcW2OUfuQpYocUy3iwWnHjbyFPUjGf8shJBhK6Vc2db6UIHryO5338RR2nxjJSfXG2VD9IooU/72tv728fZvK++e45Pu1cXVN3ZyCOOHfrQ6eGezj6bSsbSjPFiU6sgH1qxirMbPEjU6tBEc4BDb0S7sHOr0nlEpY1jH7eaFHhlP/DQyoxNcOsycU6YEz4jPCF8TnhK+CfhizFHwmcaMyc8ITwlfPFm/+gPiD8g/oD4A+IPiD8g/oD4A+LvwED8AfEHxB8Qf3DwhxcvKuHr1Azx3aa2LsTq7zo1SWm1dThlrMHuKJ6sCdeiUbpD7bd0lTBikB/Uv9g/kA+8W8lynqUf6n2PvmCby+3RuMGb1r2RmKzgOizp+lnepzHbqCrUQ69PB62Wal2HcZ3wPa/3Ox2yjIMhHTsc0n006SnJpRbeA81xUvfRPJZL/p3L71x+MJefScvXxwPx8JFNpaNv8H8=","w":270,"h":60,"aspect":"fixed","title":"existential restriction (DP) form 1"},{"xml":"7VZNj9owEP01lthDq9jesOyxSdjVHlqhLuq1MsRN0jpx6phCeuhv74wTyGZUpEpVb4sCzJsZf7zxPAOTaX16dKot39tcGybXTKbOWj9Y9SnVxjARVTmTGRMigjcTD1eiPESjVjnd+D8MsLuveu8hw6gdLoYJCyaWBpKTrlUNhDrfGx1Cy+8H3EeyU/tvhbOHJn+zt8Y6Jt9Bnit2CxHHDFdI4ZPYN9N4sIrwvRZstWIreV4R9jUsOsRhSNR0MHuuvPJ9qzfOttr5nv+auQeSW7QCg4ykL9anqvO6qZS5GXKfPj59zjZD9ocDluzi3VLvuZYC4bzMU2lEKIfG1Ah2fiwrr59btcfoEU4TfKWvscIcK9uodms3tgqHgp4W7Q6nihN4ordwcmnE4gzrh1gQLAm+JTgmeEnwHcErgu/nGBHsaY4lwTHBdwTfv5gf+XHCjxN+nPDjhB8n/Djhxwk/TvhNmBN+nPDjhB8n/PjEDx6Z5KorQzPg2QZtJRfNpINkssY20B3JF9v4B1VXpgffJ+1y1ajR/Vz9xP7hYsTnkUzIKLyCZLBHf0Cb69NVzfMXrfuoba296yGlH6JyuBKiY5X7cuz129FX6qoo/TxPdQMuLjNNFwoYozrOcLxirl43QcmpUV3HqY6D9yLNa7qUr7p81eVf6vJf1PL/5QFw+qUPqbM/Ar8B","w":240,"h":60,"aspect":"fixed","title":"existential restriction (DP) form 2"},{"xml":"7ZXBbtswDIafRkB7CUypXtvj7LRFDwuCNdh1UGM1VmtLhqwu8Q579lGSk9TEMgwYemvgAPpIivJv84eZKNvdnZNd/cVWqmHihonSWevTqt2VqmkYz3TFxJxxnuGf8dsTWYjZrJNOGf+HDfbxWa09VjTyMRwWCkzPxOdKeumHTi2d7ZTzAzbKzhYwmy34+a9JRTphFVZx+5zsPCulq7SRjfbDeSq+/3r/fb5M5YvXcMOH6IpG90p4wKnI3g/NeKizr6ZSoTRjotjW2quHTq5DdovPEmO1b4M+wGVvZLeyS6vjIwmRLqz70Cov8MpmKLfMWI6ty8icsCB8QTgn/InwJeErwtdTDoT3NGVBOCd8Sfj6Tf+gD4g+IPqA6AOiD4g+IPqA6AOi78hA9AHRB0QfEH1w1IeXKCrZ13EYwruNk13I9csmDklpG+swZazB6SierPG3stXNgLFvylXSyDH8oH+G+QE+8n4n4yKLP4ynGf2Bc652Jx0Hb0b3TtlWeTdgyZCyIhky2+rK1+OsX+UpViu9qf20TvaJN4dORzvjYnTHHkeD/93sZSP7HqiRY/RgzVO+FB++/PDlP/ryf9zy/vZAPH5nY+nkM/wb","w":285,"h":60,"aspect":"fixed","title":"cardinality restriction (DP)"},{"xml":"7VXBToNAEP2aTfRiGNa29mhBmx40TW1MPJlt2RYMsAhbWy5+u7O7pZSJHPXUBMK8mdlh3jAvMB5kh2kpivhJRTJl/IHxoFRKOys7BDJNme8lEeMh830Pb+Y/9kTBRr1ClDLXvxxQqw+51piRipV5WWiDwxRzJxuVm8hGrKUNDD93povJqywjkYvWgdbWPPOK8ftIaKHrQs5LVchS1/DdcTfFsQNX3x11bS5Ngu0hJFWu3mQVqkwkORoLkW/ltTsyW8zew7k79Lwz3E/eJfU2Q/EN7M6r0nV6fHWpdnkkTaqHje3jRMuXws1gj58FfbHOzKgAzSoXxVLNVWKnazyFsStTajDBy7vBTxB4bIClA4t9gjnBtwQPCB4SPCL4juBxFxuEPXUxJ3hA8Ijg8Vl9ww8IPyD8gPADwg8IPyD8gPADwq/FQPgB4QeEHxB+0PLDq1nML9xBeeiVFJwt1FSqTOqyxpTaRblTnLdPIh0fN7DxxTLZxrqbJyqHt6dKrV7ROO5sA48K7lWzVV+QiqoCKjLrPQmmTy38opaLWv5BLX8vD4Ttj9Smdv6zPw==","w":230,"h":60,"aspect":"fixed","title":"domain and range (DP)"},{"xml":"7ZVRb4IwEMc/TZPtZeHoxPk4YTM+zBhnluxpqVKFBSiDOuXb70pB5DIetycTiP3dXa/91/4D4356mhUij15UKBPGnxj3C6W0HaUnXyYJc504ZDxgruvgy9zngSzUWScXhcz0LxPU5lNuNVYkYmMWC+qkl2DtdKcyk9mJrawT3tfB7GL6JotQZKIL4GhvfrOS8cdQaKGrXC4LlctCV9C2wzVtR1tsN7bGSrtqQObdvMsyUKmIs4VaiWwvb+2M+Wr+ESztnMXBiD1H1zTanoJrsH9Apa6SZuVCHbJQmlIH93WMYi1fcyv6iP8DxiKdmrMBHJaZyNdqqeL6OE0kN+PStBpN8XHuULHvsBG29mt2CXPC94RHhD3CY8IPhCd9NoR76jMnPCI8Jjy56G/0AdEHRB8QfUD0AdEHRB8QfUD0dQxEHxB9QPQB0QedPnzae/mNV1CeBj0EFxdqJlUqdVFhSWWz3FrMOcahjpoJ3LOxSMb7SPfrRGl5f+7UGRQHzZ1tsbHsoH1rF/qJKEugHqujZ8MMuYVf3XJ1yz+45e/tgdh9OevS3of1Bw==","w":136,"h":60,"aspect":"fixed","title":"domain and no range (DP)"},{"xml":"7VXBTsMwDP2aSHBBdbMNOLIWph1AE0xInFC2ZmtR25QmY+uFb8dJunW1mISEuCG1qp/tuH6un8p4VOwmtajSe5XInPFbxqNaKeOtYhfJPGdhkCWMxywMA7xZeHciCi4aVKKWpfnmgFq8yaXBjFws7MtiFxzlmDteqdJGVmIpXWD0vrFdjJ9lnYhSdA601vZZasZvEmGEaSo5q1Ula9PAZ8+9L44d+Pr+qG9zbhNcDzGpcvagYlWIrHyR+lGUa3nuT0wfp6/xzJ952FjqB++cevczCS3sj0ubJm/fXKtNmUibGmBf2zQz8qnyI9jiV0Ffago7KUBTl6Kaq5nK3HCtp7K2tqWGY7yCC/wCUcCGWDpyOCSYEzwgeEjwiOBLgq8Ivu5ji7CnPuYEDwm+JPj6qL7lB4QfEH5A+AHhB4QfEH5A+AHh12Eg/IDwA8IPCD/o+OHFx4nQqVsGOCzpB+6j3J2UFxxt10SqQpq6wZTGR7lXX7DNEpO26zhofanM1qnp5wnt8fpQqdMuGu0C72Gr5pPKdkqMcqE1UME570E9p6TD/6XzL50fSuc3avl7eSDsfqoutffP/QI=","w":240,"h":60,"aspect":"fixed","title":"no domain and yes range (DP)"},{"xml":"7VVdb4IwFP01TbaXhUsnzscJm/Fhxjiz16VKFRagDOqUf7/bFkVuZrJk2ZsJhHvuV3vKPSnjYX6YVKJMXlQsM8afGA8rpbSz8kMos4z5XhozHjHf9/Bl/vOFKNioV4pKFvqHArX6kGuNGZlYmcUiGwwyzB1vVGEiG7GWNhB87swuxm+yikUhOgdaW/MtasYfY6GFbko5r1QpK93AsR2u6Tq6ZLexJWa6VSNSdzNTkcpFWszUQhRbeesKpovpezR3JbOd4XryLqn3eAi+gf3zqXWTtQtXalfE0qR6uK19kmr5WjrOe/wN6Et0bo4G0KwLUS7VXKX2NI2nNHZtWg3G+Hh3SDj02ABbhxb7BHOC7wkeEBwQPCT4geBRHxuEe+pjTvCA4CHBo7P+hh8QfkD4AeEHhB8QfkD4AeEHhF+HgfADwg8IPyD8oOOHDx/Hok7sMMBpRr9wHOXhop7gbLomUuVSVw2mNC7Kndy8fRrrpC3ggfMlMt0mup8naoe3p06dWNFoB/gIW/lelLJVZJiJugaqN+s9qeeSdPhVOlfp/FI6f1HL/8sDYXeL2tTeJfsN","w":136,"h":60,"aspect":"fixed","title":"no domain no range (DP)"},{"xml":"dVHBbsMgDP0a7gSk3bd0q3LYNK39AVqswEQAEdIkf18TSLJK6wHp2e/ZfjaE1910DMKrTyfBEP5OeB2cixl1Uw3GEEa1JPxAGKP4CPt4wlYLS70IYOM/Be7yC9eICiMuadhhIV8Mat8GBG0Ctif8tbFS37QchKlWAXbZNHnOefaQm+zyzDQ/TSa+BlNSq0eWwkf7fZxNaRTcYCUkKcUxo9IRTl5cEzvilTCnYpecVwh7K/zZfTu9LFttvm4QIkxPT1L9cXAE10EMM0pGLaMqCprPRhXoVpUyXnKiz3G7le4HRlC2WsNy8jXcv3aRPvz8HQ==","w":100,"h":30,"aspect":"fixed","title":"individual"},{"xml":"tVbbbtswDP0aPy6Q7DiXx9pZijxsGNpiWB/VWLO1OZYhK4mzrx918Y1N1g1DgwTQocgjHYokEkTpob1XrC4+yYyXQfQxiFIlpXarQ5vysgxCIrIg2gRhSOAXhNsbu9TukpopXukrAfLlB99r8CjZizlsYzdNyNOl5g4/bLYWWHNHbL2mZzb6UvoQXmV3SskzIFnzKoiSQh8MPYXld1npVJZSWd+IwGe9BjsEbUVpvAigjDUFz3wIXF5dvpmdWdzB5/HepvVhDl16lD2KX+ZSK4NaoUckgJ47P1gPFAZ0DEoeq8zeg/irb9lBlGb7K1cZq5g3+3MoZCVxqeJZziev0Mij2nvT3Jk0Uzn3DxO9fis6yvI9lwcO4sDlLDJdOI/YPScpuMgLPbUpXjItTtNLsMbBvKfrT/giRWVqoZ3SXHw8JVMGJ8cHjWsQ8XxYLmek/1CyWE9454jWpeQVLSxGORhMtvg66Mv5ZmlXcMZdWrKmobjKrdUZdw87Z/t8NIU9Lvvoj2U/LZZzITR/rJl98jN09LQNmorVT9LpdJbarG0W4gS+ZAaXTEkQA3VqcYhwhPAc4RjhBcJLhFcIr6fYILjTFEcIxwgvEV6P+I0+ivRRpI8ifRTpo0gfRfoo0keRvgFTpI8ifRTpo0gfHfTBN0ps3SVs/zO3ddGNvEpW/O9HyZVhSUg/Yk5cad7eHPVvjw9KrsyPiNweFZN2/KfeC8JFCdvJERa5Wdhm3FWZOInsyEraOQBX74O7dHB/s1Xn79mq/5N+P/dWPsvv/xoAhz8Qbo6O/1/8Bg==","w":100,"h":110,"aspect":"fixed","title":"individual type declaration form 1"},{"xml":"tVZLj5swEP41SO1hIwwh2RwTaFY5tKp299A9OrEXqAimxiSkv75jm5cnm66qahEh880Lf8OMwQvjY/sgaZV9FYwXXvjFC2MphLLSsY15UXiBnzMvTLwg8OHnBdsbVmKsfkUlL9UbAWL/kx8UeBR0r2+WGOOiAN9NXdESLLW6FNxYFr8avYzNQRRCeuEajDLdf4KEcMZwnUiftRhu4PoqSnVX57+5jSBB1Y6pQEq7f3qsQCiukWSvEKouFR/0bkyPutitXXifWPN/1sGG3GOyNcCo+yoFGroFHFkHvGRrKcUZkKh4CUkzddS1IiBqdrGtB/iGPhyrFeghaJsX2kuXgdE646wLgSchLz+0ZRb18GVqS9ouzKLLgNiTKWNyr1Gbq0kSQC+9H8hjCg36DFI0JTPr8IfScJZyp1dq0chDp5pblaIy5V37hNcdRSble+DiyGHV4HLOmcqsR2Sbzs94nmbK1UleUJWf3EXQ2sJ0SDfc4bvIS92xrZvm0sX7vpvB0umCppOC8twtlzN/OIi/WDl5Q5TWluQqLQiTGowq01U97Ibu5gCWcI91XNC6Jrh9jdYqd487q/vW6I6d9nP41352u+Cc5Yo/VdQ88jPsO25/1yWtnoXlaTWVlk0Vog2c/gwWGftelOjJ1zhAOER4jnCE8ALhJcL3CK9crBGsycUhwhHCS4RXk/yaH0H8COJHED+C+BHEjyB+BPEjiN+ICeJHED+C+BHEj4z84Ox3gROXirc33xnvT/gwd9MRx0MznWZnYv5pPPqdvun3eDMvu5Llp5w1tCCTV0Fz6z0wur87TfOPnKb/KX+3Nd13Vf74pwFw/BKxW930Q+UP","w":100,"h":110,"aspect":"fixed","title":"individual type declaration form 2"},{"xml":"tZTBbsIwDIafJtcpTlYYx7XbEIdN08YLBBrRTGlTtSnQt5/TFkqtoR0QUpH82Y7jv9hlMsmPy0qV2btLtWXylcmkcs73Vn5MtLVMcJMy+cKE4Phj4u1KFLooL1WlC//HAbf50VuPGVZtwmUhoaiZfE6squvh9LotdR/qvL1z9bXqfR9NuFFcXCoCTvupfWuHGpVrilSHVM5kfMiM19+l2oboAWWjL/N5aAXQrAtVrt2nM133wVMGuw6lohgf/oBNJpxFWDrpWBCWhB8JR4RnhOeEnwgvphwIe5qyJBwRnhNeXNQP+oDoA6IPiD4g+oDoA6IPiD4g+kYGog+IPiD6gOiDUR8+Mu4nZ68rr49XRxYuBmqpXa591WLKwaQ+GzJ4P9Y802aXDcfk4FN1z7vz0XEB0BiG9ITDSlxdDyZmFsNxg8YuGN2+rIrU7E3aKAunBKx1zqGLNKb/u03yntt0y+tvp2/5/v8G4vgh7FIn38lf","w":100,"h":60,"aspect":"fixed","title":"individual type declaration form 3"},{"xml":"zVXBTuMwEP2aXCvHaQocSwuoBxACDnA08ZAYOXHkOE3C12PHTmpDQewKabdSpXmemeeZN5MkSjZlfyVJXVwLCjxKLqJkI4VQ1ir7DXAeYcRolGwjjJH+R/jyC288elFNJFTqSIJ4foVM6QhOns1l29G54jr2vNVGboyqiZL1rqJsz2hLeDwFaJY5xt7zMNRgSQ7h1rO721nHTcvd0VQjNjAsv1EDd0RStBUFE4r0NV3BFNzXJDPeTqukzwpVmspjbTYVqR/ErWBjs/Fc1x6kgv5LSWKvgisQJSg56JCOUVW4CGRlQwWwvHBpiTsjjcX5nHoQWBuuqwk6yf9afvzL8if/q/wuAa+czP9sHKQ0fTrNfSQ6HbSm7OUFTDeXUpRzQB6EHx3SNkz0h7L8dihQ0bWUotMo46RpWBbOAXqmHj37yYxvkTq07d00RzBMoKL37M1ccDoiLdzj7NLA4zDwQDKiiSVcF9sT0ByC2TeilRl4Dz9GisgclLeQf/qApkcWYjqTwIli+7CIY1vibrALPC9givACpzZrcFUv48Xq5Gz+nS5DUtuh4/Ffzx+o8QkKeON0kYZMVphPTOMez0r8YLU1PHxEbLb/jXkH","w":360,"h":30,"aspect":"fixed","title":"different from"},{"xml":"zVVRb5swEP41vEbGhLR9zJKtykOraelD++jiE7gyGNkmQH99bWyIvabTNk1aI0W6z3f33fm7A5JsVw+3krTVnaDAk+xrku2kENpZ9bADzhOMGE2yfYIxMv8Ef/vAm05e1BIJjb6QIJ5foNAmgpNnW2w/OTfcxH7pjFFao1FJtj00lJ0Y7QhP5wDDssS4Og9jC47kHO48hx8H57jvuD+ae8QWxu0rPXJPJEXXULChyJTpK6bh2JLCenujkjmrdG07T42pGtI+iO+CTZdNl75OIDUMH0qSBh3cgqhBy9GE9IzqykcgJxuqgJWVT8v8GVEOl0vqWWBj+FvN0Ev+1/Ljfyx/9lnl9wl442X+b+Mgtb2n1zxEojdBW0Vq2KrFU0ZxF6dz9BnhGNa/HAM0dCul6A0qOFGKFbHyMDD9GNhPdmCr3KP94Oc3gXEGDT2yV1vgekJGqsfFZUDAYeGZZEIzS7wg7k5AS4imrUQnCwged4w0kSXoYAX/9JHML6zAfCaBE81OcROX9sJXcCu7rFyO8ArnLmv0Xa/T1ebqZvldr2NSd0PPE76Qf6LGVyjiTfNVHjM5Yd4xTZu7KPEby2zg+bPhssOvyhs=","w":360,"h":30,"aspect":"fixed","title":"same as"},{"xml":"1Vhbb9owFP41eRxKnADlkUHpkLapWqupfXTJITFy7MhxStivnx3buVDa0YrRNhKSz9U+3/mOieKFs6y6EjhPf/AYqBdeeuFMcC7NKqtmQKmHfBJ74dxDyFc/Dy2esQa11c+xACYPBPCHDayk8qD4QW82r40jqny/lmqR6AUrvHC6ZDF5JHGJaeAcVJbGx+xzu8vBJGndjWX5a2kMP0tqVe6MSIv94xdyR20iwUsWg3b11TbblEi4yfFKW7cKJaVLZaZPHqhlwXB+y685qYsNmnM9gpBQPQtJ0DnBFfAMpNgpFxcwtiFbEsvU6nwDo58CSVKbJrQ6XBg5aVK1gKuFrdKJtgVvbgc6cTvCz9KOnZFHFwM08pvH0OmjNis8cbOiT9asIBwOxh+pWzjTMNiWdCW+VU7TKaVzsl5DXa+zJz3vgy3sx3U7NnyxY0WK6xQpVDjhTGXOQRBVKohWe+1U6N9dXZMK4hvyB07Q0+MHDk0Gw/M1sQ/9NwPSjDOmfIkCsYf/6BUTsymz3GIXaUoImXKVGtPvnOcW0A1IubNOuJS8Dz9URN511vc6s8LGSPPKblQLOycwhcldV+hEabENqyUXF+MirY9eb8biqRB8q0SeAzOaBdG41s5rzuQCZ4Tq6N8gYsywVTu2ICvPOOWihic0HW9oBHECPRIVvBQr6BAd+RKLBBwBjqaaAIoleexnP8QbG2qurebaaUIsZZHvH7x2XEZzbpuk+zq1n3cS9a+z6PB15vKa4p/krUneVHse3o/fhfct1+87lnfkvabsja27reuy1b7PZETnmowgCAdRh7F+n9BjpPg8aZ+Lt83J/t9+NPksY3Jx1jF5HXUPzpT/X2bqg44JOteYRHv8ffmaP3YsvqBJP+3YvSadehKU2H4zMNHdTwp/AQ==","w":271,"h":165.76000000000022,"aspect":"fixed","title":"all different"},{"xml":"7VZNc5swEP01HJuRhLGTo43TjA9tM00O6VExqlEHIyqEDf31XSFh0MZJO5lMe4kHz+zTfkhvZ58gitN9e6N5lX9SmSii+DqKU62Ucda+TUVRRIzILIrXEWME/hH7+IyX9l5ScS1KcyZBPf4QWwMRBX+0m61757yA2FUDxs4aZR3Fy02ZyYPMGl7QIQCqnGLcPvddJVyRMdx5Nl83zvG5KfzScEZmYXj82nSFL6RVU2bChhLY5phLI+4qvrXeI3QJ1nKztyenYNYlr+7VrZI9WbtSWbu2pZIVPOQCTp+SKIHSaY8ZwjHCM4QThOcILxC+RPgqxBbBmUIcI5wgvED4alLf8qOIH0X8KOJHET+K+FHEjyJ+FPEbMUX8KOJHET+K+NGRHzzDmB2ENqJ9dsLpZKBuhNoLozsIOcrM5D6COBWQXMhd7tNiv8Zrh3en1FEvYPghHaBX0KvVxN5YTfG7mt7V9A/U5BPYzKum828XS5n9d7XVFS+DyZ//bOwrdPVdleZDLX/B6hICKKva0RlI1JW/1aqC/nQTlbra54X6BSX9QayzF8UqymyptToC2ha8ruU21KdopXmY2N+srKH/Dq1br/IedAMooccPUzDJsnBM69GYl931XVtfAgqvEcdJZDsRDFGtGr0Vk3c8I4brnRgG4DUXd3JmkoY1LQpu5CE8xLnx8ju4i+00yYv4gkx+sySYa5aE9Rw5X2L6AYaqsgV5sY7ryJM6/eSfWvAXYgA4fiS67Ok35G8=","w":340,"h":30.5,"aspect":"fixed","title":"individuals relation"},{"xml":"zVZtb5swEP41fNyEoTTpxzTpqkjbVK3R1n6a3NgBVgczY5KwX7/zC8Fck277sGkSSPfYd+d77sUQpfPt4VbRuvggGRdRehOlcyWldtL2MOdCRElcsihdREkSwxsl787sErsb11TxSp8wkE/f+FqDhqBP5rCF3bz83przrndUtHyAUXYDj2KbJkpn70vNFRXO/6qruTNeUE0/OzOzsfy0/LpYua2PrfDqfXSJgePAG90J70rJtmLcqMZw+L6AA+9ruja7e8gPrBV6a2ImIDYVrVfyTpaWpl0pKJN7b50L2jRebp65Xhc90Eo+87kUUsEK4xvaCsN1Iyt9X/4wh5HEcLeB77jS/HA2tSTgc8vllmvVgYo3SKYu9fG+ZLrwFhO/VvAyL7yb1K/RxuH86GooHAg+Zz30pXytrJZZC0JuhMqUcVmxcleylgrSK4Cvow4u76B+rO+54qZ/s7i1kW16MmjL6/gtRD+Powxczy1OEE4RvkA4Q/gS4QnCU4SvxtggiGmMU4QzhCcIXwX+DT+C+BHEjyB+BPEjiB9B/AjiRxC/ARPEjyB+BPEjiB8Z+MHzP81qOJvxP59Nw2Q0J/3VazbeNJbjDBRIUh+CezkcaAYXsIZ5vVOyhgx0wVQ776cHe/HC7BfjffHqePOKzZSyJV2bcpbr8UTzQ6kfAvnRlBgaxqHFwVfcgq4HFeT5IQSBlYGDmUWDHfPdMQU0vnhcS33xRSdnm4mznI9aqZGtWvPgpktiTVXOdfBl+9OGy070W7+muKC63I2DONWE/gR3WR6/PWnfyx36FvUuHB9vFf5QYEcZcoQHwmXhhSM7E0favzEmAIe/Hmcd/hT9BA==","w":450,"h":30,"aspect":"fixed","title":"individuals datatype property association"},{"xml":"dVLbbsIwDP2aPA41yVR4HWXjadIk+IFAvSYoIVXijbKvn9OkMLbxEOnYxz6+hcnGDeugev3qW7BMPjPZBO8xIzc0YC0TlWmZXDEhKnpMvNxh+chWvQpwxH8S/O4Ae6QIq3apWAoYIiU/RQzm2DFRW8pb7gKhLqHMDs7+pY6RmP1HRO9WChWee8jltwmN2s2F3V7YqVeRzNsxIp5tyYxajSI0irIWrO+CclS0h2AcIITf3NuVWJ60Qdj0ap8UTrRc8ml0aWBO8N0M0G7MFxQ79/UJAWG4u0f+o901eCoVzhQyJcy4rBf1Qs7ngte8riQ8cJlVTqZFXWbmfFYXtwbT6SK+qGbzx+xWMbu6S43r+QiUXU1mOehkXj/OGHrzr74B","w":211.63,"h":80.74,"aspect":"fixed","title":"custom datatypes"},{"xml":"lZRhb5swEIZ/jb9OBJT1c5o0VaV2qtao2z5N1/gCbo2PmaOB/frZ2CTQlkqTQPK9vnttfI8R2bpsry1UxR1J1CK7EtnaEnEYle0atRZpoqTINiJNE/eKdDszu+hnkwosGv6ggJ6ecc8uQ8OTX8wnmFpkKzCGGFiRubdUoeUuOO26CkPaaibj5vtNSPjW+K2ko92kPpxutOZOR0NLjZHoUxORXZLlgnIyoG+JKicunPiMzN2D+usroGFyUsGljrPYKv45Gv/yVl+WMdq00bkPuhgcyHA0XKR+0siVtXR0sVRQkpFB3Co9LFOzpRf8oSQXUfEmWyiV9q6PaCUYcHL4eJQ5TprBYHOMzcje92cxOqRrpBLZupNNLGp32K9TK6hDmJ/yTqX3pIxvbBcLltOKmhq7x5g0Bmioa2PdReBlzid8zDsfNxjt/iz1XR/CCN8siCL9+qfx4F+eaTxrYnnlHisPHtdbxWhBv2V0AwyPoBs8ofl7s5ujM/sPOo+FW/Chgr2fPbrbOiWxNlDtKJxKVAqQPVW+OtdQ13FcvyDviyHo0VqTJusBxAM0mj+g9FPgXt1dxFbM3f8Zvt72+xj5HmsFqrwYyE3mEZxQMNtyF57/awGY8W/vHw==","w":340,"h":30,"aspect":"fixed","title":"annotation property"},{"xml":"dVJNc4IwEP01uUMY27NidTy006md3oNsTTr5mhAF+uu7IRGF6oFh3+57+5UlRam6rWOWv5oaJCleSFE6Y3y0VFeClIRmoibFmlCa4Ufo5kE0H6KZZQ60vyMw1Q8cPDIkq0Kx9RB8kshd1eKM5jGY+GfKoiH/I9OibrnU2njmhdHvzlhwvh9Z0wxTpKvGRpwyb6ZV543o5lGtgVm5uXaeMWzjs7cQR72XKTB2H7tIeDuFddKbjdIAp8tufC9TQseNqk7Y5KrlwsPeskOItPie6ONehR3naH4b7TdMCdmj4wtczTRL7r34DZqcjg2fsTPoHr5oftPSFowC73COrBW156npRXz1jIM48iR7XkQfayI+jtLrfaCRxrzAdDEXeL3MgTo53D8=","w":250,"h":75,"aspect":"fixed","title":"annotation property(AP)"},{"xml":"3VZNj9MwEP01keCCEntb2GOb0tUegBVFiD06tZsYOXZwnDbh1zOOnSbuB90LSFC1qZ9n5s149MZKhNOyfdCkKj4oykSE30c41UoZtyrblAkRoZjTCK8ihGL4RWh9xZr01rgimklzIUBl39nWgIcgmU226o1zAb7LuiISLLXpBOst8x+NLWO5VULpCC/AqPPsFRDCN4XnZPV6dIdV7v9JWcFCnCNNdzUw1k32pFXFtOk+7Y4eYfSAPMvalTmksKf90lWuYLQJ+dCkM8jCsGnjSRGTdKG1OgCCcAnUhSltfxJY7pQ0qesB+OIYPvf3sA9Bay6sVwyIkrpg1IdA93X3zVrezAb4PLWtWh/mUHdEdMN/2qLe2S6pRtKeM/ZlrEnJhXX+yjQlkvhtH5MgS9FyM8kM6Hkgh/WY14IhrWsVozkLZFSrRm/91p3bMkTnzCsLn4stmXT5gamSweHA5cCpKZzHzOkxLhjPCxPuaSaI4fuwCFI7mB/pjhmeFJdWzK0PwJ6n8ziZhRTuPD5qOkU3iOYo5HFNOOOBxeTU41YvtwH6Cbw5jZTvXzJI6gBxi4WUykDrlBzkf2OYHJJZXYXDFWY9LUTWF3Mlg2umT4NPKcNxvVS29Xj8/OgcPjZ2UKdjjH87xrpQZdZAlctDwQ3bVKSX7wGu1/ORfsEsudx7qIy10bUL9rbmL4r+7ey6vgNF/e/yQX9RPnf/jHyGOwx7mfx5OQEc3zvcXTZ9LfkF","w":250,"h":210,"aspect":"fixed","title":"sub property of (AP)"},{"xml":"dVNNb4MwDP01kdobBGn3QkfFYR9qq+0cICPZQhKFtJT9+jkQWlhLpID97Bc7toOipL7sDNHsRZVUoOgZRYlRyg5SfUmoEAgHvETRFmEcwEY4XbCGvTXQxFBpHxBU/k0LCx6C5C7Ytjc+CfCNS34GsXIi/EmtQRD3mmqBt3nrD3o3SlNju6vHnD1q/pR0HmExqMwb3evBA2iVIpxk7nOEfYC9cZ+9Q/fre8IQptFEjnFkA/mr//mPOU49l1J3JT52mg71m5di9cktSxgxpLDU8MbyolkPlGyfDYzXk2sanvQNO3Xe0sZ2wkcwTNX5CdKOW8YtPWhSOEsLUwMYs7XrZOga5Loak+KnMuoky0QJZcAklQT/+EtJm5Kaiw6wD2pKIomHD/zXnRhir49MhKOgXw7nQkzwtF/Xepzh8vSyOIXh5II7qmpqDVQ9aHlp2eAR+UkNGOUVG2mhB0kzANWVextqEHzVRtWP+ajenlPvOnttfw==","w":320,"h":110,"aspect":"fixed","title":"object property with characteristics(OP)"},{"xml":"3ZZPb9MwFMA/TSQ4DDnOWrpj09JpB9hEEYKjE7tJILGD47QNn57n2EntLmPlMgSVqvr9zXvPP7sJolV1vJWkzt8LysogehdEKymEMqvquGJlGWBU0CBaBxgj+AZ484Q17K2oJpJxNREgkm8sVeBRkkQ/bN0b5yX4xrTYwzLTS/glVQ2L8rEkDhC3vO8TPUhRM6m60cOP9iWeNHUvo3MVbyCj8DKGQ1WJdIqy5Wy8UnXDn7qamW7OC9PWu493xvih1dPCzsCwFv1ZNqorbTKZiyppobr4kBeKbWuSassBtgt0uar0CEM9GT3OmKTfMylaTleiFBJMXHDwj3eCqw2pirID3WcmKeHEqrfFT50xxFYeIgMcof4ztriHftjxyW0OnUZumaiYktA9OhRU5dZjYVBAOSuy3Ia9nRkdaYycjaEnaGBhhzOIFqN/Cyn8QkhF/zlSnbXihQn5u4g1NeHehOc/Wn15xqlpewlGmSWvUA8JZEbO6vXJ/RJOJd1prJo2GWC43z3D6YCXKXOar62fz2Xp+rcsMU6XUooDSBDOfX4mtv7mBvQQtCn0oNcaBEqanFEbAjsvuy/a8mY2iF9d2/pow4zUjRK10C30lDSufU50OaimbUYz5uHYiFamzDlXGCkiM6ac2/tP78HZBKODTrKSqGLvFzEFrn3Cgyi4BtMeoqvw2iYaDkl0Br9pyIa5f+TPZZqfJTJjeJSoP0hj3xecLRBPbxsm2n0Z+QU=","w":180,"h":203,"aspect":"fixed","title":"sub property of (OP)"},{"xml":"3VZNj9MwEP01keCwKHHa0j32g656gF2xCC1HJ3YTQ2IHx2kbfj3jj6RONssuF0BUquqZ8TzPPL9JE8Sb8nwjcZW/F4QWQfwuiDdSCGVX5XlDiyJAISNBvA0QCuEboN0T0chEwwpLytVEgki+0lTBjgIn+rCtCS4K2Lsm7AjLTC/hF5cVLIrHljhB3urWAN1JUVGp2n7HMHto8aSujB2OXbwGRDFAjLqqEukV5crZDUrVDX9qK2q7GRemo/uPexv80Gi2kEcY0uaQy1q1hQOTuSiTBqpbn3Km6H2FUx05wXWBL1elpjDSzGg61zj9lknRcLIRhZAQ4oLD/vVBcLXDJSta8H2mkmCOnfue/dCIEXJ2lxmgODSfvsUj9EPPT15z5DVyQ0VJlYTuwxMjKnc7llYKYU5Zlru0t3Prw7W1sz71IhpYOHI608noH5YUuCZUhf6QquL/XFWti6KlTfm7KqsrzAcML743+vm5Tm3bKwjKLHkVGp0AcuitXuul0Ysm6urgCF35mgLa4hn8Hh3JY/8Qojbka4AIVedLNS+fBMbhpJreHp4Zgk64loBp5e4vWL5CZ79UKOVkJaU4gQWK50NVTgjq+hr8kLRj+vq2mg2C65wSlwJ6ku2DjryZd+YXP7Y9uzRrtb1FnJSX+p4VlmpUl/F5xxrbyzGDY+q4aJ6SjA4UX4tGptQbXRQCTEaV9x/xu0/b+cQYdD5JC6zYcVjE1Gy4E+4E41r7bk6vopkD6uYwHs2Xbcil+a8LzyEtRkCWhkdAZlb7vl8wvmBe3mlstv/K8xM=","w":180,"h":203,"aspect":"fixed","title":"inverse of (OP)"},{"xml":"3VZNc5swEP01zLSHdEDYrnP0R5zJoW2m6XTSo7AUUCskIoRt+uu7+sAWhDTOpe3UMx60u9pl9+k9IEpX5eFa4ar4IAnlUXoVpSslpXar8rCinEcoZiRK1xFCMfwjtHkmmthoXGFFhR5JkNl3utWwg+PM3GxtgzMOe5eE7WCZmyVccVnBgj+15B7yFp9soVslK6p0e9zRz+5bIqsra8dDl6ihouxVTLquMhU05dvZ9Fo1A39pK+qmGTZmojefb1zwY2PQQgFgyJh9LGvdcl9MFbLMGuhuuS+YpncV3prIHo4LfIUuDYSJQcbAucTbH7mSjSAryaWCkJAC9i8fpNAbXDLegu8rVQQL7N137KepmCBvd5kRSmP7O464g3no4dljToJBrqksqVYwfbxnRBd+x9xRIS4oywuf9n7qfLh2dn5MPZEGFh6czvQ0+ocpBa4RVqE/xKr0P2dV66No7lL+LsvqCosewrPHxjw/l1s39gKCKs/exJYnUDkOVm/N0vLFAHXx4AFdhJwC2NIJXHce5KG/X6K24JsCCaoOp27OVwJ9bNgOcziFM9XQMdghMU7hq5GiIWcnv+UsFWShlNyDBcmiz9MRil1egh+SNswc6NrgQ3BdUOJToA3V3pvIu2lnfgtj64NPc1Z7tIgn99ycvMZKD/qyvuC21g5yrJRsHycVUJLTngZq2agtDcSMYiiTUx28NV77/J2OCKPzKcqxZrt+E2Nq8Xe4lUwYNXjlXiQTX6hTZjpQnBvIp4UfEC9Vmg0KORieFLLqPc59hqDBPH3luOzwI+gX","w":180,"h":203,"aspect":"fixed","title":"equivalent property (OP)"},{"xml":"3VbbctMwEP0az8BDGVtOQvqYC+n0AehQhsujbKm2ii0ZWUlsvp7VxYnkuqW8AENmMtHu6qx3j84qjtJN3V1J3JRvBaFVlL6J0o0UQtlV3W1oVUUoZiRKtxFCMXwjtHskmpho3GBJuZoAiOye5gp2VDjTD9ua4KKCvWvCDrAs9BJ+cd3AonpoiSPgVu9NohspGipVf9oRokOLZ21j7Hjs4i1kFEHGZKgqk15RrpxdUKpu+GPfUNvNuDAdvf5wbYPv9pot5BGGtBly2aq+cslkKepsD9WtjyVT9LbBuY4c4bjAV6paU5hoZjSda5x/K6TYc7IRlZAQ4oLD/vWd4GqHa1b14PtEJcEcO/ct+6EzJsjZAzJCaWw+pxYP0A/tHj3mxGvkioqaKgndx0dGVOl2LK0U4pKyonSw13Prw621ixP0LBpYOHIG08noH5LUhITQH5JQ+p9LqHdRtLSQvyuptsE8YHjxfa8vy3Vu215BUBbZi9jcM5A59lYv9dLoRRN1cecIXfl3EtCWzuD34Ege+8MUrSFfJ0hQ052reb7sG6ezLWvvBePqMwN2nxb/oGHLxbSIh3ShjAfNzp7ULOVkJaU4ggVgHup0QmKXl+AH0I7pA91qfghuS0ocBBQm+y868mo+mF/92LZzMGv1J4s4cS/1ySss1agu4/Mea2wPY0bJ1HGeAkoKGsxAK/Yyp94woxjSFFR5fxG/e9nOJwZj8ElaYcUOYRFT0+KecKPPEba4yb1IZi7RMJnpaOJsQw7mvy38KtNilMjS8CCRmd5T388YaDDPrzQW7b/x/AQ=","w":180,"h":203,"aspect":"fixed","title":"disjoint property(OP)"},{"xml":"7Vffb5swEP5rkLaXyIbw67Eha9WHbVXbh/bRCS4wAWaGNMn++p2NE/AlaauqqzqpiCj+fPb5vvN9YBwvqTYXkjX5d5Hy0vG+OV4ihej6VrVJeFk6LilSx5s7rkvg57jnJ6xUW0nDJK+7IxPE4hdfdjCiZAu12FwbgxLGztLiEZqZasI/qxpolIdIrGHe2U/t6EqKhstuux9hz7ZRvWgbjQnuqlvwKLBHvdpCjmIy0ZxbkSq+t9uG92RwXMp6eX3ZG3+sVLLcUb5cBe1Utt22NM5kLqrFCoKbrfOi4zcNWyrLGnYL+vKuUhmk+ygeYUm+ObkRdLTWBRcV7yQESMyEoN8nsi7SLjcTItOX8yLLjZfQ7/tY2+Ns72nYZWgYOjto9v1kDegdSErWti7OqO59NpHe04kUqzrlaih5PpltzZpbcSUKnTjV06i25uvP4CYTSGVCHB9cJxq7CHsITxH2EQ4QDhGOEI5trBDEZGMPYR/hEOF45F/xo4gfRfwo4kcRP4r4UcSPIn4U8RswRfwo4kcRP4r40YEf3G+iFhobaWwNJv6hfNwj8vHIv5UPfZ18pp/y+ZTPO8jnY8hl9ypvG1ZblR78XqmDz2wpSiFBUmCU2eIL0WcG8ExGra/D8JccW2T6oEQqWZ3xZ44ru2NGH97xc8Z172esYf9JDfM6PZNSrAHB2aS2Nfsg6i7pOcNYj8AVx9APk84LlVgt/JS1uX4KUG2CbbhTFigdA+/NQA3mGwtt9yi9Kf6ooCJATC4N0rZN0d3t/EP7ftQe3Cmw82Y/mfp88DTjVl22YiWXfHTgcknHZMZ3Nfbi6h1Vq3+kWHd9kpesKx7tII5VsFmhf1aefLf4ge2hp2Mmjc/iyM904kXx/opCz35jRUhafUoO3Gp17XPw/wkuFRUr6jdQ3Nw4GksueGfJjaXzWgEelxx5V8lNP5zkJnEcBISGNAzjiPgR1sokIIOdRq9TZEiRJO1VfPRp9VaKBDh80Pezx9/7fwE=","w":310,"h":135,"aspect":"fixed","title":"domain and/or range (OP)"},{"xml":"dVLBboMwDP2aSO0tgLqdVxhVD5umbdLOAaImUyBR4hb4+zmE0kLHgeAX+9nPsUmS1t3BMiPedMUVSV5JklqtIVh1l3KlSExlRZKMxDHFj8T5ijcavNQwyxv4h6CLX14CRihW+GLZ4HxSGLuv5AXNkzfxz2qDhnpEukXeS8aAQW/4h9WGW+inmDl/jprCmYDHvPm85qqMiUg3+RbPxqGE6lHCkKCwy5TLQv6JvpEZ+l+2svmRIFLBLCuBW+lAlm4bSMfPY+C8n/2zx3cvH3s4H4qDXo01rNB1cUbV+1ZI4F+Gld7T4tzxTkDtZxFN4i6og3erI43uah24rjlY7J62sgIxqtmFsVPB5UmMtOdduGMu4NNEvS0IGqP+KxxX5gpvqzmEzjb3Dw==","w":250,"h":75,"aspect":"fixed","title":"datatype property with characteristics(DP)"},{"xml":"3ZZRk5MwEMc/DTP6oBPCtfYeS7E396DeWMc5HwNJAYUEQyjFT++GBBpazqsvOtqZTrPZ/JfdzS8pXrApj3eSVNk7QVnhBW+9YCOFUGZUHjesKDyMcuoFkYcxgq+Ht094/d6LKiIZVzMCEX9liYIVBYn1w6LeuSxgbUjzAwxTPYRfUlYwKC4t0YJuHRFFVFexBykqJlU3rpnqpxaP66q30fkUryEmPYvpD5nF0knMprSdpKuL/gRSU9Flctp///HeuN83umfYaRvW5rSjteoKG05moowbyDBss1yxXUUS7Wlh02AuU6VupK/7o5sakuRbKkXD6UYUQoKLCw7rw73gakvKvOhg7jOTlHBip3f5Dx3Rx9YelB4OUP8ZizxAPez45Gb7TiF3TJRMSagetTlVmV2xMkCgjOVpZmVvFmaO1MZOR+kJHRjY5gymhenfAwv/MbCC/xysznrxykj+Lmh1Rfikw8vvjb5Iw8SUvQanTOMXqAcFIiNn9PK0/BpaJd1rtOomHmD4sH+G1QEwk+Y8YbtpPJelm1+yxDhdSylasEDOp/zMbP3tLcyDaJvrRkcaBErqjFErgZ2X3aP2vF4M5hfXFx2tzFjdaFEL3Up3SePax0TXg2rKZjRlExxr0ciEOecKI0VkypRzh//ubbiYYXSYk6wgKj9Mk5gD1z7hQeRcg2kP0Sv/xgYaDklwBr8pyMrcP/XnIi3PApk2XATqD9JY9xVnC8zTm4dRuy8mPwE=","w":180,"h":203,"aspect":"fixed","title":"sub property of (DP)"},{"xml":"3VbbjtMwEP2aSPCwyHG2pfvYNnS1D6AVi7g8OrFJvCR2cJy24esZX5I6vSzLCwgqVfXM+Exmjs+kjpJ1vb9VpCnfSsqqKHkTJWslpXarer9mVRVhxGmUpBHGCL4R3lyIxjaKGqKY0GcAMntkuYYdFcnMw1IbnFewd0X5FpaFWcIvqRtYVKeW3AFumRJNdN+weyUbpnQ/7pnip5bI2sba6NglWshJj3LGQ2WZCgrzJW0m5ZqmPwDUdXRanInfvb9z4Xed4QwHtGFjThltdV/5dKqUddZBhatdyTV7aEhuIjs4NPCVujZExoYfQ+qK5N8KJTtB17KSCkJCCti/+iqF3pCaVz34PjJFiSDe/cB/mIwx9vaAjHCC7Gdscgv9sP3Fw46DRm6ZrJlW0D3acapLv2PhBIFKxovSw17PnI+0zi5G6EE6sPDkDKYX078nLPzHhJX858LqfRQvHOTvCq1tiJgwPP/emRfpKndtLyGoiuwFskKBzChYvTRLqyFD1FVrmTOIGDf7Q6rnK7nxIkl5+yi50J84UPO0mgcJukYuaNCnm2pwENz1k4Jjgi6VkjuwACymIjujj5sb8ANow81ppIYfStqSUQ8Beaj+s4m8mg3mlzCW7j3MWf1oUa/MhTk2TZQ+qsv6gsdaO8DYObB1oMsT4KhhtGATXbeyUzkLBhQjyF4wHfwZ/O5rdXZG7INPsYpovp0WcW4C/BPuzfHCFj+NV/G1TzRMW3I0Ra4hDwtvB7/KND9K5Gg4SWQncuz7GUMK5uEK49DhDecn","w":180,"h":203,"aspect":"fixed","title":"disjoint property(DP)"},{"xml":"3VZNj5swEP01SO1hKzBJmj3mY7PaQ6tVt6rao4m94NbYrDFJ6K/v+IPEELZNL612I0V4ZvyGmec3QJSuysOtwlXxQRLKo/QmSldKSu1W5WFFOY9QzEiUriOEYvhHaPNMNLHRuMKKCj0CkNl3utWwg+PM3GxtgzMOe5eE7WCZmyVccVnBgp9bcg+4xRprrNuK3itZUaXb454+vm+JrK6sHQ9dooacZJAz6SrLVFCYL2nTK9c0/RmgrqPz4kz87tOdC39sDGcooA0Zs89orVvu06lCllkDFS73BdP0ocJbE9nDoYGv0KUhMjH8GFKXePsjV7IRZCW5VBASUsD+5aMUeoNLxlvwfaGKYIG9+4H9NBkT5O0OGaE0tr9jkzvohx6ePewkaOSWypJqBd3He0Z04XfMnSDigrK88LD3U+fDtbPzI/QkHVh4cjrTi+nlCQv9M2Glr1xYrY+iuYP8X6HVFRY9hmdPjXmQLreu7QUEVZ69ia1QIHMcrN6apdWQIerq0RO6CEUFtKUTuO48yUN/P0VtyTcJElQdTtVcPgz0qWE7zOEULhyHTsOOiXER34wkDTU7+a1mqSALpeQeLACLvk5HJHZ9DX4AbZg50LXhh+C6oMRDoAzVfjWRd9PO/BbG1gcPc1Z7tIgX99ycvMZKD+qyvuC21g4wdpRsHacpoCSnvRmoZaO2NBhmFEOanOrgxfG3j+DpyGB0PkU51mzXL2JsWvwd7iUTZhr85F4lE5+om8x0MHGuIQ8LvyT+lGk2SORoOEtkp/fY9wUDDebpc8ehw6+hXw==","w":180,"h":203,"aspect":"fixed","title":"equivalent property (DP)"},{"xml":"7VdNb6MwEP01SLuXyIbwdWzItuphV1XbQ3t0ggusALPGaZL99Ts2JmCHtFXVVl2piCh+Hns8bzwPjOMl1e6Ckyb/yVJaOt4Px0s4Y6JrVbuElqXjoiJ1vKXjugh+jnt+woqVFTWE01pMTGCr33QtYERJVnKxpTIGJYxdpMUjNDPZhH9SNdAojxHbwryzJRFE7Bt6xVlDudgfxpjzTVSv2kZhZHfVLfhMj32qFVd8FJeO6NyIVnK+hZkdoePYpP3y+rIz/9rIlLmjrLkSmgltxb7U7njOqtUGAlxs80LQm4aspWULewZ9uahkHvEhjkdYku5ObgcerXVBWUUFhwCRnhB0u4W2RSpyPSHSfTktslx7Cf2uj7Qdzg6ehr2GhqbTQ737JyvB2IWprN4e+p/Ipvd0NtmmTqkcip7PaFuT5pZdsUJlT/Y0sq1I+wu40QzymSDHB9eJwq6FPQvPLexbOLBwaOHIwrGJJYKYTOxZ2LdwaOF45F/ywxY/bPHDFj9s8cMWP2zxwxY/bPEbMLb4YYsftvhhix8e+MH9JpLBsdbHXmPkH2vIndCQh95NQ0lJ2hbbClK9z8pn/iWfL/l8gHw+h1z6N3rbkNqo9ODPRp6BFmtWMg6SAiPPVt+QOjyAZzRqfR+Gv+QEw9MHKVJO6ow+c27pTxtdeNPHjevOz1jD/pMapnV6xjnbAoIDSm1q9oHVIuk4w1gPwRXH0A+TzguZWCX8lLS5egpgZYJtuJMWKB0N7/VABZY7A+0PKL0p/sqgIkCErzVStl0h7nr/0L4ftQd3EvTezCdTlw+aZtSoy5Zt+JqOTl0uEoRntK+xF1fvqFr9iWLt+zgtiSgezSCmKliv0D0rT75b/MD00NHRk8bHcsvPfOZF8XBFgfnGiixpdSk5cqvUdcjB/ye4lFWkqN9AcUvtaCy54IMlN5bOawU4LTn0oZKbfzrJzeI4CBAOcRjGEQ5tqcwCNDJHrxNkiE1FxuYqvvV59VaCBDh82nezx1/+/wA=","w":310,"h":135,"aspect":"fixed","title":"domain and/or range (DP)"}]</mxlibrary>',"ontopanel-library"))})(e);let t=(e=>{var t=document.createElement("div");t.id="ontopanel-app",t.style="height: 450px; width: 380px; font-size: 15px; padding: 5px; ",t.innerHTML='<div id="ontopanel-container" class="ontopanel-sign"> <div id="ontopanel-sign-info">Current user:</div> <div style="display:flex"> <button id="ontopanel-signup-btn">SignUp</button> <button id="ontopanel-login-btn">Login</button> <button id="ontopanel-logout-btn" style="display:none">Logout</button> </div> </div> <div id="ontopanel-onto-btngroup" style="display:flex;height:40px"> <div style="display:flex;height:30px" id="ontopanel-onto-extra-btn"></div> <div style="display:flex;height:30px"> <button id="ontopanel-onto-extra-btn-MSEO" style="cursor:pointer"> MSEO </button> <button id="ontopanel-onto-add-btn" style="cursor:pointer">+</button> <p id="ontopanel-tree-title" style="margin:5px 0 0 30px;font-size:18px;font-weight:700"> selected: none </p> <button id="ontopanel-namespace-btn" style="border:1px soild #000;margin:5px 0 0 5px;cursor:pointer;height:20px"> ⇱ prefix </button> </div> </div> <div id="ontopanel-onto-menu-info" style="display:none"></div> <div id="ontopanel-tree-container" class="ontopanel-tree"> <div style="display:flex;height:30px"> <select class="ontopanel-setting"> <option value="URI">URI</option> <option value="RDFLabel">RDFLabel</option> </select> <button id="ontopanel-tree-class-btn">Class</button> <button id="ontopanel-tree-op-btn">OP</button> <button id="ontopanel-tree-dp-btn">DP</button> <button id="ontopanel-tree-ind-btn">Ind</button> <button id="ontopanel-tree-ap-btn">AP</button> <button id="ontopanel-tree-dt-btn">DT</button> <input id="ontopanel-search-term" style="margin-left:20px" placeholder="search entity"/> </div> <div id="onto-tree-content"> <div style="font-size:13px"> <b>Warning:</b> <br \\> 1. this entityFinder is designed for ontopanel-library, which is loaded automatically in the sidebar.<br \\> 2. Dont use this one if you use Chowlk library, use entityfinder(old).<br \\> 3. Dont use this one and old one at the same time.<br \\> <b>Switch to this one:</b> <br \\> 1. if your file contains Chowlk library, open convertor, and transform it first. Maybe also convert once to see whether it contains wrong shapes. <br \\> <b>New Features:</b> <br \\> 1. Each entity shape has hover effect and shape data.<br \\> 2. You can show entities in URI or RDFLabel.<br \\> 2. You can output the entity with RDFLabel as shape text, the IRI of entity is saved in shape data.<br \\> 4. You can do data-mapping.(Under development)<br \\> <br \\> <b>Issues:</b><br \\> Due to the server it might show problem if you upload large ontology file. It could be solved when the new server is ready. Try to merge and download locally.<br \\> </div> </div> </div> ',t.addEventListener("contextmenu",(e=>e.preventDefault())),mxUtils.br(t),mxResources.parse("entityfinder=Ontopanel-entityFinder");var n=new mxWindow(mxResources.get("entityfinder"),t,document.body.offsetWidth-480,140,390,480,!0,!0);n.destroyOnClose=!1,n.setMaximizable(!1),n.setResizable(!1),n.setClosable(!0),n.setVisible(!1);let o=t.querySelector("#ontopanel-onto-add-btn"),i=new m(t);o.onclick=e=>{e.preventDefault(),i.addTrigger()};let r=new class{constructor(e){this.app=e,this.init()}init=()=>{let e=document.createElement("div");e.innerHTML='<div id="ontopanel-sign-box" class="ontopanel-box"> <div class="box-inner"> <span class="box-close-span">&times;</span> <form id="ontopanel-signup-form" class="ontopanel-form"> <h3>Sign Up</h3> <p class="box-info"></p> <div> <input type="text" name="signEmail" autofocus placeholder="Email Address" required/> </div> <div> <input type="password" name="signPsw" autofocus placeholder="Password" pattern="[A-Za-z0-9]+" required title="Only number or letter are accepted"/> </div> <div> <input type="password" name="signPsw-repeat" autofocus placeholder="Confirm password" pattern="[A-Za-z0-9]+" required title="Only number or letter are accepted"/> </div> <button type="submit">Sign Up</button> <p style="text-align:center"> <a>Already have an account? Sign in</a> </p> </form> <form id="ontopanel-login-form" class="ontopanel-form"> <h3>Login</h3> <p class="box-info"></p> <div> <input type="text" placeholder="Email Address" autofocus name="loginEmail" required/> </div> <div> <input type="password" placeholder="Password" autofocus name="loginPsw" required/> </div> <button type="submit">Login</button> <p style="text-align:center"> <a id="ontopanel-reset-password-link">Forgot your password?</a> <br/> <a id="ontopanel-sign-link">Don\'t have an account? Create account</a> </p> </form> </div> </div> <div id="ontopanel-reset-password-box" class="ontopanel-box"> <div class="box-inner"> <span class="box-close-span">&times;</span> <div> <form id="ontopanel-reset-password-form" class="ontopanel-form"> <h3>Send email</h3> <h5 style="margin:2px">Send email first to get secret key.</h5> <p class="box-info"></p> <div> <input type="text" placeholder="Email Address" autofocus name="resetEmail" required/> </div> <button type="submit">Send email</button> </form> <hr/> <form id="ontopanel-reset-password-confirm-form" class="ontopanel-form"> <h3>Reset password confirm</h3> <h5 style="margin:2px"> Enter secret key below to reset your password. </h5> <p class="box-info"></p> <div> <input type="text" placeholder="Secrect key" autofocus name="secretKey" required/> </div> <div> <input type="password" placeholder="New password" autofocus name="resetPsw" required/> </div> <div> <input type="password" placeholder="Confirm new password" autofocus name="resetPsw-con" required/> </div> <button type="submit">Confirm</button> </form> </div> </div> </div> ',this.app.appendChild(e),e.querySelectorAll(".box-close-span").forEach((e=>{e.onclick=()=>{let t=e.parentNode.parentNode;t.style.display="none",t.querySelectorAll("form").forEach((e=>{e.querySelector(".box-info").innerText="",e.reset()}))}})),this.signLoginBox=e.querySelector("#ontopanel-sign-box"),this.signLoginBox.style.display="none",this.resetPasswordBox=e.querySelector("#ontopanel-reset-password-box"),this.resetPasswordBox.style.display="none";let t=localStorage.getItem("loginUser");t&&(t=JSON.parse(t),this.downloadOnto(t.token,t.email))};signUp=()=>{this.signLoginBox.style.display="block";let e=this.signLoginBox.querySelector("#ontopanel-signup-form"),t=this.signLoginBox.querySelector("#ontopanel-login-form");e.style.display="block",t.style.display="none",e.querySelector(".box-info").innerText="",e.reset(),e.onsubmit=e=>{e.preventDefault();let t=new FormData(e.target);this.validateSignUp(t)},e.querySelector("a").onclick=e=>{e.preventDefault(),this.login()}};login=()=>{this.signLoginBox.style.display="block";let e=this.signLoginBox.querySelector("#ontopanel-signup-form"),t=this.signLoginBox.querySelector("#ontopanel-login-form");e.style.display="none",t.style.display="block",t.querySelector(".box-info").innerText="",t.reset(),t.onsubmit=e=>{e.preventDefault();let t=new FormData(e.target);this.validateLogin(t)},t.querySelector("#ontopanel-sign-link").onclick=e=>{e.preventDefault(),this.signUp()},t.querySelector("#ontopanel-reset-password-link").onclick=e=>{e.preventDefault(),this.resetPasswordBox.style.display="block",this.resetPassword()}};logout=()=>{if(this.handleLogout(),localStorage.getItem("loginUser")){let e=JSON.parse(localStorage.getItem("loginUser")).token;localStorage.removeItem("loginUser"),fetch(l+"api/v1/user/logout/",{method:"GET",headers:new Headers({"Content-Type":"application/json",Authorization:`Token ${e}`})})}};resetPassword=()=>{this.resetPasswordBox.style.display="block";let e=this.resetPasswordBox.querySelector("#ontopanel-reset-password-form"),t=this.resetPasswordBox.querySelector("#ontopanel-reset-password-confirm-form");e.onsubmit=e=>{e.preventDefault();let t=new FormData(e.target);this.resetPasswordToggle(t)},t.onsubmit=e=>{e.preventDefault();let t=new FormData(e.target);this.resetPasswordConfirmToggle(t)}};validateSignUp=e=>{let t=e.get("signEmail").trim(),n=e.get("signPsw").trim(),o=e.get("signPsw-repeat").trim(),i=this.signLoginBox.querySelector("#ontopanel-signup-form"),r=i.querySelector(".box-info");if(o!==n)this.handleFormInfo(r,"Passwords are not equal.");else{let e={email:t,password:n};fetch(l+"api/v1/user/register/",{method:"POST",body:JSON.stringify(e),headers:new Headers({"Content-Type":"application/json"})}).then((e=>{e.ok?(this.handleFormInfo(r,"Sign Up successfully. Please login in.","green"),setTimeout((()=>{this.login(),i.reset()}),3e3)):e.json().then((e=>{let t=Object.keys(e)[0];this.handleFormInfo(r,e[t])}))})).catch((e=>{this.handleFormInfo(r,e)}))}};validateLogin=e=>{let t=this.signLoginBox.querySelector("#ontopanel-login-form"),n=t.querySelector(".box-info"),o={username:e.get("loginEmail").trim(),password:e.get("loginPsw").trim()};fetch(l+"api/v1/user/login/",{method:"POST",body:JSON.stringify(o),headers:new Headers({"Content-Type":"application/json"})}).then((e=>{e.ok?e.json().then((e=>{localStorage.setItem("loginUser",JSON.stringify(e)),this.resetAll(),this.downloadOnto(e.token,e.email),this.handleFormInfo(n,"Login successfully.","green"),setTimeout((()=>{t.reset(),this.signLoginBox.style.display="none"}),1e3)})):e.json().then((e=>{let t=Object.keys(e)[0];this.handleFormInfo(n,e[t])}))})).catch((e=>{this.handleFormInfo(n,e)}))};downloadOnto=(e,t)=>{let n=this.app.querySelector("#ontopanel-sign-info");fetch(l+"api/v1/ontos/lists/",{method:"GET",headers:new Headers({"Content-Type":"application/json",Authorization:`Token ${e}`})}).then((e=>{e.ok?e.json().then((e=>{e.forEach((e=>{let t=new u(this.app,e);this.app.querySelector("#ontopanel-onto-extra-btn").prepend(t.btn)})),n.innerText=`Current user: ${t}`,this.isLoggedIn(!0)})):e.json().then((e=>{n.innerText="Please login again",this.isLoggedIn(!1)}))})).catch((e=>{n.innerText="Please login again",this.isLoggedIn(!1)}))};resetPasswordToggle=e=>{let t=e.get("resetEmail").trim();var n=this.resetPasswordBox.querySelector("#ontopanel-reset-password-form .box-info");fetch(l+"api/v1/user/reset_password/",{method:"POST",body:JSON.stringify({email:t}),headers:new Headers({"Content-Type":"application/json"})}).then((e=>{e.ok?e.json().then((e=>{let t=Object.keys(e)[0];this.handleFormInfo(n,e[t],"green")})):e.json().then((e=>{let t=Object.keys(e)[0];this.handleFormInfo(n,e[t])}))})).catch((e=>{this.handleFormInfo(n,e)}))};resetPasswordConfirmToggle=e=>{let t=e.get("secretKey").trim(),n=e.get("resetPsw").trim(),o=e.get("resetPsw-con").trim(),i=this.resetPasswordBox.querySelector("#ontopanel-reset-password-confirm-form .box-info");n!==o?this.handleFormInfo(i,"Passwords are not equal!"):fetch(l+"api/v1/user/reset_password_confirm/",{method:"PATCH",body:JSON.stringify({secret_key:t,password:n}),headers:new Headers({"Content-Type":"application/json"})}).then((e=>{e.ok?e.json().then((e=>{let t=Object.keys(e)[0];this.handleFormInfo(i,e[t],"green"),setTimeout((()=>{this.login()}),3e3)})):e.json().then((e=>{let t=Object.keys(e)[0];this.handleFormInfo(i,e[t])}))})).catch((e=>{this.handleFormInfo(i,e)}))};resetAll=()=>{this.app.querySelector("#ontopanel-onto-extra-btn").innerText="",this.app.querySelector("#ontopanel-sign-info").innerText="",h.modifyOntoBank([],"reset"),h.loadCurrentTable(null,"reset")};handleLogout=()=>{this.isLoggedIn(!1),this.resetAll()};isLoggedIn=e=>{let t=this.app.querySelector("#ontopanel-login-btn");this.app.querySelector("#ontopanel-logout-btn").style.display=e?"block":"none",t.style.display=e?"none":"block"};handleFormInfo=(e,t,n="red")=>{e.style.color=n,e.textContent=t}}(t);t.querySelector("#ontopanel-signup-btn").onclick=e=>{e.preventDefault(),r.signUp()},t.querySelector("#ontopanel-login-btn").onclick=e=>{e.preventDefault(),r.login()},t.querySelector("#ontopanel-logout-btn").onclick=e=>{e.preventDefault(),r.logout()};let a=t.querySelector("#onto-tree-content");const s={"ontopanel-tree-class-btn":"Class","ontopanel-tree-op-btn":"ObjectProperty","ontopanel-tree-dp-btn":"DatatypeProperty","ontopanel-tree-ind-btn":"Individual","ontopanel-tree-ap-btn":"AnnotationProperty","ontopanel-tree-dt-btn":"Datatype"};Object.keys(s).forEach((o=>{t.querySelector("#"+o).onclick=o=>{let l=h.currentCategoriesContent.categories[s[o.target.id]],i=a.firstElementChild;if(l.content){let o=new class{constructor(e,t,n,o){this.app=e,this.ui=t,this.wnd=n,this.data=o,this.init()}init(){let e=document.createElement("div");e.innerHTML='<div class="tree-content"> <div style="display:flex;margin:8px 0 0 10px;font-size:17px"> <div name="cate-name">entitycate</div> <div class="collapse-btn" style="margin-left:10px">&#8853;</div> <div class="collapse-btn">&#8854;</div> </div> <div class="match-error"></div> <hr/> <div style="height:300px;overflow:auto"> <div id="ontopanel-tree-entity">tree entity</div> </div> </div> <li> <div class="li-com"> <div>--</div> <div> <div name="li-term-text">entityText</div> <div class="tree-entity-box"> <div class="tree-box-title">IRI:</div> <div name="entity-IRI" class="tree-box-content"></div> <hr/> <div class="tree-box-title">RDF label:</div> <div name="entity-label" class="tree-box-content"></div> <hr/> <div class="tree-box-title">Annotations:</div> <div name="entity-annos" class="tree-box-content"></div> <hr/> <div class="tree-box-title">SpecialInfo:</div> <div name="entity-special" class="tree-box-content"></div> <hr/> <div class="tree-box-title">Color:</div> <div name="entity-color" class="tree-box-content"></div> </div> </div> <div class="ontoterm-btn" style="margin-left:5px">▲</div> <div class="ontoterm-btn">R</div> </div> </li> ',this.treeContent=e.querySelector(".tree-content"),this.treeContent.querySelector('div[name="cate-name"]').textContent=this.data.name;let t=this.treeContent.querySelectorAll(".collapse-btn")[0],n=this.treeContent.querySelectorAll(".collapse-btn")[1],o=this.app.querySelector("#ontopanel-search-term");t.onclick=e=>{e.preventDefault(),this.collpaseAll()},n.onclick=e=>{e.preventDefault(),this.foldAll()},o.onkeyup=e=>{e.preventDefault();let t=o.value.trim().toUpperCase();this.search(t)};let l=e.querySelector("li"),i=this.treeContent.querySelector("#ontopanel-tree-entity"),r=this.data.content,a=y(this.ui,r,l,this.wnd,this.treeContent);i.replaceWith(a)}foldAll=()=>{let e=this.treeContent.querySelectorAll("ul >li");[...this.treeContent.querySelectorAll('[name="li-collapse-btn"]')].forEach((e=>{e.innerText="⊕"})),e.forEach((e=>{[...e.getElementsByTagName("ul")].forEach((e=>{e.style.display="none"}))}))};collpaseAll=()=>{let e=[...this.treeContent.querySelectorAll('[name="li-collapse-btn"]')],t=[...this.treeContent.getElementsByTagName("ul")];e.forEach((e=>{e.innerText="⊖"})),t.forEach((e=>e.style.display=""))};search=e=>{let t=this.treeContent.querySelectorAll("li");if(t.length){this.collpaseAll();let n=h.currentCategoriesContent.table;for(let o=0;o<t.length;o++){let l=t[o].querySelectorAll('div[name="li-term-text"]'),i=l[0],r=i.id.replace("li-term-",""),a=n[r].RDFLabel,s=[...l],d=s.map((e=>e.id.replace("li-term-",""))).join("\n"),p=s.map((e=>n[e.id.replace("li-term-","")].RDFLabel)).join("\n");(d||p)&&(p.toUpperCase().indexOf(e)>-1||d.toUpperCase().indexOf(e)>-1?(t[o].style.display="",a.toUpperCase().indexOf(e)>-1||r.toUpperCase().indexOf(e)>-1?i.style.backgroundColor=e?"#fddde6":"transparent":i.style.background="transparent"):(t[o].style.display="none",i.style.background="transparent"))}}}}(t,e,n,l);i.replaceWith(o.treeContent)}else i.innerHTML=""}})),t.querySelector("#ontopanel-onto-extra-btn-MSEO").onclick=e=>{e.preventDefault(),fetch("plugins/ontopanelPlugin/ontoData/mseo_ontopanel.json").then((e=>e.json())).then((e=>{e.onto_table.namespaces=h.mesoNamespace,h.modifyOntoBank(["ontopanel-onto-extra-btn-MSEO",e],"add"),h.loadCurrentTable(e)}))},t.querySelector("#ontopanel-namespace-btn").onclick=t=>{if(t.preventDefault(),"none"!==h.currentCategoriesContent.title){let o=h.ontoBank["ontopanel-onto-extra-btn-"+h.currentCategoriesContent.title].onto_table.namespaces.join("<br/>")+"<br/>",l=new mxCell(o,new mxGeometry(0,0,90,26),"shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;"),i=e.editor.graph.getPreferredSizeForCell(l);l.geometry.width=i.width+30,l.vertex=!0;let r=i.width+30,a=e.editor.graph,s=mxUtils.createXmlDocument().createElement("object");s.setAttribute("label",o),s.setAttribute("Type","Namespace"),a.getModel().setValue(l,s);let d=mxUtils.convertPoint(a.container,n.getX(),n.getY()),p=mxUtils.convertPoint(a.container,mxEvent.getClientX(t),mxEvent.getClientY(t)),c=e.editor.graph.view.translate,u=e.editor.graph.view.scale,m=d.x/u-c.x-r,y=p.y/u-c.y;const g=[l];e.editor.graph.importCells(g,m,y)}};let d=t.querySelector(".ontopanel-setting");return d.onchange=e=>{e.preventDefault(),h.setting=d.value,document.getElementById("ontopanel-tree-class-btn").click()},n})(e);e.actions.addAction("entityfinder",(function(){t.setVisible(!t.isVisible())}));let n=(e=>{var t=document.createElement("div");t.id="entityfinderold-app",t.style="height: 450px; width: 380px; font-size: 15px; padding: 5px; ",t.innerHTML=' <div class="ontopanel-sign"> <div id="entityfinderold-sign-info">Current user:</div> <div style="display:flex"> <button id="entityfinderold-signup-btn">SignUp</button> <button id="entityfinderold-login-btn">Login</button> <button id="entityfinderold-logout-btn" style="display:none">Logout</button> </div> </div> <div class="ontopanel-onto-btn-group" style="display:flex;height:40px"> <div style="display:flex;height:30px" id="entityfinderold-onto-extra-btn"></div> <div style="display:flex;height:30px"> <button id="entityfinderold-onto-extra-btn-MSEO" style="cursor:pointer"> MSEO </button> <button name="onto-add-btn" style="cursor:pointer">+</button> <p id="entityfinderold-tree-title" style="margin:5px 0 0 30px;font-size:18px;font-weight:700"> selected: none </p> <button name="namespace-btn" style="border:1px soild #000;margin:5px 0 0 5px;cursor:pointer;height:20px"> ⇱ prefix </button> </div> </div> <div id="entityfinderold-onto-menu-info" style="display:none"></div> <div id="entityfinderold-tree-container" class="ontopanel-tree"> <div style="display:flex;height:30px"> <button id="entityfinderold-tree-class-btn">Class</button> <button id="entityfinderold-tree-op-btn">OP</button> <button id="entityfinderold-tree-dp-btn">DP</button> <button id="entityfinderold-tree-ind-btn">Ind</button> <button id="entityfinderold-tree-ap-btn">AP</button> <button id="entityfinderold-tree-dt-btn">DT</button> <input id="entityfinderold-search-term" style="margin-left:50px" placeholder="search entity"/> </div> <div name="onto-tree-content"> <div> <b>Warning:</b> <br \\> 1. this version is old. New verison is ontopanel-entityFinder and is loaded.<br \\> 2. this version is only suitable for chowlk convertor, and will cause some errors if you use ontopanel-convertor.<br \\> 3. the new version has more functionalities.<br \\> <b>Switch to new version:</b> <br \\> 1. if your file contains Chowlk library, open convertor, and transform it first. Maybe also convert once to see whether it contains wrong shapes. <br \\> <br \\> <b>Issues:</b><br \\> Due to the server it might show problem if you upload large ontology file. If so, try to merge all the imported files and download it. It could be solved when the new server is ready.<br \\> </div> </div> </div> ',t.addEventListener("contextmenu",(e=>e.preventDefault())),mxUtils.br(t),mxResources.parse("entityfinderOld=entityFinder(old)");var n=new mxWindow(mxResources.get("entityfinderOld"),t,document.body.offsetWidth-480,140,390,480,!0,!0);n.destroyOnClose=!1,n.setMaximizable(!1),n.setResizable(!1),n.setClosable(!0),n.setVisible(!1);let s=t.querySelector('button[name="onto-add-btn"]'),d=new r(t);s.onclick=e=>{e.preventDefault(),d.addTrigger()};let p=new class{constructor(e){this.app=e,this.init()}init=()=>{let e=document.createElement("div");e.innerHTML='<div id="entityfinderold-sign-box" class="ontopanel-box"> <div class="box-inner"> <span class="box-close-span">&times;</span> <form id="entityfinderold-signup-form" class="ontopanel-form"> <h3>Sign Up</h3> <p class="box-info"></p> <div> <input type="text" name="signEmail" autofocus placeholder="Email Address" required/> </div> <div> <input type="password" name="signPsw" autofocus placeholder="Password" pattern="[A-Za-z0-9]+" required title="Only number or letter are accepted"/> </div> <div> <input type="password" name="signPsw-repeat" autofocus placeholder="Confirm password" pattern="[A-Za-z0-9]+" required title="Only number or letter are accepted"/> </div> <button type="submit">Sign Up</button> <p style="text-align:center"> <a>Already have an account? Sign in</a> </p> </form> <form id="entityfinderold-login-form" class="ontopanel-form"> <h3>Login</h3> <p class="box-info"></p> <div> <input type="text" placeholder="Email Address" autofocus name="loginEmail" required/> </div> <div> <input type="password" placeholder="Password" autofocus name="loginPsw" required/> </div> <button type="submit">Login</button> <p style="text-align:center"> <a id="entityfinderold-reset-password-link">Forgot your password?</a> <br/> <a id="entityfinderold-sign-link">Don\'t have an account? Create account</a> </p> </form> </div> </div> <div id="entityfinderold-reset-password-box" class="ontopanel-box"> <div class="box-inner"> <span class="box-close-span">&times;</span> <div> <form id="entityfinderold-reset-password-form" class="ontopanel-form"> <h3>Send email</h3> <h5 style="margin:2px">Send email first to get secret key.</h5> <p class="box-info"></p> <div> <input type="text" placeholder="Email Address" autofocus name="resetEmail" required/> </div> <button type="submit">Send email</button> </form> <hr/> <form id="entityfinderold-reset-password-confirm-form" class="ontopanel-form"> <h3>Reset password confirm</h3> <h5 style="margin:2px"> Enter secret key below to reset your password. </h5> <p class="box-info"></p> <div> <input type="text" placeholder="Secrect key" autofocus name="secretKey" required/> </div> <div> <input type="password" placeholder="New password" autofocus name="resetPsw" required/> </div> <div> <input type="password" placeholder="Confirm new password" autofocus name="resetPsw-con" required/> </div> <button type="submit">Confirm</button> </form> </div> </div> </div> ',this.app.appendChild(e),e.querySelectorAll(".box-close-span").forEach((e=>{e.onclick=()=>{let t=e.parentNode.parentNode;t.style.display="none",t.querySelectorAll("form").forEach((e=>{e.querySelector(".box-info").innerText="",e.reset()}))}})),this.signLoginBox=e.querySelector("#entityfinderold-sign-box"),this.signLoginBox.style.display="none",this.resetPasswordBox=e.querySelector("#entityfinderold-reset-password-box"),this.resetPasswordBox.style.display="none";let t=localStorage.getItem("loginUser");t&&(t=JSON.parse(t),this.downloadOnto(t.token,t.email))};signUp=()=>{this.signLoginBox.style.display="block";let e=this.signLoginBox.querySelector("#entityfinderold-signup-form"),t=this.signLoginBox.querySelector("#entityfinderold-login-form");e.style.display="block",t.style.display="none",e.querySelector(".box-info").innerText="",e.reset(),e.onsubmit=e=>{e.preventDefault();let t=new FormData(e.target);this.validateSignUp(t)},e.querySelector("a").onclick=e=>{e.preventDefault(),this.login()}};login=()=>{this.signLoginBox.style.display="block";let e=this.signLoginBox.querySelector("#entityfinderold-signup-form"),t=this.signLoginBox.querySelector("#entityfinderold-login-form");e.style.display="none",t.style.display="block",t.querySelector(".box-info").innerText="",t.reset(),t.onsubmit=e=>{e.preventDefault();let t=new FormData(e.target);this.validateLogin(t)},t.querySelector("#entityfinderold-sign-link").onclick=e=>{e.preventDefault(),this.signUp()},t.querySelector("#entityfinderold-reset-password-link").onclick=e=>{e.preventDefault(),this.resetPasswordBox.style.display="block",this.resetPassword()}};logout=()=>{if(this.handleLogout(),localStorage.getItem("loginUser")){let e=JSON.parse(localStorage.getItem("loginUser")).token;localStorage.removeItem("loginUser"),fetch(l+"api/v1/user/logout/",{method:"GET",headers:new Headers({"Content-Type":"application/json",Authorization:`Token ${e}`})})}};resetPassword=()=>{this.resetPasswordBox.style.display="block";let e=this.resetPasswordBox.querySelector("#entityfinderold-reset-password-form"),t=this.resetPasswordBox.querySelector("#entityfinderold-reset-password-confirm-form");e.onsubmit=e=>{e.preventDefault();let t=new FormData(e.target);this.resetPasswordToggle(t)},t.onsubmit=e=>{e.preventDefault();let t=new FormData(e.target);this.resetPasswordConfirmToggle(t)}};validateSignUp=e=>{let t=e.get("signEmail").trim(),n=e.get("signPsw").trim(),o=e.get("signPsw-repeat").trim(),i=this.signLoginBox.querySelector("#entityfinderold-signup-form"),r=i.querySelector(".box-info");if(o!==n)this.handleFormInfo(r,"Passwords are not equal.");else{let e={email:t,password:n};fetch(l+"api/v1/user/register/",{method:"POST",body:JSON.stringify(e),headers:new Headers({"Content-Type":"application/json"})}).then((e=>{e.ok?(this.handleFormInfo(r,"Sign Up successfully. Please login in.","green"),setTimeout((()=>{this.login(),i.reset()}),3e3)):e.json().then((e=>{let t=Object.keys(e)[0];this.handleFormInfo(r,e[t])}))})).catch((e=>{this.handleFormInfo(r,e)}))}};validateLogin=e=>{let t=this.signLoginBox.querySelector("#entityfinderold-login-form"),n=t.querySelector(".box-info"),o={username:e.get("loginEmail").trim(),password:e.get("loginPsw").trim()};fetch(l+"api/v1/user/login/",{method:"POST",body:JSON.stringify(o),headers:new Headers({"Content-Type":"application/json"})}).then((e=>{e.ok?e.json().then((e=>{localStorage.setItem("loginUser",JSON.stringify(e)),this.resetAll(),this.downloadOnto(e.token,e.email),this.handleFormInfo(n,"Login successfully.","green"),setTimeout((()=>{t.reset(),this.signLoginBox.style.display="none"}),1e3)})):e.json().then((e=>{let t=Object.keys(e)[0];this.handleFormInfo(n,e[t])}))})).catch((e=>{this.handleFormInfo(n,e)}))};downloadOnto=(e,t)=>{let n=this.app.querySelector("#entityfinderold-sign-info");fetch(l+"api/v1/ontos/lists/",{method:"GET",headers:new Headers({"Content-Type":"application/json",Authorization:`Token ${e}`})}).then((e=>{e.ok?e.json().then((e=>{e.forEach((e=>{let t=new i(this.app,e);this.app.querySelector("#entityfinderold-onto-extra-btn").prepend(t.btn)})),n.innerText=`Current user: ${t}`,this.isLoggedIn(!0)})):e.json().then((e=>{n.innerText="Please login again",this.isLoggedIn(!1)}))})).catch((e=>{n.innerText="Please login again",this.isLoggedIn(!1)}))};resetPasswordToggle=e=>{let t=e.get("resetEmail").trim();var n=this.resetPasswordBox.querySelector("#entityfinderold-reset-password-form .box-info");fetch(l+"api/v1/user/reset_password/",{method:"POST",body:JSON.stringify({email:t}),headers:new Headers({"Content-Type":"application/json"})}).then((e=>{e.ok?e.json().then((e=>{let t=Object.keys(e)[0];this.handleFormInfo(n,e[t],"green")})):e.json().then((e=>{let t=Object.keys(e)[0];this.handleFormInfo(n,e[t])}))})).catch((e=>{this.handleFormInfo(n,e)}))};resetPasswordConfirmToggle=e=>{let t=e.get("secretKey").trim(),n=e.get("resetPsw").trim(),o=e.get("resetPsw-con").trim(),i=this.resetPasswordBox.querySelector("#entityfinderold-reset-password-confirm-form .box-info");n!==o?this.handleFormInfo(i,"Passwords are not equal!"):fetch(l+"api/v1/user/reset_password_confirm/",{method:"PATCH",body:JSON.stringify({secret_key:t,password:n}),headers:new Headers({"Content-Type":"application/json"})}).then((e=>{e.ok?e.json().then((e=>{let t=Object.keys(e)[0];this.handleFormInfo(i,e[t],"green"),setTimeout((()=>{this.login()}),3e3)})):e.json().then((e=>{let t=Object.keys(e)[0];this.handleFormInfo(i,e[t])}))})).catch((e=>{this.handleFormInfo(i,e)}))};resetAll=()=>{this.app.querySelector("#entityfinderold-onto-extra-btn").innerText="",this.app.querySelector("#entityfinderold-sign-info").innerText="Current user:",o.modifyOntoBank([],"reset"),o.loadCurrentTable(null,"reset")};handleLogout=()=>{this.isLoggedIn(!1),this.resetAll()};isLoggedIn=e=>{let t=this.app.querySelector("#entityfinderold-login-btn");this.app.querySelector("#entityfinderold-logout-btn").style.display=e?"block":"none",t.style.display=e?"none":"block"};handleFormInfo=(e,t,n="red")=>{e.style.color=n,e.textContent=t}}(t);t.querySelector("#entityfinderold-signup-btn").onclick=e=>{e.preventDefault(),p.signUp()},t.querySelector("#entityfinderold-login-btn").onclick=e=>{e.preventDefault(),p.login()},t.querySelector("#entityfinderold-logout-btn").onclick=e=>{e.preventDefault(),p.logout()};let c=t.querySelector('div[name="onto-tree-content"]');const h={"entityfinderold-tree-class-btn":"Class","entityfinderold-tree-op-btn":"ObjectProperty","entityfinderold-tree-dp-btn":"DatatypeProperty","entityfinderold-tree-ind-btn":"Individual","entityfinderold-tree-ap-btn":"AnnotationProperty","entityfinderold-tree-dt-btn":"Datatype"};return Object.keys(h).forEach((l=>{t.querySelector("#"+l).onclick=l=>{let i=o.currentCategoriesContent.categories[h[l.target.id]],r=c.firstElementChild;if(i.content){let l=new class{constructor(e,t,n,o){this.app=e,this.ui=t,this.wnd=n,this.data=o,this.init()}init(){let e=document.createElement("div");e.innerHTML='<div class="tree-content"> <div style="display:flex;margin:8px 0 0 10px;font-size:17px"> <div name="cate-name">entitycate</div> <div class="collapse-btn" style="margin-left:10px">&#8853;</div> <div class="collapse-btn">&#8854;</div> </div> <hr/> <div style="height:300px;overflow:auto"> <div id="entityfinderold-tree-entity">tree entity</div> </div> </div> <li> <div class="li-com"> <div>--</div> <div> <div name="li-term-text">entityText</div> <div class="tree-entity-box"> <div class="tree-box-title">RDF label:</div> <div name="entity-label" class="tree-box-content"></div> <hr/> <div class="tree-box-title">Annotations:</div> <div name="entity-annos" class="tree-box-content"></div> <hr/> <div class="tree-box-title">SpecialInfo:</div> <div name="entity-special" class="tree-box-content"></div> <hr/> <div class="tree-box-title">Color:</div> <div name="entity-color" class="tree-box-content"></div> </div> </div> <div class="ontoterm-btn" style="margin-left:5px">▲</div> <div class="ontoterm-btn">R</div> </div> </li> ',this.treeContent=e.querySelector(".tree-content"),this.treeContent.querySelector('div[name="cate-name"]').textContent=this.data.name;let t=this.treeContent.querySelectorAll(".collapse-btn")[0],n=this.treeContent.querySelectorAll(".collapse-btn")[1],o=this.app.querySelector("#entityfinderold-search-term");t.onclick=e=>{e.preventDefault(),this.collpaseAll()},n.onclick=e=>{e.preventDefault(),this.foldAll()},o.onkeyup=e=>{e.preventDefault();let t=o.value.trim().toUpperCase();this.search(t)};let l=e.querySelector("li"),i=this.treeContent.querySelector("#entityfinderold-tree-entity"),r=this.data.content,s=a(this.ui,r,l,this.wnd);i.replaceWith(s)}foldAll=()=>{let e=this.treeContent.querySelectorAll("ul >li");[...this.treeContent.querySelectorAll('[name="li-collapse-btn"]')].forEach((e=>{e.innerText="⊕"})),e.forEach((e=>{[...e.getElementsByTagName("ul")].forEach((e=>{e.style.display="none"}))}))};collpaseAll=()=>{let e=[...this.treeContent.querySelectorAll('[name="li-collapse-btn"]')],t=[...this.treeContent.getElementsByTagName("ul")];e.forEach((e=>{e.innerText="⊖"})),t.forEach((e=>e.style.display=""))};search=e=>{let t=this.treeContent.querySelectorAll("li");if(t.length){this.collpaseAll();let n="entityfinderold-onto-extra-btn-"+o.currentCategoriesContent.title,l=JSON.parse(o.ontoBank[n].onto_table.table);for(let n=0;n<t.length;n++){let o=t[n].querySelectorAll('div[name="li-term-text"]'),i=o[0],r=i.textContent,a=l[r].RDFLabel,s=[...o],d=s.map((e=>e.firstChild.textContent)).join("\n"),p=s.map((e=>l[e.firstChild.textContent].RDFLabel)).join("\n");(d||p)&&(p.toUpperCase().indexOf(e)>-1||d.toUpperCase().indexOf(e)>-1?(t[n].style.display="",a.toUpperCase().indexOf(e)>-1||r.toUpperCase().indexOf(e)>-1?i.style.backgroundColor=e?"#fddde6":"transparent":i.style.background="transparent"):(t[n].style.display="none",i.style.background="transparent"))}}}}(t,e,n,i);r.replaceWith(l.treeContent)}else r.innerHTML=""}})),t.querySelector("#entityfinderold-onto-extra-btn-MSEO").onclick=e=>{e.preventDefault(),fetch("plugins/ontopanelPlugin/ontoData/mseo_ontopanel.json").then((e=>e.json())).then((e=>{e.onto_table.namespaces=o.mesoNamespace,o.modifyOntoBank(["entityfinderold-onto-extra-btn-MSEO",e],"add"),o.loadCurrentTable(e)}))},t.querySelector('button[name="namespace-btn"]').onclick=t=>{if(t.preventDefault(),o.currentCategoriesContent.title){let l=o.ontoBank["entityfinderold-onto-extra-btn-"+o.currentCategoriesContent.title].onto_table.namespaces.join("<br/>"),i=new mxCell(l+"<br/>",new mxGeometry(0,0,90,26),"shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;"),r=e.editor.graph.getPreferredSizeForCell(i);i.geometry.width=r.width+30,i.vertex=!0;let a=r.width+30,s=e.editor.graph,d=mxUtils.convertPoint(s.container,n.getX(),n.getY()),p=mxUtils.convertPoint(s.container,mxEvent.getClientX(t),mxEvent.getClientY(t)),c=e.editor.graph.view.translate,h=e.editor.graph.view.scale,u=d.x/h-c.x-a,m=p.y/h-c.y;const y=[i];e.editor.graph.importCells(y,u,m)}},n})(e);e.actions.addAction("entityfinderOld",(function(){n.setVisible(!n.isVisible())}));let s=I(e);e.actions.addAction("convertor",(function(){s.setVisible(!s.isVisible())}));var d=e.menus.get("extras"),p=d.funct;d.funct=function(t,n){p.apply(this,arguments),e.menus.addMenuItems(t,["convertor"],n),e.menus.addMenuItems(t,["entityfinder"],n),e.menus.addMenuItems(t,["entityfinderOld"],n)},fetch("https://ontopanel.herokuapp.com/api/v1/ontos/lists/",{method:"GET"}),setInterval((function(){fetch("https://ontopanel.herokuapp.com/api/v1/ontos/lists/",{method:"GET"})}),12e5)}))}},(function(e){e.h=()=>"e4dd88cab224fd7a0355"}));