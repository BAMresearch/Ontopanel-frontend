"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatedrawio_test"]("main",{

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./ontopanelSource/entityFinder/index.scss":
/*!******************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./ontopanelSource/entityFinder/index.scss ***!
  \******************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ontopanel-tree {\\n  height: 400px;\\n  border-radius: 5px;\\n}\\n.ontopanel-tree button {\\n  cursor: pointer;\\n}\\n.ontopanel-tree hr {\\n  margin-top: 4px;\\n  border: 1px solid #333;\\n}\\n.ontopanel-tree .ontopanel-setting {\\n  font-size: 10px;\\n  font-weight: bold;\\n}\\n.ontopanel-tree .tree-box-title {\\n  background-color: lightgrey;\\n}\\n.ontopanel-tree .tree-box-content {\\n  font-size: 14px;\\n  margin-top: 3px;\\n}\\n.ontopanel-tree .tree-content ul {\\n  list-style: none;\\n  padding-left: 12px;\\n}\\n.ontopanel-tree .tree-content li {\\n  margin: 3px;\\n}\\n.ontopanel-tree .tree-content hr {\\n  width: 100%;\\n  border-top: 1.5px solid black;\\n  margin-bottom: 3px;\\n}\\n.ontopanel-tree .tree-content .ontoterm-btn {\\n  color: lightgrey;\\n  border: none;\\n  padding: 0;\\n  cursor: pointer;\\n}\\n.ontopanel-tree .tree-content .ontoterm-btn:hover {\\n  color: steelblue;\\n}\\n.ontopanel-tree .tree-content .collapse-btn {\\n  color: lightgrey;\\n  border: none;\\n  padding: 0;\\n  cursor: pointer;\\n  margin-left: 5px;\\n}\\n.ontopanel-tree .tree-content .collapse-btn:hover {\\n  color: steelblue;\\n}\\n.ontopanel-tree .tree-content .match-error {\\n  display: none;\\n  font-size: 13px;\\n  color: red;\\n  margin-left: 8px;\\n}\\n.ontopanel-tree .tree-content .tree-entity-box {\\n  display: none;\\n  white-space: normal;\\n  word-break: break-all;\\n  position: relative;\\n  z-index: 10;\\n  border: 1px solid #888;\\n  width: 280px;\\n  max-height: 200px;\\n  overflow: auto;\\n  padding: 0.5rem;\\n}\\n.ontopanel-tree .tree-content .li-com {\\n  display: flex;\\n  white-space: nowrap;\\n  font-size: 14px;\\n}\\n\\n.ontopanel-app {\\n  border: 1px solid black;\\n  height: 500px;\\n  width: 500px;\\n  background-color: steelblue;\\n  font-size: 16px;\\n  padding: 5px;\\n  position: absolute;\\n}\\n\\n.ontopanel-sign {\\n  display: flex;\\n  height: 40px;\\n  justify-content: space-between;\\n}\\n.ontopanel-sign button {\\n  cursor: pointer;\\n  height: 20px;\\n}\\n\\n.onto-button {\\n  cursor: pointer;\\n}\\n.onto-button .ontopanel-menu {\\n  display: none;\\n  position: relative;\\n  z-index: 3;\\n  background-color: #fefefe;\\n  width: 80px;\\n  top: 5px;\\n}\\n.onto-button .ontopanel-menu .menu-tag {\\n  cursor: pointer;\\n  padding: 8px 10px;\\n}\\n.onto-button .ontopanel-menu .menu-tag:hover {\\n  background-color: grey;\\n}\\n\\n.ontopanel-box {\\n  position: absolute;\\n  z-index: 5;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(0, 0, 0, 0.4);\\n}\\n.ontopanel-box .box-inner {\\n  background-color: #fefefe;\\n  margin: 10% auto;\\n  padding: 15px;\\n  border: 1px solid #888;\\n  width: 60%;\\n}\\n.ontopanel-box .box-inner .box-close-span {\\n  color: #aaa;\\n  float: right;\\n  font-size: 28px;\\n  font-weight: bold;\\n  cursor: pointer;\\n}\\n.ontopanel-box .box-inner .box-close-span:hover {\\n  color: black;\\n}\\n.ontopanel-box .box-inner .ontopanel-form {\\n  height: 100%;\\n}\\n.ontopanel-box .box-inner .ontopanel-form h3 {\\n  margin: 0px;\\n}\\n.ontopanel-box .box-inner .ontopanel-form .box-info {\\n  font-weight: bold;\\n}\\n.ontopanel-box .box-inner .ontopanel-form div {\\n  margin-bottom: 0.5rem;\\n}\\n.ontopanel-box .box-inner .ontopanel-form input {\\n  padding: 0.5rem;\\n  width: 90%;\\n  background: #eeeeee;\\n  border: 1px solid #dddddd;\\n  outline: none;\\n  border-radius: 0.2em;\\n}\\n.ontopanel-box .box-inner .ontopanel-form button {\\n  font-size: 15px;\\n  width: 100%;\\n  height: 30px;\\n  margin-bottom: 0.5rem;\\n  font-weight: bold;\\n  color: #ffffff;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  border-radius: 0.2em;\\n  background: green;\\n}\\n.ontopanel-box .box-inner .ontopanel-form a {\\n  font-size: 13px;\\n  color: steelblue;\\n  text-decoration: none;\\n  cursor: pointer;\\n}\\n.ontopanel-box .box-inner .ontopanel-form p {\\n  margin: 5px;\\n}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder/index.scss?./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js");

/***/ }),

/***/ "./ontopanelSource/entityFinder/html/login-system.html":
/*!*************************************************************!*\
  !*** ./ontopanelSource/entityFinder/html/login-system.html ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Module\nvar code = \"<div id=\\\"ontopanel-sign-box\\\" class=\\\"ontopanel-box\\\"> <div class=\\\"box-inner\\\"> <span class=\\\"box-close-span\\\">&times;</span> <form id=\\\"ontopanel-signup-form\\\" class=\\\"ontopanel-form\\\"> <h3>Sign Up</h3> <p class=\\\"box-info\\\"></p> <div> <input type=\\\"text\\\" name=\\\"signEmail\\\" autofocus placeholder=\\\"Email Address\\\" required/> </div> <div> <input type=\\\"password\\\" name=\\\"signPsw\\\" autofocus placeholder=\\\"Password\\\" pattern=\\\"[A-Za-z0-9]+\\\" required title=\\\"Only number or letter are accepted\\\"/> </div> <div> <input type=\\\"password\\\" name=\\\"signPsw-repeat\\\" autofocus placeholder=\\\"Confirm password\\\" pattern=\\\"[A-Za-z0-9]+\\\" required title=\\\"Only number or letter are accepted\\\"/> </div> <button type=\\\"submit\\\">Sign Up</button> <p style=\\\"text-align:center\\\"> <a>Already have an account? Sign in</a> </p> </form> <form id=\\\"ontopanel-login-form\\\" class=\\\"ontopanel-form\\\"> <h3>Login</h3> <p class=\\\"box-info\\\"></p> <div> <input type=\\\"text\\\" placeholder=\\\"Email Address\\\" autofocus name=\\\"loginEmail\\\" required/> </div> <div> <input type=\\\"password\\\" placeholder=\\\"Password\\\" autofocus name=\\\"loginPsw\\\" required/> </div> <button type=\\\"submit\\\">Login</button> <p style=\\\"text-align:center\\\"> <a id=\\\"ontopanel-reset-password-link\\\">Forgot your password?</a> <br/> <a id=\\\"ontopanel-sign-link\\\">Don't have an account? Create account</a> </p> </form> </div> </div> <div id=\\\"ontopanel-reset-password-box\\\" class=\\\"ontopanel-box\\\"> <div class=\\\"box-inner\\\"> <span class=\\\"box-close-span\\\">&times;</span> <div> <form id=\\\"ontopanel-reset-password-form\\\" class=\\\"ontopanel-form\\\"> <h3>Send email</h3> <h5 style=\\\"margin:2px\\\">Send email first to get secret key.</h5> <p class=\\\"box-info\\\"></p> <div> <input type=\\\"text\\\" placeholder=\\\"Email Address\\\" autofocus name=\\\"resetEmail\\\" required/> </div> <button type=\\\"submit\\\">Send email</button> </form> <hr/> <form id=\\\"ontopanel-reset-password-confirm-form\\\" class=\\\"ontopanel-form\\\"> <h3>Reset password confirm</h3> <h5 style=\\\"margin:2px\\\"> Enter secret key below to reset your password. </h5> <p class=\\\"box-info\\\"></p> <div> <input type=\\\"text\\\" placeholder=\\\"Secrect key\\\" autofocus name=\\\"secretKey\\\" required/> </div> <div> <input type=\\\"password\\\" placeholder=\\\"New password\\\" autofocus name=\\\"resetPsw\\\" required/> </div> <div> <input type=\\\"password\\\" placeholder=\\\"Confirm new password\\\" autofocus name=\\\"resetPsw-con\\\" required/> </div> <button type=\\\"submit\\\">Confirm</button> </form> </div> </div> </div> \";\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder/html/login-system.html?");

/***/ }),

/***/ "./ontopanelSource/entityFinder/html/onto-button.html":
/*!************************************************************!*\
  !*** ./ontopanelSource/entityFinder/html/onto-button.html ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Module\nvar code = \"<div class=\\\"onto-button\\\"> <div name=\\\"button-name\\\" style=\\\"border:none\\\">buttonname</div> <div class=\\\"ontopanel-menu\\\" style=\\\"display:none\\\"> <div class=\\\"menu-tag\\\">Info</div> <div class=\\\"menu-tag\\\">Update</div> <div class=\\\"menu-tag\\\">Delete</div> </div> <div class=\\\"ontopanel-box\\\" style=\\\"display:none\\\"> <div class=\\\"box-inner\\\"> <span class=\\\"box-close-span\\\">&times;</span> <div name=\\\"info-detail\\\" style=\\\"overflow:auto;font-size:15px;text-align:left;white-space:nowrap\\\"></div> </div> </div> </div> \";\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder/html/onto-button.html?");

/***/ }),

/***/ "./ontopanelSource/entityFinder/html/onto-tree.html":
/*!**********************************************************!*\
  !*** ./ontopanelSource/entityFinder/html/onto-tree.html ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Module\nvar code = \"<div class=\\\"tree-content\\\"> <div style=\\\"display:flex;margin:8px 0 0 10px;font-size:17px\\\"> <div name=\\\"cate-name\\\">entitycate</div> <div class=\\\"collapse-btn\\\" style=\\\"margin-left:10px\\\">&#8853;</div> <div class=\\\"collapse-btn\\\">&#8854;</div> </div> <div class=\\\"match-error\\\"></div> <hr/> <div style=\\\"height:300px;overflow:auto\\\"> <div id=\\\"ontopanel-tree-entity\\\">tree entity</div> </div> </div> <li> <div class=\\\"li-com\\\"> <div>--</div> <div> <div name=\\\"li-term-text\\\">entityText</div> <div class=\\\"tree-entity-box\\\"> <div class=\\\"tree-box-title\\\">IRI:</div> <div name=\\\"entity-IRI\\\" class=\\\"tree-box-content\\\"></div> <hr/> <div class=\\\"tree-box-title\\\">RDF label:</div> <div name=\\\"entity-label\\\" class=\\\"tree-box-content\\\"></div> <hr/> <div class=\\\"tree-box-title\\\">Annotations:</div> <div name=\\\"entity-annos\\\" class=\\\"tree-box-content\\\"></div> <hr/> <div class=\\\"tree-box-title\\\">SpecialInfo:</div> <div name=\\\"entity-special\\\" class=\\\"tree-box-content\\\"></div> <hr/> <div class=\\\"tree-box-title\\\">Color:</div> <div name=\\\"entity-color\\\" class=\\\"tree-box-content\\\"></div> </div> </div> <div class=\\\"ontoterm-btn\\\" style=\\\"margin-left:5px\\\">▲</div> <div class=\\\"ontoterm-btn\\\">R</div> </div> </li> \";\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder/html/onto-tree.html?");

/***/ }),

/***/ "./ontopanelSource/entityFinder/html/uploader.html":
/*!*********************************************************!*\
  !*** ./ontopanelSource/entityFinder/html/uploader.html ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Module\nvar code = \"<div class=\\\"ontopanel-box\\\"> <div class=\\\"box-inner\\\"> <span class=\\\"box-close-span\\\">&times;</span> <form enctype=\\\"multipart/form-data\\\" class=\\\"ontopanel-form\\\"> <h3 style=\\\"margin:0\\\">Uploader</h3> <br/> <div> <p>Please upload a file</p> <input type=\\\"file\\\" name=\\\"formFile\\\"/> </div> <div> <p>Or <br>Enter URL of raw data</p> <input type=\\\"url\\\" name=\\\"formURL\\\" placeholder=\\\"https://example.com\\\"/> </div> <div> <p>And enter the ontology name</p> <input type=\\\"text\\\" name=\\\"formName\\\" placeholder=\\\"mseo\\\" style=\\\"width:80px\\\" maxlength=\\\"5\\\" required=\\\"true\\\"> </div> <div> <button type=\\\"submit\\\" name=\\\"upload\\\">Submit</button> <button type=\\\"submit\\\" name=\\\"update\\\" style=\\\"display:none\\\">Update</button> <span name=\\\"form-info\\\" style=\\\"display:none\\\"></span> </div> </form> </div> </div>\";\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder/html/uploader.html?");

/***/ }),

/***/ "./ontopanelSource/entityFinder/index.html":
/*!*************************************************!*\
  !*** ./ontopanelSource/entityFinder/index.html ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Module\nvar code = \"<div id=\\\"ontopanel-container\\\" class=\\\"ontopanel-sign\\\"> <div id=\\\"ontopanel-sign-info\\\">Current user:</div> <div style=\\\"display:flex\\\"> <button id=\\\"ontopanel-signup-btn\\\">SignUp</button> <button id=\\\"ontopanel-login-btn\\\">Login</button> <button id=\\\"ontopanel-logout-btn\\\" style=\\\"display:none\\\">Logout</button> </div> </div> <div id=\\\"ontopanel-onto-btngroup\\\" style=\\\"display:flex;height:40px\\\"> <div style=\\\"display:flex;height:30px\\\" id=\\\"ontopanel-onto-extra-btn\\\"></div> <div style=\\\"display:flex;height:30px\\\"> <button id=\\\"ontopanel-onto-extra-btn-MSEO\\\" style=\\\"cursor:pointer\\\"> MSEO </button> <button id=\\\"ontopanel-onto-add-btn\\\" style=\\\"cursor:pointer\\\">+</button> <p id=\\\"ontopanel-tree-title\\\" style=\\\"margin:5px 0 0 30px;font-size:18px;font-weight:700\\\"> selected: none </p> <button id=\\\"ontopanel-namespace-btn\\\" style=\\\"border:1px soild #000;margin:5px 0 0 5px;cursor:pointer;height:20px\\\"> ⇱ prefix </button> </div> </div> <div id=\\\"ontopanel-onto-menu-info\\\" style=\\\"display:none\\\"></div> <div id=\\\"ontopanel-tree-container\\\" class=\\\"ontopanel-tree\\\"> <div style=\\\"display:flex;height:30px\\\"> <select class=\\\"ontopanel-setting\\\"> <option value=\\\"URI\\\">URI</option> <option value=\\\"RDFLabel\\\">RDFLabel</option> </select> <button id=\\\"ontopanel-tree-class-btn\\\">Class</button> <button id=\\\"ontopanel-tree-op-btn\\\">OP</button> <button id=\\\"ontopanel-tree-dp-btn\\\">DP</button> <button id=\\\"ontopanel-tree-ind-btn\\\">Ind</button> <button id=\\\"ontopanel-tree-ap-btn\\\">AP</button> <button id=\\\"ontopanel-tree-dt-btn\\\">DT</button> <input id=\\\"ontopanel-search-term\\\" style=\\\"margin-left:20px\\\" placeholder=\\\"search entity\\\"/> </div> <div id=\\\"onto-tree-content\\\"> <div>treeshowhere</div> </div> </div> \";\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder/index.html?");

/***/ }),

/***/ "./ontopanelSource/entityFinder/index.scss":
/*!*************************************************!*\
  !*** ./ontopanelSource/entityFinder/index.scss ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_index_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./index.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./ontopanelSource/entityFinder/index.scss\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_index_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\nif (true) {\n  if (!_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_index_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var isNamedExport = !_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_index_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals;\n    var oldLocals = isNamedExport ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_index_scss__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_index_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals;\n\n    module.hot.accept(\n      /*! !!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./index.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./ontopanelSource/entityFinder/index.scss\",\n      __WEBPACK_OUTDATED_DEPENDENCIES__ => { /* harmony import */ _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_index_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./index.scss */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./ontopanelSource/entityFinder/index.scss\");\n(function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_index_scss__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_index_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_index_scss__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_index_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals;\n\n              update(_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_index_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n      })(__WEBPACK_OUTDATED_DEPENDENCIES__); }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_index_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_index_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_sass_loader_dist_cjs_js_index_scss__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder/index.scss?");

/***/ }),

/***/ "./ontopanelSource/entityFinder/index.js":
/*!***********************************************!*\
  !*** ./ontopanelSource/entityFinder/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeEntityWnd\": () => (/* binding */ makeEntityWnd)\n/* harmony export */ });\n/* harmony import */ var _index_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.html */ \"./ontopanelSource/entityFinder/index.html\");\n/* harmony import */ var _scripts_uploader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/uploader.js */ \"./ontopanelSource/entityFinder/scripts/uploader.js\");\n/* harmony import */ var _scripts_store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/store */ \"./ontopanelSource/entityFinder/scripts/store.js\");\n/* harmony import */ var _scripts_login_system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scripts/login-system */ \"./ontopanelSource/entityFinder/scripts/login-system.js\");\n/* harmony import */ var _scripts_onto_tree__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scripts/onto-tree */ \"./ontopanelSource/entityFinder/scripts/onto-tree.js\");\n/* harmony import */ var _index_scss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./index.scss */ \"./ontopanelSource/entityFinder/index.scss\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst makeEntityWnd = (ui) => {\r\n  var app = document.createElement(\"div\");\r\n  app.id = \"ontopanel-app\";\r\n  app.style = \"height: 450px; width: 380px; font-size: 15px; padding: 5px; \";\r\n\r\n  app.innerHTML = _index_html__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\r\n  app.addEventListener(\"contextmenu\", (evt) => evt.preventDefault());\r\n  // app.addEventListener(\"keydown\", (evt) => {\r\n  //   evt = evt || window.event;\r\n  //   var key = evt.code;\r\n\r\n  //   // Detecting Ctrl\r\n  //   var ctrl = ev.ctrlKey ? ev.ctrlKey : key === 17 ? true : false;\r\n\r\n  //   // If key pressed is V and if ctrl is true.\r\n  //   if (key == 67 && ctrl) {\r\n  //     let text = app.getSelection();\r\n  //     console.log(text);\r\n  //   }\r\n  // });\r\n\r\n  mxUtils.br(app);\r\n  mxResources.parse(\"entityFinder=Ontopanel-entityFinder\");\r\n\r\n  var wnd = new mxWindow(\r\n    mxResources.get(\"entityFinder\"),\r\n    app,\r\n    document.body.offsetWidth - 480,\r\n    140,\r\n    390,\r\n    480,\r\n    true,\r\n    true\r\n  );\r\n  wnd.destroyOnClose = false;\r\n  wnd.setMaximizable(false);\r\n  wnd.setResizable(false);\r\n  wnd.setClosable(true);\r\n  wnd.setVisible(true);\r\n\r\n  let addBtn = app.querySelector(\"#ontopanel-onto-add-btn\");\r\n  let uploader = new _scripts_uploader_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](app);\r\n  addBtn.onclick = (evt) => {\r\n    evt.preventDefault();\r\n    uploader.addTrigger();\r\n  };\r\n\r\n  let signLogin = new _scripts_login_system__WEBPACK_IMPORTED_MODULE_3__[\"default\"](app);\r\n\r\n  let signBtn = app.querySelector(\"#ontopanel-signup-btn\");\r\n  signBtn.onclick = (evt) => {\r\n    evt.preventDefault();\r\n    signLogin.signUp();\r\n  };\r\n\r\n  let loginBtn = app.querySelector(\"#ontopanel-login-btn\");\r\n  loginBtn.onclick = (evt) => {\r\n    evt.preventDefault();\r\n    signLogin.login();\r\n  };\r\n\r\n  let logoutBtn = app.querySelector(\"#ontopanel-logout-btn\");\r\n  logoutBtn.onclick = (evt) => {\r\n    evt.preventDefault();\r\n    signLogin.logout();\r\n  };\r\n\r\n  let ontoTreeContent = app.querySelector(\"#onto-tree-content\");\r\n\r\n  const categoriesBtn = {\r\n    \"ontopanel-tree-class-btn\": \"Class\",\r\n    \"ontopanel-tree-op-btn\": \"ObjectProperty\",\r\n    \"ontopanel-tree-dp-btn\": \"DatatypeProperty\",\r\n    \"ontopanel-tree-ind-btn\": \"Individual\",\r\n    \"ontopanel-tree-ap-btn\": \"AnnotationProperty\",\r\n    \"ontopanel-tree-dt-btn\": \"Datatype\",\r\n  };\r\n  Object.keys(categoriesBtn).forEach((btnName) => {\r\n    let btn = app.querySelector(\"#\" + btnName);\r\n    btn.onclick = (evt) => {\r\n      let inputData =\r\n        _scripts_store__WEBPACK_IMPORTED_MODULE_2__.storeData.currentCategoriesContent.categories[\r\n          categoriesBtn[evt.target.id]\r\n        ];\r\n      let innerTree = ontoTreeContent.firstElementChild;\r\n      if (inputData.content) {\r\n        let newTree = new _scripts_onto_tree__WEBPACK_IMPORTED_MODULE_4__[\"default\"](app, ui, wnd, inputData);\r\n        innerTree.replaceWith(newTree.treeContent);\r\n      } else {\r\n        innerTree.innerHTML = \"\";\r\n      }\r\n    };\r\n  });\r\n\r\n  app.querySelector(\"#ontopanel-onto-extra-btn-MSEO\").onclick = (evt) => {\r\n    evt.preventDefault();\r\n    fetch(\"plugins/ontopanelPlugin/ontoData/mseo_ontopanel.json\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        data.onto_table.namespaces = _scripts_store__WEBPACK_IMPORTED_MODULE_2__.storeData.mesoNamespace;\r\n        _scripts_store__WEBPACK_IMPORTED_MODULE_2__.storeData.modifyOntoBank(\r\n          [\"ontopanel-onto-extra-btn-MSEO\", data],\r\n          \"add\"\r\n        );\r\n        _scripts_store__WEBPACK_IMPORTED_MODULE_2__.storeData.loadCurrentTable(data);\r\n        console.log(_scripts_store__WEBPACK_IMPORTED_MODULE_2__.storeData.currentCategoriesContent);\r\n      });\r\n  };\r\n\r\n  app.querySelector(\"#ontopanel-namespace-btn\").onclick = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (_scripts_store__WEBPACK_IMPORTED_MODULE_2__.storeData.currentCategoriesContent.title) {\r\n      let currentOnto =\r\n        _scripts_store__WEBPACK_IMPORTED_MODULE_2__.storeData.ontoBank[\r\n          \"ontopanel-onto-extra-btn-\" + _scripts_store__WEBPACK_IMPORTED_MODULE_2__.storeData.currentCategoriesContent.title\r\n        ];\r\n\r\n      let currentNamespace = currentOnto.onto_table.namespaces.join(\"<br/>\");\r\n\r\n      let outputNamespace = currentNamespace + \"<br/>\";\r\n\r\n      let nameSpaceCell = new mxCell(\r\n        outputNamespace,\r\n        new mxGeometry(0, 0, 90, 26),\r\n        \"shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;\"\r\n      );\r\n\r\n      let size = ui.editor.graph.getPreferredSizeForCell(nameSpaceCell);\r\n      nameSpaceCell.geometry.width = size.width + 30;\r\n      nameSpaceCell.vertex = true;\r\n      let labelOffset = size.width + 30;\r\n      let graph = ui.editor.graph;\r\n\r\n      let windowPosition = mxUtils.convertPoint(\r\n        graph.container,\r\n        wnd.getX(),\r\n        wnd.getY()\r\n      );\r\n\r\n      let mousePosition = mxUtils.convertPoint(\r\n        graph.container,\r\n        mxEvent.getClientX(evt),\r\n        mxEvent.getClientY(evt)\r\n      );\r\n\r\n      let tr = ui.editor.graph.view.translate;\r\n      let scale = ui.editor.graph.view.scale;\r\n      let x = windowPosition.x / scale - tr.x - labelOffset;\r\n      let y = mousePosition.y / scale - tr.y;\r\n\r\n      const cellGround = [nameSpaceCell];\r\n      ui.editor.graph.importCells(cellGround, x, y);\r\n    }\r\n  };\r\n\r\n  let setting = app.querySelector(\".ontopanel-setting\");\r\n\r\n  setting.onchange = (evt) => {\r\n    evt.preventDefault();\r\n    _scripts_store__WEBPACK_IMPORTED_MODULE_2__.storeData.setting = setting.value;\r\n    document.getElementById(\"ontopanel-tree-class-btn\").click();\r\n  };\r\n\r\n  return wnd;\r\n};\r\n\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder/index.js?");

/***/ }),

/***/ "./ontopanelSource/entityFinder/scripts/login-system.js":
/*!**************************************************************!*\
  !*** ./ontopanelSource/entityFinder/scripts/login-system.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _onto_tree_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./onto-tree.js */ \"./ontopanelSource/entityFinder/scripts/onto-tree.js\");\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./store.js */ \"./ontopanelSource/entityFinder/scripts/store.js\");\n/* harmony import */ var _onto_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./onto-button */ \"./ontopanelSource/entityFinder/scripts/onto-button.js\");\n/* harmony import */ var _html_login_system_html__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../html/login-system.html */ \"./ontopanelSource/entityFinder/html/login-system.html\");\n/* harmony import */ var _vars_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../vars.js */ \"./ontopanelSource/vars.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass SignForm {\r\n  constructor(app) {\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n  init = () => {\r\n    let loginSystemHtml = document.createElement(\"div\");\r\n    loginSystemHtml.innerHTML = _html_login_system_html__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\r\n    this.app.appendChild(loginSystemHtml);\r\n\r\n    // close box and reset forms\r\n\r\n    let closeBox = loginSystemHtml.querySelectorAll(\".box-close-span\");\r\n    closeBox.forEach((elem) => {\r\n      elem.onclick = () => {\r\n        let parent = elem.parentNode.parentNode;\r\n        parent.style.display = \"none\";\r\n        let forms = parent.querySelectorAll(\"form\");\r\n        forms.forEach((form) => {\r\n          form.querySelector(\".box-info\").innerText = \"\";\r\n          form.reset();\r\n        });\r\n      };\r\n    });\r\n\r\n    this.signLoginBox = loginSystemHtml.querySelector(\"#ontopanel-sign-box\");\r\n    this.signLoginBox.style.display = \"none\";\r\n\r\n    this.resetPasswordBox = loginSystemHtml.querySelector(\r\n      \"#ontopanel-reset-password-box\"\r\n    );\r\n\r\n    this.resetPasswordBox.style.display = \"none\";\r\n\r\n    // login box\r\n    // automatically login in\r\n    let loginUser = localStorage.getItem(\"loginUser\");\r\n    if (loginUser) {\r\n      loginUser = JSON.parse(loginUser);\r\n      this.downloadOnto(loginUser.token, loginUser.email);\r\n    }\r\n  };\r\n\r\n  signUp = () => {\r\n    this.signLoginBox.style.display = \"block\";\r\n    let signUpForm = this.signLoginBox.querySelector(\"#ontopanel-signup-form\");\r\n    let loginForm = this.signLoginBox.querySelector(\"#ontopanel-login-form\");\r\n\r\n    signUpForm.style.display = \"block\";\r\n    loginForm.style.display = \"none\";\r\n\r\n    signUpForm.querySelector(\".box-info\").innerText = \"\";\r\n    signUpForm.reset();\r\n\r\n    signUpForm.onsubmit = (evt) => {\r\n      evt.preventDefault();\r\n      let formData = new FormData(evt.target);\r\n      this.validateSignUp(formData);\r\n    };\r\n\r\n    let linkLogin = signUpForm.querySelector(\"a\");\r\n\r\n    linkLogin.onclick = (evt) => {\r\n      evt.preventDefault();\r\n      this.login();\r\n    };\r\n  };\r\n\r\n  login = () => {\r\n    this.signLoginBox.style.display = \"block\";\r\n    let signUpForm = this.signLoginBox.querySelector(\"#ontopanel-signup-form\");\r\n    let loginForm = this.signLoginBox.querySelector(\"#ontopanel-login-form\");\r\n    signUpForm.style.display = \"none\";\r\n    loginForm.style.display = \"block\";\r\n\r\n    loginForm.querySelector(\".box-info\").innerText = \"\";\r\n    loginForm.reset();\r\n\r\n    loginForm.onsubmit = (evt) => {\r\n      evt.preventDefault();\r\n      let formData = new FormData(evt.target);\r\n      this.validateLogin(formData);\r\n    };\r\n\r\n    // links\r\n\r\n    let linkSignUp = loginForm.querySelector(\"#ontopanel-sign-link\");\r\n\r\n    linkSignUp.onclick = (evt) => {\r\n      evt.preventDefault();\r\n      this.signUp();\r\n    };\r\n\r\n    let linkResetPassword = loginForm.querySelector(\r\n      \"#ontopanel-reset-password-link\"\r\n    );\r\n\r\n    linkResetPassword.onclick = (evt) => {\r\n      evt.preventDefault();\r\n      this.resetPasswordBox.style.display = \"block\";\r\n      this.resetPassword();\r\n    };\r\n  };\r\n\r\n  logout = () => {\r\n    this.handleLogout();\r\n    if (localStorage.getItem(\"loginUser\")) {\r\n      let token = JSON.parse(localStorage.getItem(\"loginUser\")).token;\r\n      localStorage.removeItem(\"loginUser\");\r\n      fetch(_vars_js__WEBPACK_IMPORTED_MODULE_4__.hostAddress + \"api/v1/user/logout/\", {\r\n        method: \"GET\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Token ${token}`,\r\n        }),\r\n      });\r\n    }\r\n  };\r\n\r\n  resetPassword = () => {\r\n    this.resetPasswordBox.style.display = \"block\";\r\n    let resetPasswordForm = this.resetPasswordBox.querySelector(\r\n      \"#ontopanel-reset-password-form\"\r\n    );\r\n    let resetPasswordConfirmForm = this.resetPasswordBox.querySelector(\r\n      \"#ontopanel-reset-password-confirm-form\"\r\n    );\r\n    resetPasswordForm.onsubmit = (evt) => {\r\n      evt.preventDefault();\r\n      let formData = new FormData(evt.target);\r\n      this.resetPasswordToggle(formData);\r\n    };\r\n    resetPasswordConfirmForm.onsubmit = (evt) => {\r\n      evt.preventDefault();\r\n      let formData = new FormData(evt.target);\r\n      this.resetPasswordConfirmToggle(formData);\r\n    };\r\n  };\r\n\r\n  validateSignUp = (formData) => {\r\n    let email = formData.get(\"signEmail\").trim();\r\n    let password = formData.get(\"signPsw\").trim();\r\n    let passwordRepeat = formData.get(\"signPsw-repeat\").trim();\r\n\r\n    let signUpForm = this.signLoginBox.querySelector(\"#ontopanel-signup-form\");\r\n\r\n    let signLoginError = signUpForm.querySelector(\".box-info\");\r\n\r\n    if (passwordRepeat !== password) {\r\n      this.handleFormInfo(signLoginError, \"Passwords are not equal.\");\r\n    } else {\r\n      let postData = { email: email, password: password };\r\n      fetch(_vars_js__WEBPACK_IMPORTED_MODULE_4__.hostAddress + \"api/v1/user/register/\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(postData),\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            this.handleFormInfo(\r\n              signLoginError,\r\n              \"Sign Up successfully. Please login in.\",\r\n              \"green\"\r\n            );\r\n            setTimeout(() => {\r\n              this.login();\r\n              signUpForm.reset();\r\n            }, 3000);\r\n          } else {\r\n            response.json().then((text) => {\r\n              let error = Object.keys(text)[0];\r\n              this.handleFormInfo(signLoginError, text[error]);\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.handleFormInfo(signLoginError, error);\r\n        });\r\n    }\r\n  };\r\n\r\n  validateLogin = (formData) => {\r\n    let loginForm = this.signLoginBox.querySelector(\"#ontopanel-login-form\");\r\n    let signLoginError = loginForm.querySelector(\".box-info\");\r\n\r\n    let email = formData.get(\"loginEmail\").trim();\r\n    let password = formData.get(\"loginPsw\").trim();\r\n\r\n    let postData = { username: email, password: password };\r\n\r\n    fetch(_vars_js__WEBPACK_IMPORTED_MODULE_4__.hostAddress + \"api/v1/user/login/\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(postData),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          response.json().then((userInfo) => {\r\n            localStorage.setItem(\"loginUser\", JSON.stringify(userInfo));\r\n            this.resetAll();\r\n            this.downloadOnto(userInfo.token, userInfo.email);\r\n            this.handleFormInfo(signLoginError, \"Login successfully.\", \"green\");\r\n            setTimeout(() => {\r\n              loginForm.reset();\r\n              this.signLoginBox.style.display = \"none\";\r\n            }, 1000);\r\n          });\r\n        } else {\r\n          response.json().then((text) => {\r\n            let error = Object.keys(text)[0];\r\n            this.handleFormInfo(signLoginError, text[error]);\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.handleFormInfo(signLoginError, error);\r\n      });\r\n  };\r\n\r\n  downloadOnto = (token, email) => {\r\n    let panelInfo = this.app.querySelector(\"#ontopanel-sign-info\");\r\n\r\n    fetch(_vars_js__WEBPACK_IMPORTED_MODULE_4__.hostAddress + \"api/v1/ontos/lists/\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          response.json().then((text) => {\r\n            text.forEach((elem) => {\r\n              let addBtn = new _onto_button__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.app, elem);\r\n              this.app\r\n                .querySelector(\"#ontopanel-onto-extra-btn\")\r\n                .prepend(addBtn.btn);\r\n            });\r\n            panelInfo.innerText = `Current user: ${email}`;\r\n            this.isLoggedIn(true);\r\n          });\r\n        } else {\r\n          response.json().then((text) => {\r\n            panelInfo.innerText = \"Please login again\";\r\n            this.isLoggedIn(false);\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        panelInfo.innerText = \"Please login again\";\r\n        this.isLoggedIn(false);\r\n      });\r\n  };\r\n\r\n  resetPasswordToggle = (data) => {\r\n    let email = data.get(\"resetEmail\").trim();\r\n    var resetPasswordInfo = this.resetPasswordBox.querySelector(\r\n      \"#ontopanel-reset-password-form .box-info\"\r\n    );\r\n\r\n    fetch(_vars_js__WEBPACK_IMPORTED_MODULE_4__.hostAddress + \"api/v1/user/reset_password/\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ email: email }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          response.json().then((text) => {\r\n            let info = Object.keys(text)[0];\r\n            this.handleFormInfo(resetPasswordInfo, text[info], \"green\");\r\n          });\r\n        } else {\r\n          response.json().then((text) => {\r\n            let error = Object.keys(text)[0];\r\n            this.handleFormInfo(resetPasswordInfo, text[error]);\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.handleFormInfo(resetPasswordInfo, error);\r\n      });\r\n  };\r\n\r\n  resetPasswordConfirmToggle = (data) => {\r\n    let secretKey = data.get(\"secretKey\").trim();\r\n    let newPassword = data.get(\"resetPsw\").trim();\r\n    let conNewPassword = data.get(\"resetPsw-con\").trim();\r\n\r\n    let resetPasswordConfirmInfo = this.resetPasswordBox.querySelector(\r\n      \"#ontopanel-reset-password-confirm-form .box-info\"\r\n    );\r\n\r\n    if (newPassword !== conNewPassword) {\r\n      this.handleFormInfo(resetPasswordConfirmInfo, \"Passwords are not equal!\");\r\n    } else {\r\n      fetch(_vars_js__WEBPACK_IMPORTED_MODULE_4__.hostAddress + \"api/v1/user/reset_password_confirm/\", {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify({\r\n          secret_key: secretKey,\r\n          password: newPassword,\r\n        }),\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            response.json().then((text) => {\r\n              let info = Object.keys(text)[0];\r\n              this.handleFormInfo(\r\n                resetPasswordConfirmInfo,\r\n                text[info],\r\n                \"green\"\r\n              );\r\n              setTimeout(() => {\r\n                this.login();\r\n              }, 3000);\r\n            });\r\n          } else {\r\n            response.json().then((text) => {\r\n              let info = Object.keys(text)[0];\r\n              this.handleFormInfo(resetPasswordConfirmInfo, text[info]);\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.handleFormInfo(resetPasswordConfirmInfo, error);\r\n        });\r\n    }\r\n  };\r\n\r\n  resetAll = () => {\r\n    this.app.querySelector(\"#ontopanel-onto-extra-btn\").innerText = \"\";\r\n    this.app.querySelector(\"#ontopanel-sign-info\").innerText = \"\";\r\n    _store_js__WEBPACK_IMPORTED_MODULE_1__.storeData.modifyOntoBank([], \"reset\");\r\n    _store_js__WEBPACK_IMPORTED_MODULE_1__.storeData.loadCurrentTable(null, \"reset\");\r\n  };\r\n\r\n  handleLogout = () => {\r\n    this.isLoggedIn(false);\r\n    this.resetAll();\r\n  };\r\n\r\n  isLoggedIn = (value) => {\r\n    let loginBtn = this.app.querySelector(\"#ontopanel-login-btn\");\r\n    let logoutBtn = this.app.querySelector(\"#ontopanel-logout-btn\");\r\n    logoutBtn.style.display = value ? \"block\" : \"none\";\r\n    loginBtn.style.display = value ? \"none\" : \"block\";\r\n  };\r\n\r\n  handleFormInfo = (elem, input, color = \"red\") => {\r\n    elem.style.color = color;\r\n    elem.textContent = input;\r\n  };\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SignForm);\r\n\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder/scripts/login-system.js?");

/***/ }),

/***/ "./ontopanelSource/entityFinder/scripts/onto-button.js":
/*!*************************************************************!*\
  !*** ./ontopanelSource/entityFinder/scripts/onto-button.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./store.js */ \"./ontopanelSource/entityFinder/scripts/store.js\");\n/* harmony import */ var _html_onto_button_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../html/onto-button.html */ \"./ontopanelSource/entityFinder/html/onto-button.html\");\n/* harmony import */ var _uploader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./uploader.js */ \"./ontopanelSource/entityFinder/scripts/uploader.js\");\n/* harmony import */ var _vars_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../vars.js */ \"./ontopanelSource/vars.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass OntoButton {\r\n  constructor(app, data) {\r\n    this.app = app;\r\n    this.data = data;\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    // load html\r\n\r\n    this.btn = document.createElement(\"button\");\r\n    this.btn.innerHTML = _html_onto_button_html__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\n    let name = this.data[\"title\"];\r\n    this.btn.querySelector('div[name=\"button-name\"]').textContent = name;\r\n    const btnId = \"ontopanel-onto-extra-btn-\" + name;\r\n    this.btn.id = btnId;\r\n\r\n    _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.modifyOntoBank([btnId, this.data], \"add\");\r\n\r\n    this.btn.onclick = (evt) => {\r\n      evt.preventDefault();\r\n      let id = this.btn.id;\r\n      let data = _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.ontoBank[id];\r\n      _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.loadCurrentTable(data);\r\n    };\r\n\r\n    this.btn.addEventListener(\"contextmenu\", (evt) => {\r\n      evt.preventDefault();\r\n      this.triggerMenu();\r\n    });\r\n    this.btn.onmouseleave = (evt) => {\r\n      evt.preventDefault();\r\n      let menuList = this.btn.querySelector(\".ontopanel-menu\");\r\n      menuList.style.display = \"none\";\r\n    };\r\n  }\r\n  triggerMenu = () => {\r\n    let menuList = this.btn.querySelector(\".ontopanel-menu\");\r\n\r\n    // menuList\r\n\r\n    let ontoInfo = menuList.children[0];\r\n    let ontoUpdate = menuList.children[1];\r\n    let ontoDelete = menuList.children[2];\r\n\r\n    menuList.style.display = \"block\";\r\n    ontoUpdate.onclick = (evt) => {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n      menuList.style.display = \"none\";\r\n\r\n      let updateUploader = new _uploader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.app);\r\n      updateUploader.updateTigger();\r\n    };\r\n\r\n    ontoInfo.onclick = (evt) => {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n      menuList.style.display = \"none\";\r\n      this.showOntoInfo();\r\n    };\r\n\r\n    ontoDelete.onclick = (evt) => {\r\n      evt.preventDefault();\r\n      evt.stopPropagation();\r\n      menuList.style.display = \"none\";\r\n      this.deleteOnto();\r\n    };\r\n  };\r\n  showOntoInfo = () => {\r\n    let selectedId = this.btn.id;\r\n    let title = _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.ontoBank[selectedId].title;\r\n    let source = _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.ontoBank[selectedId].onto_source;\r\n    let date = _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.ontoBank[selectedId].date_created;\r\n\r\n    let ontoInfoBox = this.btn.querySelector(\".ontopanel-box\");\r\n    ontoInfoBox.onclick = (evt) => {\r\n      evt.stopPropagation();\r\n    };\r\n    let ontoInfoDetails = this.btn.querySelector('div[name=\"info-detail\"]');\r\n    let ontoInfoClosebox = this.btn.querySelector(\".box-close-span\");\r\n    ontoInfoClosebox.onclick = () => {\r\n      ontoInfoBox.style.display = \"none\";\r\n    };\r\n\r\n    ontoInfoDetails.innerHTML = `\r\n      <h4>Info about this ontology:</h4>\r\n      <ul style=\"padding-left:20px\">\r\n        <li><b>title</b>: ${title}</li>\r\n        <li><b>source</b>: ${source}</li>\r\n        <li><b>updated date</b>: ${date}</li>\r\n      </ul>\r\n      `;\r\n    ontoInfoBox.style.display = \"block\";\r\n  };\r\n  deleteOnto = () => {\r\n    let deleteId = this.btn.id;\r\n    let loginUser = localStorage.getItem(\"loginUser\");\r\n    let dbId = _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.ontoBank[deleteId].id;\r\n    if (!loginUser) {\r\n      if (\r\n        _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.ontoBank[deleteId].title ==\r\n        _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.currentCategoriesContent.title\r\n      ) {\r\n        _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.loadCurrentTable(null, \"reset\");\r\n      }\r\n      _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.modifyOntoBank([deleteId, null], \"delete\");\r\n\r\n      this.btn.remove();\r\n      this.handleInfoToggle(\"Deleted locally\", \"green\");\r\n    } else {\r\n      loginUser = JSON.parse(loginUser);\r\n      fetch(_vars_js__WEBPACK_IMPORTED_MODULE_3__.hostAddress + \"api/v1/ontos/change/\" + dbId, {\r\n        method: \"DELETE\",\r\n        headers: new Headers({\r\n          Authorization: `Token ${loginUser.token}`,\r\n        }),\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            if (\r\n              _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.ontoBank[deleteId].title ==\r\n              _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.currentCategoriesContent.title\r\n            ) {\r\n              _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.loadCurrentTable(null, \"reset\");\r\n            }\r\n            _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.modifyOntoBank([deleteId, null], \"delete\");\r\n            this.btn.remove();\r\n            this.handleInfoToggle(\"Deleted in your databank!\", \"green\");\r\n          } else {\r\n            response.json().then((text) => {\r\n              let err = Object.keys(text)[0];\r\n              this.handleInfoToggle(text[err], \"red\");\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.handleInfoToggle(error, \"red\");\r\n        });\r\n    }\r\n  };\r\n  handleInfoToggle = (err, color) => {\r\n    let menuInfo = this.app.querySelector(\"#ontopanel-onto-menu-info\");\r\n    menuInfo.innerText = err;\r\n    menuInfo.style.color = color;\r\n    menuInfo.style.display = \"block\";\r\n    setTimeout(() => {\r\n      menuInfo.style.display = \"none\";\r\n    }, 8000);\r\n  };\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OntoButton);\r\n\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder/scripts/onto-button.js?");

/***/ }),

/***/ "./ontopanelSource/entityFinder/scripts/onto-tree.js":
/*!***********************************************************!*\
  !*** ./ontopanelSource/entityFinder/scripts/onto-tree.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./store */ \"./ontopanelSource/entityFinder/scripts/store.js\");\n/* harmony import */ var _html_onto_tree_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../html/onto-tree.html */ \"./ontopanelSource/entityFinder/html/onto-tree.html\");\n\r\n\r\n\r\n// tree structure\r\n\r\nclass OntoTree {\r\n  constructor(app, ui, wnd, data) {\r\n    this.app = app;\r\n    this.ui = ui;\r\n    this.wnd = wnd;\r\n    this.data = data;\r\n    this.init();\r\n  }\r\n  init() {\r\n    let tree = document.createElement(\"div\");\r\n    tree.innerHTML = _html_onto_tree_html__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\n    this.treeContent = tree.querySelector(\".tree-content\");\r\n\r\n    let cateDiv = this.treeContent.querySelector('div[name=\"cate-name\"]');\r\n    cateDiv.textContent = this.data.name;\r\n\r\n    let expandAllBtn = this.treeContent.querySelectorAll(\".collapse-btn\")[0];\r\n    let foldAllBtn = this.treeContent.querySelectorAll(\".collapse-btn\")[1];\r\n    let searchBar = this.app.querySelector(\"#ontopanel-search-term\");\r\n    expandAllBtn.onclick = (evt) => {\r\n      evt.preventDefault();\r\n      this.collpaseAll();\r\n    };\r\n\r\n    foldAllBtn.onclick = (evt) => {\r\n      evt.preventDefault();\r\n      this.foldAll();\r\n    };\r\n\r\n    searchBar.onkeyup = (evt) => {\r\n      evt.preventDefault();\r\n      let termValue = searchBar.value.trim().toUpperCase();\r\n      this.search(termValue);\r\n    };\r\n\r\n    let liElem = tree.querySelector(\"li\");\r\n\r\n    let treeEntities = this.treeContent.querySelector(\"#ontopanel-tree-entity\");\r\n\r\n    let content = this.data.content;\r\n\r\n    let ul = buildTree(this.ui, content, liElem, this.wnd, this.treeContent);\r\n    treeEntities.replaceWith(ul);\r\n  }\r\n\r\n  foldAll = () => {\r\n    let firstLevel = this.treeContent.querySelectorAll(\"ul >li\");\r\n    let allCollapseIcon = [\r\n      ...this.treeContent.querySelectorAll('[name=\"li-collapse-btn\"]'),\r\n    ];\r\n    allCollapseIcon.forEach((icon) => {\r\n      icon.innerText = \"\\u2295\";\r\n    });\r\n    firstLevel.forEach((firstLi) => {\r\n      // next level\r\n      let nextUl = [...firstLi.getElementsByTagName(\"ul\")];\r\n      nextUl.forEach((ul) => {\r\n        ul.style.display = \"none\";\r\n      });\r\n    });\r\n  };\r\n\r\n  collpaseAll = () => {\r\n    let allCollapseIcon = [\r\n      ...this.treeContent.querySelectorAll('[name=\"li-collapse-btn\"]'),\r\n    ];\r\n    let allUl = [...this.treeContent.getElementsByTagName(\"ul\")];\r\n    allCollapseIcon.forEach((icon) => {\r\n      icon.innerText = \"\\u2296\";\r\n    });\r\n    allUl.forEach((ul) => (ul.style.display = \"\"));\r\n  };\r\n\r\n  search = (filter) => {\r\n    let li = this.treeContent.querySelectorAll(\"li\");\r\n\r\n    if (li.length) {\r\n      this.collpaseAll();\r\n\r\n      let table = _store__WEBPACK_IMPORTED_MODULE_0__.storeData.currentCategoriesContent.table;\r\n      for (let i = 0; i < li.length; i++) {\r\n        let liTermTextAll = li[i].querySelectorAll('div[name=\"li-term-text\"]');\r\n        let liTermText = liTermTextAll[0];\r\n        let entityId = liTermText.textContent;\r\n        let entityLabel = table[entityId].RDFLabel;\r\n\r\n        let c = [...liTermTextAll];\r\n        let entityIdString = c.map((x) => x.firstChild.textContent).join(\"\\n\");\r\n        let entityLabelString = c\r\n          .map((x) => table[x.firstChild.textContent].RDFLabel)\r\n          .join(\"\\n\");\r\n\r\n        if (entityIdString || entityLabelString) {\r\n          if (\r\n            entityLabelString.toUpperCase().indexOf(filter) > -1 ||\r\n            entityIdString.toUpperCase().indexOf(filter) > -1\r\n          ) {\r\n            li[i].style.display = \"\";\r\n\r\n            if (\r\n              entityLabel.toUpperCase().indexOf(filter) > -1 ||\r\n              entityId.toUpperCase().indexOf(filter) > -1\r\n            ) {\r\n              liTermText.style.backgroundColor = filter\r\n                ? \"#fddde6\"\r\n                : \"transparent\";\r\n            } else {\r\n              liTermText.style.background = \"transparent\";\r\n            }\r\n          } else {\r\n            li[i].style.display = \"none\";\r\n            liTermText.style.background = \"transparent\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\n// build tree structure\r\n\r\nconst buildTree = (ui, arr, liElem, wnd, treeContent) => {\r\n  let ul = document.createElement(\"ul\");\r\n\r\n  arr.forEach((elem) => {\r\n    let li = liElem.cloneNode(true);\r\n\r\n    let liCom = li.firstElementChild;\r\n\r\n    let liIcon = liCom.children[0];\r\n    let liText = liCom.children[1];\r\n    let liOutBtn = liCom.children[2];\r\n    let liReplaceBtn = liCom.children[3];\r\n\r\n    let liEntityText = liText.children[0];\r\n\r\n    // add id to each term, the original can have html tag, so use innerText to get it.\r\n\r\n    liEntityText.innerHTML = elem[0];\r\n    let termText = liEntityText.innerText;\r\n\r\n    if (_store__WEBPACK_IMPORTED_MODULE_0__.storeData.setting === \"RDFLabel\") {\r\n      // check if rdflabel exists\r\n\r\n      let rdfLabel =\r\n        _store__WEBPACK_IMPORTED_MODULE_0__.storeData.currentCategoriesContent.table[termText].RDFLabel;\r\n      if (rdfLabel.length) {\r\n        let newHTML = elem[0].replace(termText, rdfLabel);\r\n        liEntityText.innerHTML = newHTML;\r\n      }\r\n    }\r\n\r\n    //\r\n\r\n    //let termId = liEntityText.innerText;\r\n\r\n    let id = \"li-term-\" + termText;\r\n    liEntityText.id = id;\r\n\r\n    // show rdflabel or IRI\r\n\r\n    liEntityText.onclick = (evt) => {\r\n      evt.preventDefault();\r\n      let liEntityDetail = liText.children[1];\r\n      let newDetail = makeDetailBox(id, liEntityDetail);\r\n      console.log(newDetail);\r\n      liEntityDetail.replaceWith(newDetail);\r\n      newDetail.style.display = \"block\";\r\n      newDetail.scrollIntoView({ block: \"nearest\", inline: \"center\" });\r\n      li.onmouseleave = (evt) => {\r\n        newDetail.style.display = \"none\";\r\n      };\r\n    };\r\n\r\n    liOutBtn.onclick = (evt) => {\r\n      let text = liEntityText.innerText;\r\n      liOutBtnToggle(text, id, ui, wnd, evt);\r\n    };\r\n    liReplaceBtn.onclick = (evt) => {\r\n      try {\r\n        let text = liEntityText.innerText;\r\n        liReplaceBtnToggle(text, id, ui);\r\n      } catch (e) {\r\n        let errorDiv = treeContent.querySelector(\".match-error\");\r\n        errorDiv.innerText = e;\r\n        errorDiv.style.display = \"block\";\r\n        setTimeout(() => {\r\n          errorDiv.style.display = \"none\";\r\n        }, 8000);\r\n      }\r\n    };\r\n\r\n    ul.appendChild(li);\r\n\r\n    if (elem[1].length) {\r\n      liIcon.innerText = \"\\u2296\";\r\n      liIcon.style = \"cursor:pointer; margin-right:1px;\";\r\n      liIcon.setAttribute(\"name\", \"li-collapse-btn\");\r\n\r\n      let ulNext = buildTree(ui, elem[1], liElem, wnd, treeContent);\r\n      li.appendChild(ulNext);\r\n\r\n      liIcon.onclick = (evt) => {\r\n        let selectedLi = evt.target;\r\n        let childUl = evt.target.parentElement.nextElementSibling;\r\n\r\n        if (evt.target.innerText === \"\\u2296\") {\r\n          childUl.style.display = \"none\";\r\n          selectedLi.innerText = \"\\u2295\";\r\n        } else {\r\n          childUl.style.display = \"block\";\r\n          selectedLi.innerText = \"\\u2296\";\r\n        }\r\n      };\r\n    } else {\r\n      liIcon.innerHTML = \"--\";\r\n      liIcon.style = \"color:grey;margin-right:1px;\";\r\n\r\n      liCom.prepend(liIcon);\r\n    }\r\n  });\r\n  return ul;\r\n};\r\n\r\nconst makeDetailBox = (id, detailBox) => {\r\n  let newBox = detailBox.cloneNode(true);\r\n  let entityId = id.replace(\"li-term-\", \"\");\r\n\r\n  let table = _store__WEBPACK_IMPORTED_MODULE_0__.storeData.currentCategoriesContent.table;\r\n  let entityContent = table[entityId];\r\n\r\n  let entityIRI = newBox.querySelector('div[name=\"entity-IRI\"]');\r\n  entityIRI.innerText = entityId + \" (\" + entityContent.EntityIRI + \")\";\r\n\r\n  let rdfLabel = newBox.querySelector('div[name=\"entity-label\"]');\r\n  rdfLabel.innerText = entityContent.RDFLabel ? entityContent.RDFLabel : \"none\";\r\n\r\n  let color = newBox.querySelector('div[name=\"entity-color\"]');\r\n  color.innerText = entityContent.Color;\r\n\r\n  let annos = newBox.querySelector('div[name=\"entity-annos\"]');\r\n  annos.innerHTML = addSpecialInfo(entityContent.Annotations).innerHTML;\r\n\r\n  let specialInfo = newBox.querySelector('div[name=\"entity-special\"]');\r\n  specialInfo.innerHTML = addSpecialInfo(entityContent.SpecialInfo).innerHTML;\r\n\r\n  newBox.onclick = (evt) => {\r\n    evt.stopPropagation();\r\n  };\r\n\r\n  return newBox;\r\n};\r\n\r\nconst liOutBtnToggle = (text, id, ui, wnd, evt) => {\r\n  let entityId = id.replace(\"li-term-\", \"\");\r\n  let labelOffset = 0;\r\n  let table = _store__WEBPACK_IMPORTED_MODULE_0__.storeData.currentCategoriesContent.table;\r\n\r\n  let term = table[entityId];\r\n  let cate = term.BelongsTo;\r\n  let color = term.Color;\r\n  let label = text;\r\n\r\n  switch (cate) {\r\n    case \"Class\":\r\n      let styleString;\r\n      if (color === \"none\") {\r\n        styleString = \"rounded=0;whiteSpace=wrap;html=1;\";\r\n      } else {\r\n        styleString = `rounded=0;whiteSpace=wrap;html=1;fillColor=${color};`;\r\n      }\r\n      var colCell = new mxCell(\r\n        label,\r\n        new mxGeometry(0, 0, 90, 26),\r\n        styleString\r\n      );\r\n      var maxNameLength = label.length;\r\n\r\n      var size = ui.editor.graph.getPreferredSizeForCell(colCell);\r\n      colCell.geometry.width = size.width + maxNameLength;\r\n      colCell.vertex = true;\r\n      labelOffset = size.width + maxNameLength + 30;\r\n\r\n      break;\r\n    case \"ObjectProperty\":\r\n      var colCell = new mxCell(\r\n        label,\r\n        new mxGeometry(0, 0, 90, 26),\r\n        \"endArrow=classic;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0;entryY=0.5;entryDx=0;entryDy=0;endSize=8;arcSize=0;\"\r\n      );\r\n      var maxNameLength = label.length;\r\n      colCell.geometry.setTerminalPoint(new mxPoint(0, 0), true);\r\n      colCell.geometry.setTerminalPoint(\r\n        new mxPoint(maxNameLength * 8 + 20, 0),\r\n        false\r\n      );\r\n\r\n      colCell.edge = true;\r\n      labelOffset = maxNameLength * 8 + 20 + 30;\r\n\r\n      break;\r\n    case \"DatatypeProperty\":\r\n      var colCell = new mxCell(\r\n        label,\r\n        new mxGeometry(0, 0, 0, 0),\r\n        \"edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;fontSize=12;\"\r\n      );\r\n      var maxNameLength = label.length;\r\n\r\n      colCell.geometry.setTerminalPoint(new mxPoint(0, 0), true);\r\n      colCell.geometry.setTerminalPoint(\r\n        new mxPoint(maxNameLength * 8 + 20, 0),\r\n        false\r\n      );\r\n      colCell.edge = true;\r\n      labelOffset = maxNameLength * 8 + 20 + 30;\r\n\r\n      break;\r\n    case \"Individual\":\r\n      var colCell = new mxCell(\r\n        \"<u>\" + label + \"</u>\",\r\n        new mxGeometry(0, 0, 90, 26),\r\n        \"rounded=0;whiteSpace=wrap;html=1;\"\r\n      );\r\n      var maxNameLength = label.length;\r\n\r\n      var size = ui.editor.graph.getPreferredSizeForCell(colCell);\r\n      colCell.geometry.width = size.width + maxNameLength;\r\n      colCell.vertex = true;\r\n      labelOffset = size.width + maxNameLength + 30;\r\n      break;\r\n\r\n    case \"Datatype\":\r\n      var colCell = new mxCell(\r\n        label,\r\n        new mxGeometry(0, 0, 90, 26),\r\n        \"rounded=0;whiteSpace=wrap;html=1;fillColor=#FF8C00;\"\r\n      );\r\n      var maxNameLength = label.length;\r\n\r\n      var size = ui.editor.graph.getPreferredSizeForCell(colCell);\r\n      colCell.geometry.width = size.width + maxNameLength;\r\n      colCell.vertex = true;\r\n      labelOffset = size.width + maxNameLength + 30;\r\n      break;\r\n    case \"AnnotationProperty\":\r\n      var colCell = new mxCell(\r\n        label,\r\n        new mxGeometry(0, 0, 0, 0),\r\n        \"rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;endArrow=diamond;endFill=1;strokeWidth=1;\"\r\n      );\r\n      var maxNameLength = label.length;\r\n\r\n      colCell.geometry.setTerminalPoint(new mxPoint(0, 0), true);\r\n      colCell.geometry.setTerminalPoint(\r\n        new mxPoint(maxNameLength * 8 + 20, 0),\r\n        false\r\n      );\r\n      colCell.edge = true;\r\n      labelOffset = maxNameLength * 8 + 20 + 30;\r\n\r\n      break;\r\n  }\r\n\r\n  let attrs = { label: text, Type: cate, IRI: term.EntityIRI };\r\n\r\n  let obj = makeNewObject(attrs);\r\n\r\n  let graph = ui.editor.graph;\r\n\r\n  graph.getModel().setValue(colCell, obj);\r\n\r\n  let windowPosition = mxUtils.convertPoint(\r\n    graph.container,\r\n    wnd.getX(),\r\n    wnd.getY()\r\n  );\r\n\r\n  let mousePosition = mxUtils.convertPoint(\r\n    graph.container,\r\n    mxEvent.getClientX(evt),\r\n    mxEvent.getClientY(evt)\r\n  );\r\n  let tr = graph.view.translate;\r\n  let scale = graph.view.scale;\r\n  let x = windowPosition.x / scale - tr.x - labelOffset;\r\n  let y = mousePosition.y / scale - tr.y;\r\n\r\n  const cellGround = [colCell];\r\n  graph.importCells(cellGround, x, y);\r\n};\r\n\r\nconst liReplaceBtnToggle = (text, id, ui) => {\r\n  let entityId = id.replace(\"li-term-\", \"\");\r\n  let table = _store__WEBPACK_IMPORTED_MODULE_0__.storeData.currentCategoriesContent.table;\r\n  let term = table[entityId];\r\n  let cate = term.BelongsTo;\r\n  let color = term.Color;\r\n\r\n  let cells = ui.editor.graph.getSelectionCells();\r\n\r\n  if (cells) {\r\n    cells.forEach((cell) => {\r\n      if (typeof cell.value === \"object\") {\r\n        let label = cell.getAttribute(\"label\", null);\r\n        let cellType = cell.getAttribute(\"Type\", null);\r\n        if (cellType) {\r\n          let pattern = /(\\(.*\\))/g;\r\n          let style = cell.style;\r\n          let newStyle = makeNewStyle(cell, color);\r\n          // get text outside\r\n          let cellType_main = cellType\r\n            .replace(pattern, \"\")\r\n            .trim()\r\n            .toLowerCase();\r\n\r\n          switch (cate.toLowerCase()) {\r\n            // datatype: can show in datavalue, datatype, datatypeproperty(rectangle)\r\n            case \"datatype\":\r\n              if (cellType_main === \"datavalue\") {\r\n                let newLabel = `\"value\"^^${text}`;\r\n\r\n                let attrs = {\r\n                  label: newLabel,\r\n                  Type: cellType,\r\n                  IRI_DT: term.EntityIRI,\r\n                };\r\n\r\n                let obj = makeNewObject(attrs);\r\n                ui.editor.graph.model.setStyle(cell, newStyle);\r\n                ui.editor.graph.model.setValue(cell, obj);\r\n              } else if (cellType_main === \"datatype\") {\r\n                let newLabel = text;\r\n\r\n                let attrs = {\r\n                  label: newLabel,\r\n                  Type: cellType,\r\n                  IRI: term.EntityIRI,\r\n                };\r\n\r\n                let obj = makeNewObject(attrs);\r\n\r\n                ui.editor.graph.model.setStyle(cell, newStyle);\r\n                ui.editor.graph.model.setValue(cell, obj);\r\n              } else if (\r\n                cellType_main == \"datatypeproperty\" &&\r\n                !(style.includes(\"rhombus\") | cell.isEdge())\r\n              ) {\r\n                let IRI_DP = cell.getAttribute(\"IRI_DP\", null);\r\n                let group = label.split(\"~\");\r\n                // keep dp and add dt behind it\r\n                let dpLabel = group[0];\r\n                let groupNewLabel = dpLabel + \"~\" + text;\r\n                cellType = cellType.replace(\"NoRange\", \"YesRange\");\r\n\r\n                let attrs = {\r\n                  label: groupNewLabel,\r\n                  Type: cellType,\r\n                  IRI_DP: IRI_DP,\r\n                  IRI_DT: term.EntityIRI,\r\n                };\r\n\r\n                let obj = makeNewObject(attrs);\r\n\r\n                ui.editor.graph.model.setValue(cell, obj);\r\n              } else {\r\n                throw `The selected shape is not a datavalue or datatype or datatypeproperty(asseration)!`;\r\n              }\r\n              break;\r\n\r\n            case \"datatypeproperty\":\r\n              // datatypeproperty can in edges, rhomus shape and rectangle shape\r\n\r\n              if (cellType_main === \"datatypeproperty\") {\r\n                if (style.includes(\"rhombus\") | cell.isEdge()) {\r\n                  let newLabel = makeNewLabel(label, text);\r\n\r\n                  let attrs = {\r\n                    label: newLabel,\r\n                    Type: cellType,\r\n                    IRI: term.EntityIRI,\r\n                  };\r\n\r\n                  let obj = makeNewObject(attrs);\r\n\r\n                  ui.editor.graph.model.setStyle(cell, newStyle);\r\n                  ui.editor.graph.model.setValue(cell, obj);\r\n                } else {\r\n                  // in rectangle shape: split dp and dt: (all)ns:datatypeproperty~ns:datatype\r\n                  // only change dp\r\n\r\n                  let group = label.split(\"~\");\r\n                  let dpLabel = group[0];\r\n                  let dpNewLabel = makeNewLabel(dpLabel, text);\r\n                  let groupNewLabel = label.replace(dpLabel, dpNewLabel);\r\n                  let IRI_DT = cell.getAttribute(\"IRI_DT\", null);\r\n\r\n                  let attrs = {\r\n                    label: groupNewLabel,\r\n                    Type: cellType,\r\n                    IRI_DP: term.EntityIRI,\r\n                    IRI_DT: IRI_DT,\r\n                  };\r\n                  let obj = makeNewObject(attrs);\r\n                  ui.editor.graph.model.setStyle(cell, newStyle);\r\n                  ui.editor.graph.model.setValue(cell, obj);\r\n                }\r\n              } else {\r\n                throw `The selected shape is not a datatypeproperty!`;\r\n              }\r\n              break;\r\n\r\n            default:\r\n              // check whether the shape and entitycate matches\r\n              if (cate.toLowerCase() === cellType_main) {\r\n                let newLabel = makeNewLabel(label, text);\r\n                // make new object\r\n\r\n                if (cellType_main === \"individual\") {\r\n                  newLabel = \"<u>\" + newLabel + \"</u>\";\r\n                }\r\n                let attrs = {\r\n                  label: newLabel,\r\n                  Type: cellType,\r\n                  IRI: term.EntityIRI,\r\n                };\r\n\r\n                let obj = makeNewObject(attrs);\r\n\r\n                ui.editor.graph.model.setStyle(cell, newStyle);\r\n                ui.editor.graph.model.setValue(cell, obj);\r\n              } else {\r\n                throw `The selected shape is not a ${cate}!`;\r\n              }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nconst addSpecialInfo = (info) => {\r\n  let infodiv = document.createElement(\"div\");\r\n  if (Object.keys(info).length) {\r\n    Object.keys(info).forEach((elem) => {\r\n      if (info[elem].length) {\r\n        let div = document.createElement(\"div\");\r\n        let divTitle = document.createElement(\"div\");\r\n        let hr = document.createElement(\"hr\");\r\n        divTitle.innerText = elem;\r\n        divTitle.style.color = \"steelblue\";\r\n        divTitle.style.marginBottom = \"3px\";\r\n        let divText = document.createElement(\"div\");\r\n        divText.innerText = info[elem].join(\"\\n\");\r\n        hr.style.borderTop = \"0.5px dotted #333\";\r\n        hr.style.margin = \"5px 0px 5px 0px\";\r\n        div.append(divTitle, divText, hr);\r\n        infodiv.appendChild(div);\r\n      }\r\n    });\r\n  } else {\r\n    infodiv.innerText = \"none\";\r\n  }\r\n\r\n  return infodiv;\r\n};\r\n\r\nconst makeNewLabel = (label, text) => {\r\n  // replace the text outside <<>> or () of label with new text\r\n  // <<owl:objectproperty>>ns:a => <<owl:objectproperty>>cco:test\r\n\r\n  // cleam html tage first\r\n  let pattern = /([<<|\\(].*[>>|\\)])/g;\r\n\r\n  let div = document.createElement(\"div\");\r\n  div.innerHTML = label;\r\n  console.log(label);\r\n\r\n  let cleanedLabel = div.textContent || div.innerText || \"\";\r\n  console.log(cleanedLabel);\r\n\r\n  // get text outside\r\n  let outside = cleanedLabel.replace(pattern, \"\").trim();\r\n  // let adiv = document.createElement(\"div\");\r\n  // adiv.innerHTML = outside;\r\n  // let htmlOutside = adiv.innerHTML;\r\n\r\n  let newLabel = cleanedLabel.replace(outside, text);\r\n  let adiv = document.createElement(\"div\");\r\n  adiv.innerText = newLabel;\r\n\r\n  return adiv.innerHTML;\r\n};\r\n\r\nconst makeNewStyle = (cell, color) => {\r\n  let styleArray = cell.style.split(\";\");\r\n  let arrayWithout = styleArray.filter((elem) => !elem.includes(\"fillColor\"));\r\n  let styleColor = color === \"none\" ? \"#FFFFFF\" : color;\r\n  let newStyle = arrayWithout.join(\";\") + `fillColor=${styleColor};`;\r\n  return newStyle;\r\n};\r\n\r\nconst makeNewObject = (attrs) => {\r\n  let doc = mxUtils.createXmlDocument();\r\n  let obj = doc.createElement(\"object\");\r\n  for (let [key, value] of Object.entries(attrs)) {\r\n    obj.setAttribute(key, value);\r\n  }\r\n  return obj;\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OntoTree);\r\n\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder/scripts/onto-tree.js?");

/***/ }),

/***/ "./ontopanelSource/entityFinder/scripts/store.js":
/*!*******************************************************!*\
  !*** ./ontopanelSource/entityFinder/scripts/store.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"storeData\": () => (/* binding */ storeData)\n/* harmony export */ });\nclass Store {\r\n  constructor() {\r\n    this.mesoNamespace = [\r\n      \"base:https://purl.matolab.org/mseo/methods/example/\",\r\n      \"mid:https://purl.matolab.org/mseo/mid/\",\r\n      \"cco:http://www.ontologyrepository.com/CommonCoreOntologies/\",\r\n      \"obo:http://purl.obolibrary.org/obo/\",\r\n      \"pt:http://www.daml.org/2003/01/periodictable/PeriodicTable#\",\r\n      \"geo:http://www.opengis.net/ont/geosparql#\",\r\n    ];\r\n    this.ontoBank = { \"ontopanel-onto-extra-btn-MSEO\": {} };\r\n\r\n    // two settings, show URI or rdflabel\r\n\r\n    this.setting = URI;\r\n\r\n    this.currentCategoriesContent = {\r\n      title: null,\r\n      categories: {\r\n        Class: { name: \"Class\", content: null },\r\n        ObjectProperty: { name: \"ObjectProperty\", content: null },\r\n        DatatypeProperty: { name: \"DatatypeProperty\", content: null },\r\n        Individual: { name: \"Individual\", content: null },\r\n        AnnotationProperty: { name: \"AnnotationProperty\", content: null },\r\n        Datatype: { name: \"Datatype\", content: null },\r\n      },\r\n      // table contains details, to lookup term\r\n      table: null,\r\n    };\r\n  }\r\n  modifyOntoBank = (input, keyword) => {\r\n    // input: [key, value]\r\n    switch (keyword) {\r\n      case \"reset\":\r\n        this.ontoBank = { \"ontopanel-onto-extra-btn-MSEO\": {} };\r\n        break;\r\n      case \"add\":\r\n        this.ontoBank[input[0]] = input[1];\r\n        break;\r\n      case \"delete\":\r\n        delete this.ontoBank[input[0]];\r\n    }\r\n  };\r\n  modifyCurrentCategoriesContent = (title, data, keyword) => {\r\n    switch (keyword) {\r\n      case \"reset\":\r\n        this.currentCategoriesContent = {\r\n          title: \"none\",\r\n          categories: {\r\n            Class: { name: \"Class\", content: null },\r\n            ObjectProperty: { name: \"ObjectProperty\", content: null },\r\n            DatatypeProperty: { name: \"DatatypeProperty\", content: null },\r\n            Individual: { name: \"Individual\", content: null },\r\n            AnnotationProperty: { name: \"AnnotationProperty\", content: null },\r\n            Datatype: { name: \"Datatype\", content: null },\r\n          },\r\n          table: null,\r\n        };\r\n        break;\r\n      case \"selected\":\r\n        this.currentCategoriesContent.title = title;\r\n        Object.keys(this.currentCategoriesContent.categories).forEach(\r\n          (entity) => {\r\n            this.currentCategoriesContent.categories[entity][\"content\"] =\r\n              data[entity];\r\n          }\r\n        );\r\n\r\n        let currentTableId = \"ontopanel-onto-extra-btn-\" + title;\r\n\r\n        this.currentCategoriesContent.table = JSON.parse(\r\n          storeData.ontoBank[currentTableId].onto_table.table\r\n        );\r\n        break;\r\n    }\r\n  };\r\n\r\n  loadCurrentTable = (data, keyword = \"selected\") => {\r\n    switch (keyword) {\r\n      case \"selected\":\r\n        let tree = data.onto_table[\"tree\"];\r\n        this.modifyCurrentCategoriesContent(data.title, tree, keyword);\r\n        break;\r\n      case \"reset\":\r\n        this.modifyCurrentCategoriesContent(null, null, keyword);\r\n    }\r\n\r\n    document.getElementById(\r\n      \"ontopanel-tree-title\"\r\n    ).innerHTML = `selected: ${this.currentCategoriesContent.title}`;\r\n    console.log(\"load data\");\r\n    document.getElementById(\"ontopanel-tree-class-btn\").click();\r\n  };\r\n}\r\n\r\nlet storeData = new Store();\r\n\r\n\r\n\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder/scripts/store.js?");

/***/ }),

/***/ "./ontopanelSource/entityFinder/scripts/uploader.js":
/*!**********************************************************!*\
  !*** ./ontopanelSource/entityFinder/scripts/uploader.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./store.js */ \"./ontopanelSource/entityFinder/scripts/store.js\");\n/* harmony import */ var _html_uploader_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../html/uploader.html */ \"./ontopanelSource/entityFinder/html/uploader.html\");\n/* harmony import */ var _onto_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./onto-button */ \"./ontopanelSource/entityFinder/scripts/onto-button.js\");\n/* harmony import */ var _vars_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../vars.js */ \"./ontopanelSource/vars.js\");\n\r\n\r\n\r\n\r\n\r\nclass OntoUploader {\r\n  constructor(app) {\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    // load html\r\n    this.uploaderBox = document.createElement(\"div\");\r\n    this.uploaderBox.innerHTML = _html_uploader_html__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\r\n    this.uploaderBox.style.display = \"none\";\r\n\r\n    this.app.appendChild(this.uploaderBox);\r\n\r\n    let ontoCloseBtn = this.uploaderBox.querySelector(\".box-close-span\");\r\n\r\n    let ontoForm = this.uploaderBox.querySelector(\"form\");\r\n    this.ontoForm = ontoForm;\r\n\r\n    ontoCloseBtn.onclick = () => {\r\n      this.ontoForm.reset();\r\n      this.uploaderBox.style.display = \"none\";\r\n    };\r\n  }\r\n\r\n  addTrigger = () => {\r\n    this.uploaderBox.style.display = \"block\";\r\n    console.log(this.uploaderBox);\r\n\r\n    let formAddBtn = this.ontoForm.querySelector('button[name=\"upload\"]');\r\n    this.updateOrAddBtn(\"add\");\r\n    formAddBtn.onclick = (evt) => {\r\n      evt.preventDefault();\r\n      if (this.ontoForm.checkValidity()) {\r\n        this.ontoAddFormToggle(this.ontoForm);\r\n      } else {\r\n        this.ontoForm.reportValidity();\r\n      }\r\n    };\r\n  };\r\n\r\n  updateTigger = (updateId) => {\r\n    this.uploaderBox.style.display = \"block\";\r\n    let formUpdateBtn = this.ontoForm.querySelector('button[name=\"update\"]');\r\n    this.updateOrAddBtn(\"update\");\r\n    formUpdateBtn.onclick = (evt) => {\r\n      evt.preventDefault();\r\n      if (this.ontoForm.checkValidity()) {\r\n        this.ontoUpdateFormToggle(this.ontoForm, updateId);\r\n      } else {\r\n        this.ontoForm.reportValidity();\r\n      }\r\n    };\r\n  };\r\n\r\n  updateOrAddBtn = (keyword) => {\r\n    let formAddBtn = this.ontoForm.querySelector('button[name=\"upload\"]');\r\n    let formUpdateBtn = this.ontoForm.querySelector('button[name=\"update\"]');\r\n    formAddBtn.style.display = keyword === \"add\" ? \"block\" : \"none\";\r\n    formUpdateBtn.style.display = keyword === \"add\" ? \"none\" : \"block\";\r\n  };\r\n\r\n  ontoAddFormToggle = (target) => {\r\n    let formData = new FormData(target);\r\n    let tagName = formData.get(\"formName\").trim();\r\n    let formFile = formData.get(\"formFile\");\r\n    let formURL = formData.get(\"formURL\").trim();\r\n    let formInfo = this.ontoForm.querySelector('span[name=\"form-info\"]');\r\n\r\n    if (!(formFile.size || formURL)) {\r\n      this.handleInfoToggle(\"Please enter File or URL!\", \"red\");\r\n    } else if (\r\n      Object.keys(_store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.ontoBank).includes(\r\n        \"ontopanel-onto-extra-btn-\" + tagName\r\n      )\r\n    ) {\r\n      this.handleInfoToggle(\"this name is taken, use another one!\", \"red\");\r\n    } else {\r\n      formInfo.innerText = \"In process, please wait.\";\r\n      formInfo.style.color = \"green\";\r\n      formInfo.style.display = \"block\";\r\n      let loginUser = localStorage.getItem(\"loginUser\");\r\n      if (!loginUser) {\r\n        this.ontoAddUpdateLocal(formData);\r\n      } else {\r\n        this.ontoAddDB(formData, loginUser);\r\n      }\r\n    }\r\n  };\r\n\r\n  ontoAddUpdateLocal = (data, updateId = null, keyword = \"add\") => {\r\n    fetch(_vars_js__WEBPACK_IMPORTED_MODULE_3__.hostAddress + \"api/v1/ontos/owltable/\", {\r\n      method: \"POST\",\r\n      body: data,\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          response.json().then((text) => {\r\n            switch (keyword) {\r\n              case \"add\":\r\n                let addBtn = new _onto_button__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.app, text);\r\n                this.app\r\n                  .querySelector(\"#ontopanel-onto-extra-btn\")\r\n                  .prepend(addBtn.btn);\r\n\r\n                this.handleInfoToggle(\"Succssfully added locally!\", \"green\");\r\n\r\n                break;\r\n              case \"update\":\r\n                this.updateOntoBtn(text, updateId);\r\n                this.handleInfoToggle(\"Succssfully updated locally!\", \"green\");\r\n                break;\r\n            }\r\n            this.ontoForm.reset();\r\n          });\r\n        } else {\r\n          response.json().then((text) => {\r\n            let error = Object.keys(text)[0];\r\n            this.handleInfoToggle(text[error], \"red\");\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.handleInfoToggle(error, \"red\");\r\n      });\r\n  };\r\n\r\n  ontoAddDB = (data, loginUser) => {\r\n    loginUser = JSON.parse(loginUser);\r\n    fetch(_vars_js__WEBPACK_IMPORTED_MODULE_3__.hostAddress + \"api/v1/ontos/lists/\", {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: new Headers({\r\n        Authorization: `Token ${loginUser.token}`,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          response.json().then((text) => {\r\n            let addBtn = new _onto_button__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.app, text);\r\n            this.app\r\n              .querySelector(\"#ontopanel-onto-extra-btn\")\r\n              .prepend(addBtn.btn);\r\n\r\n            this.handleInfoToggle(\r\n              \"Succssfully added to your database!\",\r\n              \"green\"\r\n            );\r\n            this.ontoForm.reset();\r\n          });\r\n        } else {\r\n          response.json().then((text) => {\r\n            let err = Object.keys(text)[0];\r\n            this.handleInfoToggle(text[err], \"red\");\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.handleInfoToggle(error, \"red\");\r\n      });\r\n  };\r\n\r\n  ontoUpdateFormToggle = (target, updateId) => {\r\n    let formInfo = this.ontoForm.querySelector('span[name=\"form-info\"]');\r\n    let formData = new FormData(target);\r\n    let tagName = formData.get(\"formName\").trim();\r\n    let formFile = formData.get(\"formFile\");\r\n    let formURL = formData.get(\"formURL\").trim();\r\n\r\n    if (!(formFile.size || formURL)) {\r\n      this.handleInfoToggle(\"Please enter File or URL!\", \"red\");\r\n    } else if (\r\n      Object.keys(_store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.OntoBank)\r\n        .filter((elem) => elem !== updateId)\r\n        .includes(\"ontopanel-onto-extra-btn-\" + tagName)\r\n    ) {\r\n      this.handleInfoToggle(\"this name is taken, use another one!\", \"red\");\r\n    } else {\r\n      formInfo.innerText = \"In process, please wait.\";\r\n      formInfo.style = \"color: green; display:block;\";\r\n      let loginUser = localStorage.getItem(\"loginUser\");\r\n      if (!loginUser) {\r\n        this.ontoAddUpdateLocal(formData, updateId, \"update\");\r\n      } else {\r\n        this.ontoUpdateDB(formData, updateId, loginUser);\r\n      }\r\n    }\r\n  };\r\n\r\n  updateOntoBtn = (data, updateId) => {\r\n    let thisBtn = this.app.querySelector(\"#\" + updateId);\r\n    let ontoName = data[\"title\"];\r\n    thisBtn.innerText = ontoName;\r\n    const newId = \"ontopanel-onto-extra-btn-\" + ontoName;\r\n    thisBtn.id = newId;\r\n    _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.modifyOntoBank([updateId, null], \"delete\");\r\n    _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.modifyOntoBank([newId, data], \"add\");\r\n    _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.loadCurrentTable(data);\r\n  };\r\n\r\n  ontoUpdateDB = (data, updateId, loginUser) => {\r\n    loginUser = JSON.parse(loginUser);\r\n    let dbId = _store_js__WEBPACK_IMPORTED_MODULE_0__.storeData.OntoBank[updateId].id;\r\n\r\n    fetch(_vars_js__WEBPACK_IMPORTED_MODULE_3__.hostAddress + \"api/v1/ontos/change/\" + dbId, {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: new Headers({\r\n        Authorization: `Token ${loginUser.token}`,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          response.json().then((text) => {\r\n            this.updateOntoBtn(text, updateId);\r\n            this.handleInfoToggle(\r\n              \"Succssfully updated in your databank!\",\r\n              \"green\"\r\n            );\r\n            this.ontoForm.reset();\r\n          });\r\n        } else {\r\n          response.json().then((text) => {\r\n            let err = Object.keys(text)[0];\r\n            this.handleInfoToggle(text[err], \"red\");\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.handleInfoToggle(error, \"red\");\r\n      });\r\n  };\r\n  handleInfoToggle = (err, color) => {\r\n    let formInfo = this.uploaderBox.querySelector('span[name=\"form-info\"]');\r\n    formInfo.innerText = err;\r\n    formInfo.style.color = color;\r\n    formInfo.style.display = \"block\";\r\n    setTimeout(() => {\r\n      formInfo.style.display = \"none\";\r\n    }, 8000);\r\n  };\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (OntoUploader);\r\n\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder/scripts/uploader.js?");

/***/ }),

/***/ "./ontopanelSource/ontopanel.js":
/*!**************************************!*\
  !*** ./ontopanelSource/ontopanel.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _entityFinder_version1_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./entityFinder_version1/index.js */ \"./ontopanelSource/entityFinder_version1/index.js\");\n/* harmony import */ var _entityFinder_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./entityFinder/index.js */ \"./ontopanelSource/entityFinder/index.js\");\n/* harmony import */ var _convertor_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./convertor/index.js */ \"./ontopanelSource/convertor/index.js\");\n\r\n\r\n\r\n\r\n// too plugins\r\n// entityTool to show entities\r\n// convertorTool to convertor plot\r\n\r\nDraw.loadPlugin(function (ui) {\r\n  let entityFinderWnd = (0,_entityFinder_index_js__WEBPACK_IMPORTED_MODULE_1__.makeEntityWnd)(ui);\r\n  ui.actions.addAction(\"entityfinder\", function () {\r\n    entityFinderWnd.setVisible(!entityFinderWnd.isVisible());\r\n  });\r\n\r\n  let entityFinderWndOld = (0,_entityFinder_version1_index_js__WEBPACK_IMPORTED_MODULE_0__.makeEntityWnd)(ui);\r\n  ui.actions.addAction(\"entityfinderOld\", function () {\r\n    entityFinderWndOld.setVisible(!entityFinderWndOld.isVisible());\r\n  });\r\n\r\n  let convertorWnd = (0,_convertor_index_js__WEBPACK_IMPORTED_MODULE_2__.makeConvertorWnd)(ui);\r\n  ui.actions.addAction(\"convertor\", function () {\r\n    convertorWnd.setVisible(!convertorWnd.isVisible());\r\n  });\r\n\r\n  var menu = ui.menus.get(\"extras\");\r\n  var oldFunct = menu.funct;\r\n\r\n  menu.funct = function (menu, parent) {\r\n    oldFunct.apply(this, arguments);\r\n    ui.menus.addMenuItems(menu, [\"convertor\"], parent);\r\n    ui.menus.addMenuItems(menu, [\"entityfinder\"], parent);\r\n    ui.menus.addMenuItems(menu, [\"entityfinderOld\"], parent);\r\n  };\r\n\r\n  // active backend\r\n  fetch(\"https://ontopanel.herokuapp.com/api/v1/ontos/lists/\", {\r\n    method: \"GET\",\r\n  });\r\n\r\n  setInterval(function () {\r\n    fetch(\"https://ontopanel.herokuapp.com/api/v1/ontos/lists/\", {\r\n      method: \"GET\",\r\n    });\r\n  }, 20 * 1000 * 60);\r\n});\r\n\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/ontopanel.js?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("95011d41a4bcb8f2b153")
/******/ })();
/******/ 
/******/ }
);