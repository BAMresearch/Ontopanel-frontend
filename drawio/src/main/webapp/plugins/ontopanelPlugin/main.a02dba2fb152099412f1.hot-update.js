"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatedrawio_test"]("main",{

/***/ "./ontopanelSource/entityFinder_version1/html/login-system.html":
/*!**********************************************************************!*\
  !*** ./ontopanelSource/entityFinder_version1/html/login-system.html ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Module\nvar code = \"<div id=\\\"entityfinderold-sign-box\\\" class=\\\"ontopanel-box\\\"> <div class=\\\"box-inner\\\"> <span class=\\\"box-close-span\\\">&times;</span> <form id=\\\"entityfinderold-signup-form\\\" class=\\\"ontopanel-form\\\"> <h3>Sign Up</h3> <p class=\\\"box-info\\\"></p> <div> <input type=\\\"text\\\" name=\\\"signEmail\\\" autofocus placeholder=\\\"Email Address\\\" required/> </div> <div> <input type=\\\"password\\\" name=\\\"signPsw\\\" autofocus placeholder=\\\"Password\\\" pattern=\\\"[A-Za-z0-9]+\\\" required title=\\\"Only number or letter are accepted\\\"/> </div> <div> <input type=\\\"password\\\" name=\\\"signPsw-repeat\\\" autofocus placeholder=\\\"Confirm password\\\" pattern=\\\"[A-Za-z0-9]+\\\" required title=\\\"Only number or letter are accepted\\\"/> </div> <button type=\\\"submit\\\">Sign Up</button> <p style=\\\"text-align:center\\\"> <a>Already have an account? Sign in</a> </p> </form> <form id=\\\"entityfinderold-login-form\\\" class=\\\"ontopanel-form\\\"> <h3>Login</h3> <p class=\\\"box-info\\\"></p> <div> <input type=\\\"text\\\" placeholder=\\\"Email Address\\\" autofocus name=\\\"loginEmail\\\" required/> </div> <div> <input type=\\\"password\\\" placeholder=\\\"Password\\\" autofocus name=\\\"loginPsw\\\" required/> </div> <button type=\\\"submit\\\">Login</button> <p style=\\\"text-align:center\\\"> <a id=\\\"entityfinderold-reset-password-link\\\">Forgot your password?</a> <br/> <a id=\\\"entityfinderold-sign-link\\\">Don't have an account? Create account</a> </p> </form> </div> </div> <div id=\\\"entityfinderold-reset-password-box\\\" class=\\\"ontopanel-box\\\"> <div class=\\\"box-inner\\\"> <span class=\\\"box-close-span\\\">&times;</span> <div> <form id=\\\"entityfinderold-reset-password-form\\\" class=\\\"ontopanel-form\\\"> <h3>Send email</h3> <h5 style=\\\"margin:2px\\\">Send email first to get secret key.</h5> <p class=\\\"box-info\\\"></p> <div> <input type=\\\"text\\\" placeholder=\\\"Email Address\\\" autofocus name=\\\"resetEmail\\\" required/> </div> <button type=\\\"submit\\\">Send email</button> </form> <hr/> <form id=\\\"entityfinderold-reset-password-confirm-form\\\" class=\\\"ontopanel-form\\\"> <h3>Reset password confirm</h3> <h5 style=\\\"margin:2px\\\"> Enter secret key below to reset your password. </h5> <p class=\\\"box-info\\\"></p> <div> <input type=\\\"text\\\" placeholder=\\\"Secrect key\\\" autofocus name=\\\"secretKey\\\" required/> </div> <div> <input type=\\\"password\\\" placeholder=\\\"New password\\\" autofocus name=\\\"resetPsw\\\" required/> </div> <div> <input type=\\\"password\\\" placeholder=\\\"Confirm new password\\\" autofocus name=\\\"resetPsw-con\\\" required/> </div> <button type=\\\"submit\\\">Confirm</button> </form> </div> </div> </div> \";\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder_version1/html/login-system.html?");

/***/ }),

/***/ "./ontopanelSource/entityFinder_version1/html/onto-tree.html":
/*!*******************************************************************!*\
  !*** ./ontopanelSource/entityFinder_version1/html/onto-tree.html ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Module\nvar code = \"<div class=\\\"tree-content\\\"> <div style=\\\"display:flex;margin:8px 0 0 10px;font-size:17px\\\"> <div name=\\\"cate-name\\\">entitycate</div> <div class=\\\"collapse-btn\\\" style=\\\"margin-left:10px\\\">&#8853;</div> <div class=\\\"collapse-btn\\\">&#8854;</div> </div> <hr/> <div style=\\\"height:300px;overflow:auto\\\"> <div id=\\\"entityfinderold-tree-entity\\\">tree entity</div> </div> </div> <li> <div class=\\\"li-com\\\"> <div>--</div> <div> <div name=\\\"li-term-text\\\">entityText</div> <div class=\\\"tree-entity-box\\\"> <div class=\\\"tree-box-title\\\">RDF label:</div> <div name=\\\"entity-label\\\" class=\\\"tree-box-content\\\"></div> <hr/> <div class=\\\"tree-box-title\\\">Annotations:</div> <div name=\\\"entity-annos\\\" class=\\\"tree-box-content\\\"></div> <hr/> <div class=\\\"tree-box-title\\\">SpecialInfo:</div> <div name=\\\"entity-special\\\" class=\\\"tree-box-content\\\"></div> <hr/> <div class=\\\"tree-box-title\\\">Color:</div> <div name=\\\"entity-color\\\" class=\\\"tree-box-content\\\"></div> </div> </div> <div class=\\\"ontoterm-btn\\\" style=\\\"margin-left:5px\\\">â–²</div> <div class=\\\"ontoterm-btn\\\">R</div> </div> </li> \";\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (code);\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder_version1/html/onto-tree.html?");

/***/ }),

/***/ "./ontopanelSource/entityFinder_version1/scripts/login-system.js":
/*!***********************************************************************!*\
  !*** ./ontopanelSource/entityFinder_version1/scripts/login-system.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _onto_tree_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./onto-tree.js */ \"./ontopanelSource/entityFinder_version1/scripts/onto-tree.js\");\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./store.js */ \"./ontopanelSource/entityFinder_version1/scripts/store.js\");\n/* harmony import */ var _onto_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./onto-button */ \"./ontopanelSource/entityFinder_version1/scripts/onto-button.js\");\n/* harmony import */ var _html_login_system_html__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../html/login-system.html */ \"./ontopanelSource/entityFinder_version1/html/login-system.html\");\n/* harmony import */ var _vars_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../vars.js */ \"./ontopanelSource/vars.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass SignForm {\r\n  constructor(app) {\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n  init = () => {\r\n    let loginSystemHtml = document.createElement(\"div\");\r\n    loginSystemHtml.innerHTML = _html_login_system_html__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\r\n    this.app.appendChild(loginSystemHtml);\r\n\r\n    // close box and reset forms\r\n\r\n    let closeBox = loginSystemHtml.querySelectorAll(\".box-close-span\");\r\n    closeBox.forEach((elem) => {\r\n      elem.onclick = () => {\r\n        let parent = elem.parentNode.parentNode;\r\n        parent.style.display = \"none\";\r\n        let forms = parent.querySelectorAll(\"form\");\r\n        forms.forEach((form) => {\r\n          form.querySelector(\".box-info\").innerText = \"\";\r\n          form.reset();\r\n        });\r\n      };\r\n    });\r\n\r\n    this.signLoginBox = loginSystemHtml.querySelector(\r\n      \"#entityfinderold-sign-box\"\r\n    );\r\n    this.signLoginBox.style.display = \"none\";\r\n\r\n    this.resetPasswordBox = loginSystemHtml.querySelector(\r\n      \"#entityfinderold-reset-password-box\"\r\n    );\r\n\r\n    this.resetPasswordBox.style.display = \"none\";\r\n\r\n    // login box\r\n    // automatically login in\r\n    let loginUser = localStorage.getItem(\"loginUser\");\r\n    if (loginUser) {\r\n      loginUser = JSON.parse(loginUser);\r\n      this.downloadOnto(loginUser.token, loginUser.email);\r\n    }\r\n  };\r\n\r\n  signUp = () => {\r\n    this.signLoginBox.style.display = \"block\";\r\n    let signUpForm = this.signLoginBox.querySelector(\r\n      \"#entityfinderold-signup-form\"\r\n    );\r\n    let loginForm = this.signLoginBox.querySelector(\r\n      \"#entityfinderold-login-form\"\r\n    );\r\n\r\n    signUpForm.style.display = \"block\";\r\n    loginForm.style.display = \"none\";\r\n\r\n    signUpForm.querySelector(\".box-info\").innerText = \"\";\r\n    signUpForm.reset();\r\n\r\n    signUpForm.onsubmit = (evt) => {\r\n      evt.preventDefault();\r\n      let formData = new FormData(evt.target);\r\n      this.validateSignUp(formData);\r\n    };\r\n\r\n    let linkLogin = signUpForm.querySelector(\"a\");\r\n\r\n    linkLogin.onclick = (evt) => {\r\n      evt.preventDefault();\r\n      this.login();\r\n    };\r\n  };\r\n\r\n  login = () => {\r\n    this.signLoginBox.style.display = \"block\";\r\n    let signUpForm = this.signLoginBox.querySelector(\r\n      \"#entityfinderold-signup-form\"\r\n    );\r\n    let loginForm = this.signLoginBox.querySelector(\r\n      \"#entityfinderold-login-form\"\r\n    );\r\n    signUpForm.style.display = \"none\";\r\n    loginForm.style.display = \"block\";\r\n\r\n    loginForm.querySelector(\".box-info\").innerText = \"\";\r\n    loginForm.reset();\r\n\r\n    loginForm.onsubmit = (evt) => {\r\n      evt.preventDefault();\r\n      let formData = new FormData(evt.target);\r\n      this.validateLogin(formData);\r\n    };\r\n\r\n    // links\r\n\r\n    let linkSignUp = loginForm.querySelector(\"#entityfinderold-sign-link\");\r\n\r\n    linkSignUp.onclick = (evt) => {\r\n      evt.preventDefault();\r\n      this.signUp();\r\n    };\r\n\r\n    let linkResetPassword = loginForm.querySelector(\r\n      \"#entityfinderold-reset-password-link\"\r\n    );\r\n\r\n    linkResetPassword.onclick = (evt) => {\r\n      evt.preventDefault();\r\n      this.resetPasswordBox.style.display = \"block\";\r\n      this.resetPassword();\r\n    };\r\n  };\r\n\r\n  logout = () => {\r\n    this.handleLogout();\r\n    if (localStorage.getItem(\"loginUser\")) {\r\n      let token = JSON.parse(localStorage.getItem(\"loginUser\")).token;\r\n      localStorage.removeItem(\"loginUser\");\r\n      fetch(_vars_js__WEBPACK_IMPORTED_MODULE_4__.hostAddress + \"api/v1/user/logout/\", {\r\n        method: \"GET\",\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Token ${token}`,\r\n        }),\r\n      });\r\n    }\r\n  };\r\n\r\n  resetPassword = () => {\r\n    this.resetPasswordBox.style.display = \"block\";\r\n    let resetPasswordForm = this.resetPasswordBox.querySelector(\r\n      \"#entityfinderold-reset-password-form\"\r\n    );\r\n    let resetPasswordConfirmForm = this.resetPasswordBox.querySelector(\r\n      \"#entityfinderold-reset-password-confirm-form\"\r\n    );\r\n    resetPasswordForm.onsubmit = (evt) => {\r\n      evt.preventDefault();\r\n      let formData = new FormData(evt.target);\r\n      this.resetPasswordToggle(formData);\r\n    };\r\n    resetPasswordConfirmForm.onsubmit = (evt) => {\r\n      evt.preventDefault();\r\n      let formData = new FormData(evt.target);\r\n      this.resetPasswordConfirmToggle(formData);\r\n    };\r\n  };\r\n\r\n  validateSignUp = (formData) => {\r\n    let email = formData.get(\"signEmail\").trim();\r\n    let password = formData.get(\"signPsw\").trim();\r\n    let passwordRepeat = formData.get(\"signPsw-repeat\").trim();\r\n\r\n    let signUpForm = this.signLoginBox.querySelector(\r\n      \"#entityfinderold-signup-form\"\r\n    );\r\n\r\n    let signLoginError = signUpForm.querySelector(\".box-info\");\r\n\r\n    if (passwordRepeat !== password) {\r\n      this.handleFormInfo(signLoginError, \"Passwords are not equal.\");\r\n    } else {\r\n      let postData = { email: email, password: password };\r\n      fetch(_vars_js__WEBPACK_IMPORTED_MODULE_4__.hostAddress + \"api/v1/user/register/\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(postData),\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            this.handleFormInfo(\r\n              signLoginError,\r\n              \"Sign Up successfully. Please login in.\",\r\n              \"green\"\r\n            );\r\n            setTimeout(() => {\r\n              this.login();\r\n              signUpForm.reset();\r\n            }, 3000);\r\n          } else {\r\n            response.json().then((text) => {\r\n              let error = Object.keys(text)[0];\r\n              this.handleFormInfo(signLoginError, text[error]);\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.handleFormInfo(signLoginError, error);\r\n        });\r\n    }\r\n  };\r\n\r\n  validateLogin = (formData) => {\r\n    let loginForm = this.signLoginBox.querySelector(\r\n      \"#entityfinderold-login-form\"\r\n    );\r\n    let signLoginError = loginForm.querySelector(\".box-info\");\r\n\r\n    let email = formData.get(\"loginEmail\").trim();\r\n    let password = formData.get(\"loginPsw\").trim();\r\n\r\n    let postData = { username: email, password: password };\r\n\r\n    fetch(_vars_js__WEBPACK_IMPORTED_MODULE_4__.hostAddress + \"api/v1/user/login/\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(postData),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          response.json().then((userInfo) => {\r\n            localStorage.setItem(\"loginUser\", JSON.stringify(userInfo));\r\n            this.resetAll();\r\n            this.downloadOnto(userInfo.token, userInfo.email);\r\n            this.handleFormInfo(signLoginError, \"Login successfully.\", \"green\");\r\n            setTimeout(() => {\r\n              loginForm.reset();\r\n              this.signLoginBox.style.display = \"none\";\r\n            }, 1000);\r\n          });\r\n        } else {\r\n          response.json().then((text) => {\r\n            let error = Object.keys(text)[0];\r\n            this.handleFormInfo(signLoginError, text[error]);\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.handleFormInfo(signLoginError, error);\r\n      });\r\n  };\r\n\r\n  downloadOnto = (token, email) => {\r\n    let panelInfo = this.app.querySelector(\"#entityfinderold-sign-info\");\r\n\r\n    fetch(_vars_js__WEBPACK_IMPORTED_MODULE_4__.hostAddress + \"api/v1/ontos/lists/\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Token ${token}`,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          response.json().then((text) => {\r\n            text.forEach((elem) => {\r\n              let addBtn = new _onto_button__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.app, elem);\r\n              this.app\r\n                .querySelector(\"#entityfinderold-onto-extra-btn\")\r\n                .prepend(addBtn.btn);\r\n            });\r\n            panelInfo.innerText = `Current user: ${email}`;\r\n            this.isLoggedIn(true);\r\n          });\r\n        } else {\r\n          response.json().then((text) => {\r\n            panelInfo.innerText = \"Please login again\";\r\n            this.isLoggedIn(false);\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        panelInfo.innerText = \"Please login again\";\r\n        this.isLoggedIn(false);\r\n      });\r\n  };\r\n\r\n  resetPasswordToggle = (data) => {\r\n    let email = data.get(\"resetEmail\").trim();\r\n    var resetPasswordInfo = this.resetPasswordBox.querySelector(\r\n      \"#entityfinderold-reset-password-form .box-info\"\r\n    );\r\n\r\n    fetch(_vars_js__WEBPACK_IMPORTED_MODULE_4__.hostAddress + \"api/v1/user/reset_password/\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ email: email }),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          response.json().then((text) => {\r\n            let info = Object.keys(text)[0];\r\n            this.handleFormInfo(resetPasswordInfo, text[info], \"green\");\r\n          });\r\n        } else {\r\n          response.json().then((text) => {\r\n            let error = Object.keys(text)[0];\r\n            this.handleFormInfo(resetPasswordInfo, text[error]);\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.handleFormInfo(resetPasswordInfo, error);\r\n      });\r\n  };\r\n\r\n  resetPasswordConfirmToggle = (data) => {\r\n    let secretKey = data.get(\"secretKey\").trim();\r\n    let newPassword = data.get(\"resetPsw\").trim();\r\n    let conNewPassword = data.get(\"resetPsw-con\").trim();\r\n\r\n    let resetPasswordConfirmInfo = this.resetPasswordBox.querySelector(\r\n      \"#entityfinderold-reset-password-confirm-form .box-info\"\r\n    );\r\n\r\n    if (newPassword !== conNewPassword) {\r\n      this.handleFormInfo(resetPasswordConfirmInfo, \"Passwords are not equal!\");\r\n    } else {\r\n      fetch(_vars_js__WEBPACK_IMPORTED_MODULE_4__.hostAddress + \"api/v1/user/reset_password_confirm/\", {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify({\r\n          secret_key: secretKey,\r\n          password: newPassword,\r\n        }),\r\n        headers: new Headers({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            response.json().then((text) => {\r\n              let info = Object.keys(text)[0];\r\n              this.handleFormInfo(\r\n                resetPasswordConfirmInfo,\r\n                text[info],\r\n                \"green\"\r\n              );\r\n              setTimeout(() => {\r\n                this.login();\r\n              }, 3000);\r\n            });\r\n          } else {\r\n            response.json().then((text) => {\r\n              let info = Object.keys(text)[0];\r\n              this.handleFormInfo(resetPasswordConfirmInfo, text[info]);\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          this.handleFormInfo(resetPasswordConfirmInfo, error);\r\n        });\r\n    }\r\n  };\r\n\r\n  resetAll = () => {\r\n    this.app.querySelector(\"#entityfinderold-onto-extra-btn\").innerText = \"\";\r\n    this.app.querySelector(\"#entityfinderold-sign-info\").innerText = \"\";\r\n    _store_js__WEBPACK_IMPORTED_MODULE_1__.storeData.modifyOntoBank([], \"reset\");\r\n    _store_js__WEBPACK_IMPORTED_MODULE_1__.storeData.loadCurrentTable(null, \"reset\");\r\n  };\r\n\r\n  handleLogout = () => {\r\n    this.isLoggedIn(false);\r\n    this.resetAll();\r\n  };\r\n\r\n  isLoggedIn = (value) => {\r\n    let loginBtn = this.app.querySelector(\"#entityfinderold-login-btn\");\r\n    let logoutBtn = this.app.querySelector(\"#entityfinderold-logout-btn\");\r\n    logoutBtn.style.display = value ? \"block\" : \"none\";\r\n    loginBtn.style.display = value ? \"none\" : \"block\";\r\n  };\r\n\r\n  handleFormInfo = (elem, input, color = \"red\") => {\r\n    elem.style.color = color;\r\n    elem.textContent = input;\r\n  };\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SignForm);\r\n\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder_version1/scripts/login-system.js?");

/***/ }),

/***/ "./ontopanelSource/entityFinder_version1/scripts/store.js":
/*!****************************************************************!*\
  !*** ./ontopanelSource/entityFinder_version1/scripts/store.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"storeData\": () => (/* binding */ storeData)\n/* harmony export */ });\nclass Store {\r\n  constructor() {\r\n    this.mesoNamespace = [\r\n      \"base:https://purl.matolab.org/mseo/methods/example/\",\r\n      \"mid:https://purl.matolab.org/mseo/mid/\",\r\n      \"cco:http://www.ontologyrepository.com/CommonCoreOntologies/\",\r\n      \"obo:http://purl.obolibrary.org/obo/\",\r\n      \"pt:http://www.daml.org/2003/01/periodictable/PeriodicTable#\",\r\n      \"geo:http://www.opengis.net/ont/geosparql#\",\r\n    ];\r\n    this.ontoBank = { \"entityfinderold-onto-extra-btn-MSEO\": {} };\r\n\r\n    this.currentCategoriesContent = {\r\n      title: \"none\",\r\n      categories: {\r\n        Class: { name: \"Class\", content: null },\r\n        ObjectProperty: { name: \"ObjectProperty\", content: null },\r\n        DatatypeProperty: { name: \"DatatypeProperty\", content: null },\r\n        Individual: { name: \"Individual\", content: null },\r\n        AnnotationProperty: { name: \"AnnotationProperty\", content: null },\r\n        Datatype: { name: \"Datatype\", content: null },\r\n      },\r\n    };\r\n  }\r\n  modifyOntoBank = (input, keyword) => {\r\n    // input: [key, value]\r\n    switch (keyword) {\r\n      case \"reset\":\r\n        this.ontoBank = { \"entityfinderold-onto-extra-btn-MSEO\": {} };\r\n        break;\r\n      case \"add\":\r\n        this.ontoBank[input[0]] = input[1];\r\n        break;\r\n      case \"delete\":\r\n        delete this.ontoBank[input[0]];\r\n    }\r\n  };\r\n  modifyCurrentCategoriesContent = (title, data, keyword) => {\r\n    switch (keyword) {\r\n      case \"reset\":\r\n        this.currentCategoriesContent = {\r\n          title: \"none\",\r\n          categories: {\r\n            Class: { name: \"Class\", content: null },\r\n            ObjectProperty: { name: \"ObjectProperty\", content: null },\r\n            DatatypeProperty: { name: \"DatatypeProperty\", content: null },\r\n            Individual: { name: \"Individual\", content: null },\r\n            AnnotationProperty: { name: \"AnnotationProperty\", content: null },\r\n            Datatype: { name: \"Datatype\", content: null },\r\n          },\r\n        };\r\n        break;\r\n      case \"selected\":\r\n        this.currentCategoriesContent.title = title;\r\n        Object.keys(this.currentCategoriesContent.categories).forEach(\r\n          (entity) => {\r\n            this.currentCategoriesContent.categories[entity][\"content\"] =\r\n              data[entity];\r\n          }\r\n        );\r\n        break;\r\n    }\r\n  };\r\n\r\n  loadCurrentTable = (data, keyword = \"selected\") => {\r\n    switch (keyword) {\r\n      case \"selected\":\r\n        let tree = data.onto_table[\"tree\"];\r\n        this.modifyCurrentCategoriesContent(data.title, tree, keyword);\r\n        break;\r\n      case \"reset\":\r\n        this.modifyCurrentCategoriesContent(null, null, keyword);\r\n    }\r\n\r\n    document.getElementById(\r\n      \"entityfinderold-tree-title\"\r\n    ).innerHTML = `selected: ${this.currentCategoriesContent.title}`;\r\n    document.getElementById(\"entityfinderold-tree-class-btn\").click();\r\n  };\r\n}\r\n\r\nlet storeData = new Store();\r\n\r\n\r\n\n\n//# sourceURL=webpack://drawio_test/./ontopanelSource/entityFinder_version1/scripts/store.js?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("c5860bb27bf8d36d3df9")
/******/ })();
/******/ 
/******/ }
);